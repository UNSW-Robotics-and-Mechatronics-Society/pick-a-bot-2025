"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@zag-js";
exports.ids = ["vendor-chunks/@zag-js"];
exports.modules = {

/***/ "(ssr)/./node_modules/@zag-js/accordion/dist/index.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/@zag-js/accordion/dist/index.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   itemProps: () => (/* binding */ itemProps),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitItemProps: () => (/* binding */ splitItemProps),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n// src/accordion.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"accordion\").parts(\"root\", \"item\", \"itemTrigger\", \"itemContent\", \"itemIndicator\");\nvar parts = anatomy.build();\nvar getRootId = (ctx) => ctx.ids?.root ?? `accordion:${ctx.id}`;\nvar getItemId = (ctx, value) => ctx.ids?.item?.(value) ?? `accordion:${ctx.id}:item:${value}`;\nvar getItemContentId = (ctx, value) => ctx.ids?.itemContent?.(value) ?? `accordion:${ctx.id}:content:${value}`;\nvar getItemTriggerId = (ctx, value) => ctx.ids?.itemTrigger?.(value) ?? `accordion:${ctx.id}:trigger:${value}`;\nvar getRootEl = (ctx) => ctx.getById(getRootId(ctx));\nvar getTriggerEls = (ctx) => {\n  const ownerId = CSS.escape(getRootId(ctx));\n  const selector = `[aria-controls][data-ownedby='${ownerId}']:not([disabled])`;\n  return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.queryAll)(getRootEl(ctx), selector);\n};\nvar getFirstTriggerEl = (ctx) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.first)(getTriggerEls(ctx));\nvar getLastTriggerEl = (ctx) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.last)(getTriggerEls(ctx));\nvar getNextTriggerEl = (ctx, id) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.nextById)(getTriggerEls(ctx), getItemTriggerId(ctx, id));\nvar getPrevTriggerEl = (ctx, id) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.prevById)(getTriggerEls(ctx), getItemTriggerId(ctx, id));\n\n// src/accordion.connect.ts\nfunction connect(service, normalize) {\n  const { send, context, prop, scope, computed } = service;\n  const focusedValue = context.get(\"focusedValue\");\n  const value = context.get(\"value\");\n  const multiple = prop(\"multiple\");\n  function setValue(value2) {\n    let nextValue = value2;\n    if (!multiple && nextValue.length > 1) {\n      nextValue = [nextValue[0]];\n    }\n    send({ type: \"VALUE.SET\", value: nextValue });\n  }\n  function getItemState(props2) {\n    return {\n      expanded: value.includes(props2.value),\n      focused: focusedValue === props2.value,\n      disabled: Boolean(props2.disabled ?? prop(\"disabled\"))\n    };\n  }\n  return {\n    focusedValue,\n    value,\n    setValue,\n    getItemState,\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        dir: prop(\"dir\"),\n        id: getRootId(scope),\n        \"data-orientation\": prop(\"orientation\")\n      });\n    },\n    getItemProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        ...parts.item.attrs,\n        dir: prop(\"dir\"),\n        id: getItemId(scope, props2.value),\n        \"data-state\": itemState.expanded ? \"open\" : \"closed\",\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.focused),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.disabled),\n        \"data-orientation\": prop(\"orientation\")\n      });\n    },\n    getItemContentProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        ...parts.itemContent.attrs,\n        dir: prop(\"dir\"),\n        role: \"region\",\n        id: getItemContentId(scope, props2.value),\n        \"aria-labelledby\": getItemTriggerId(scope, props2.value),\n        hidden: !itemState.expanded,\n        \"data-state\": itemState.expanded ? \"open\" : \"closed\",\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.disabled),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.focused),\n        \"data-orientation\": prop(\"orientation\")\n      });\n    },\n    getItemIndicatorProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        ...parts.itemIndicator.attrs,\n        dir: prop(\"dir\"),\n        \"aria-hidden\": true,\n        \"data-state\": itemState.expanded ? \"open\" : \"closed\",\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.disabled),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.focused),\n        \"data-orientation\": prop(\"orientation\")\n      });\n    },\n    getItemTriggerProps(props2) {\n      const { value: value2 } = props2;\n      const itemState = getItemState(props2);\n      return normalize.button({\n        ...parts.itemTrigger.attrs,\n        type: \"button\",\n        dir: prop(\"dir\"),\n        id: getItemTriggerId(scope, value2),\n        \"aria-controls\": getItemContentId(scope, value2),\n        \"aria-expanded\": itemState.expanded,\n        disabled: itemState.disabled,\n        \"data-orientation\": prop(\"orientation\"),\n        \"aria-disabled\": itemState.disabled,\n        \"data-state\": itemState.expanded ? \"open\" : \"closed\",\n        \"data-ownedby\": getRootId(scope),\n        onFocus() {\n          if (itemState.disabled) return;\n          send({ type: \"TRIGGER.FOCUS\", value: value2 });\n        },\n        onBlur() {\n          if (itemState.disabled) return;\n          send({ type: \"TRIGGER.BLUR\" });\n        },\n        onClick(event) {\n          if (itemState.disabled) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isSafari)()) {\n            event.currentTarget.focus();\n          }\n          send({ type: \"TRIGGER.CLICK\", value: value2 });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (itemState.disabled) return;\n          const keyMap = {\n            ArrowDown() {\n              if (computed(\"isHorizontal\")) return;\n              send({ type: \"GOTO.NEXT\", value: value2 });\n            },\n            ArrowUp() {\n              if (computed(\"isHorizontal\")) return;\n              send({ type: \"GOTO.PREV\", value: value2 });\n            },\n            ArrowRight() {\n              if (!computed(\"isHorizontal\")) return;\n              send({ type: \"GOTO.NEXT\", value: value2 });\n            },\n            ArrowLeft() {\n              if (!computed(\"isHorizontal\")) return;\n              send({ type: \"GOTO.PREV\", value: value2 });\n            },\n            Home() {\n              send({ type: \"GOTO.FIRST\", value: value2 });\n            },\n            End() {\n              send({ type: \"GOTO.LAST\", value: value2 });\n            }\n          };\n          const key = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventKey)(event, {\n            dir: prop(\"dir\"),\n            orientation: prop(\"orientation\")\n          });\n          const exec = keyMap[key];\n          if (exec) {\n            exec(event);\n            event.preventDefault();\n          }\n        }\n      });\n    }\n  };\n}\nvar { and, not } = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createGuards)();\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)({\n  props({ props: props2 }) {\n    return {\n      collapsible: false,\n      multiple: false,\n      orientation: \"vertical\",\n      defaultValue: [],\n      ...props2\n    };\n  },\n  initialState() {\n    return \"idle\";\n  },\n  context({ prop, bindable }) {\n    return {\n      focusedValue: bindable(() => ({\n        defaultValue: null,\n        sync: true,\n        onChange(value) {\n          prop(\"onFocusChange\")?.({ value });\n        }\n      })),\n      value: bindable(() => ({\n        defaultValue: prop(\"defaultValue\"),\n        value: prop(\"value\"),\n        onChange(value) {\n          prop(\"onValueChange\")?.({ value });\n        }\n      }))\n    };\n  },\n  computed: {\n    isHorizontal: ({ prop }) => prop(\"orientation\") === \"horizontal\"\n  },\n  on: {\n    \"VALUE.SET\": {\n      actions: [\"setValue\"]\n    }\n  },\n  states: {\n    idle: {\n      on: {\n        \"TRIGGER.FOCUS\": {\n          target: \"focused\",\n          actions: [\"setFocusedValue\"]\n        }\n      }\n    },\n    focused: {\n      on: {\n        \"GOTO.NEXT\": {\n          actions: [\"focusNextTrigger\"]\n        },\n        \"GOTO.PREV\": {\n          actions: [\"focusPrevTrigger\"]\n        },\n        \"TRIGGER.CLICK\": [\n          {\n            guard: and(\"isExpanded\", \"canToggle\"),\n            actions: [\"collapse\"]\n          },\n          {\n            guard: not(\"isExpanded\"),\n            actions: [\"expand\"]\n          }\n        ],\n        \"GOTO.FIRST\": {\n          actions: [\"focusFirstTrigger\"]\n        },\n        \"GOTO.LAST\": {\n          actions: [\"focusLastTrigger\"]\n        },\n        \"TRIGGER.BLUR\": {\n          target: \"idle\",\n          actions: [\"clearFocusedValue\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      canToggle: ({ prop }) => !!prop(\"collapsible\") || !!prop(\"multiple\"),\n      isExpanded: ({ context, event }) => context.get(\"value\").includes(event.value)\n    },\n    actions: {\n      collapse({ context, prop, event }) {\n        const next = prop(\"multiple\") ? (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.remove)(context.get(\"value\"), event.value) : [];\n        context.set(\"value\", next);\n      },\n      expand({ context, prop, event }) {\n        const next = prop(\"multiple\") ? (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.add)(context.get(\"value\"), event.value) : [event.value];\n        context.set(\"value\", next);\n      },\n      focusFirstTrigger({ scope }) {\n        getFirstTriggerEl(scope)?.focus();\n      },\n      focusLastTrigger({ scope }) {\n        getLastTriggerEl(scope)?.focus();\n      },\n      focusNextTrigger({ context, scope }) {\n        const focusedValue = context.get(\"focusedValue\");\n        if (!focusedValue) return;\n        const triggerEl = getNextTriggerEl(scope, focusedValue);\n        triggerEl?.focus();\n      },\n      focusPrevTrigger({ context, scope }) {\n        const focusedValue = context.get(\"focusedValue\");\n        if (!focusedValue) return;\n        const triggerEl = getPrevTriggerEl(scope, focusedValue);\n        triggerEl?.focus();\n      },\n      setFocusedValue({ context, event }) {\n        context.set(\"focusedValue\", event.value);\n      },\n      clearFocusedValue({ context }) {\n        context.set(\"focusedValue\", null);\n      },\n      setValue({ context, event }) {\n        context.set(\"value\", event.value);\n      },\n      coarseValue({ context, prop }) {\n        if (!prop(\"multiple\") && context.get(\"value\").length > 1) {\n          (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.warn)(`The value of accordion should be a single value when multiple is false.`);\n          context.set(\"value\", [context.get(\"value\")[0]]);\n        }\n      }\n    }\n  }\n});\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_4__.createProps)()([\n  \"collapsible\",\n  \"dir\",\n  \"disabled\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"multiple\",\n  \"onFocusChange\",\n  \"onValueChange\",\n  \"orientation\",\n  \"value\",\n  \"defaultValue\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(props);\nvar itemProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_4__.createProps)()([\"value\", \"disabled\"]);\nvar splitItemProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(itemProps);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/accordion/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs":
/*!*****************************************************!*\
  !*** ./node_modules/@zag-js/anatomy/dist/index.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAnatomy: () => (/* binding */ createAnatomy)\n/* harmony export */ });\n// src/create-anatomy.ts\nvar createAnatomy = (name, parts = []) => ({\n  parts: (...values) => {\n    if (isEmpty(parts)) {\n      return createAnatomy(name, values);\n    }\n    throw new Error(\"createAnatomy().parts(...) should only be called once. Did you mean to use .extendWith(...) ?\");\n  },\n  extendWith: (...values) => createAnatomy(name, [...parts, ...values]),\n  rename: (newName) => createAnatomy(newName, parts),\n  keys: () => parts,\n  build: () => [...new Set(parts)].reduce(\n    (prev, part) => Object.assign(prev, {\n      [part]: {\n        selector: [\n          `&[data-scope=\"${toKebabCase(name)}\"][data-part=\"${toKebabCase(part)}\"]`,\n          `& [data-scope=\"${toKebabCase(name)}\"][data-part=\"${toKebabCase(part)}\"]`\n        ].join(\", \"),\n        attrs: { \"data-scope\": toKebabCase(name), \"data-part\": toKebabCase(part) }\n      }\n    }),\n    {}\n  )\n});\nvar toKebabCase = (value) => value.replace(/([A-Z])([A-Z])/g, \"$1-$2\").replace(/([a-z])([A-Z])/g, \"$1-$2\").replace(/[\\s_]+/g, \"-\").toLowerCase();\nvar isEmpty = (v) => v.length === 0;\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9hbmF0b215L2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixrQkFBa0IsZ0JBQWdCLGtCQUFrQjtBQUMvRSw0QkFBNEIsa0JBQWtCLGdCQUFnQixrQkFBa0I7QUFDaEY7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBOztBQUV5QiIsInNvdXJjZXMiOlsiL1VzZXJzL3JhdW5hcXBsYWhhL0Rlc2t0b3AvcGljay1hLWJvdC0yMDI1L25vZGVfbW9kdWxlcy9AemFnLWpzL2FuYXRvbXkvZGlzdC9pbmRleC5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2NyZWF0ZS1hbmF0b215LnRzXG52YXIgY3JlYXRlQW5hdG9teSA9IChuYW1lLCBwYXJ0cyA9IFtdKSA9PiAoe1xuICBwYXJ0czogKC4uLnZhbHVlcykgPT4ge1xuICAgIGlmIChpc0VtcHR5KHBhcnRzKSkge1xuICAgICAgcmV0dXJuIGNyZWF0ZUFuYXRvbXkobmFtZSwgdmFsdWVzKTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiY3JlYXRlQW5hdG9teSgpLnBhcnRzKC4uLikgc2hvdWxkIG9ubHkgYmUgY2FsbGVkIG9uY2UuIERpZCB5b3UgbWVhbiB0byB1c2UgLmV4dGVuZFdpdGgoLi4uKSA/XCIpO1xuICB9LFxuICBleHRlbmRXaXRoOiAoLi4udmFsdWVzKSA9PiBjcmVhdGVBbmF0b215KG5hbWUsIFsuLi5wYXJ0cywgLi4udmFsdWVzXSksXG4gIHJlbmFtZTogKG5ld05hbWUpID0+IGNyZWF0ZUFuYXRvbXkobmV3TmFtZSwgcGFydHMpLFxuICBrZXlzOiAoKSA9PiBwYXJ0cyxcbiAgYnVpbGQ6ICgpID0+IFsuLi5uZXcgU2V0KHBhcnRzKV0ucmVkdWNlKFxuICAgIChwcmV2LCBwYXJ0KSA9PiBPYmplY3QuYXNzaWduKHByZXYsIHtcbiAgICAgIFtwYXJ0XToge1xuICAgICAgICBzZWxlY3RvcjogW1xuICAgICAgICAgIGAmW2RhdGEtc2NvcGU9XCIke3RvS2ViYWJDYXNlKG5hbWUpfVwiXVtkYXRhLXBhcnQ9XCIke3RvS2ViYWJDYXNlKHBhcnQpfVwiXWAsXG4gICAgICAgICAgYCYgW2RhdGEtc2NvcGU9XCIke3RvS2ViYWJDYXNlKG5hbWUpfVwiXVtkYXRhLXBhcnQ9XCIke3RvS2ViYWJDYXNlKHBhcnQpfVwiXWBcbiAgICAgICAgXS5qb2luKFwiLCBcIiksXG4gICAgICAgIGF0dHJzOiB7IFwiZGF0YS1zY29wZVwiOiB0b0tlYmFiQ2FzZShuYW1lKSwgXCJkYXRhLXBhcnRcIjogdG9LZWJhYkNhc2UocGFydCkgfVxuICAgICAgfVxuICAgIH0pLFxuICAgIHt9XG4gIClcbn0pO1xudmFyIHRvS2ViYWJDYXNlID0gKHZhbHVlKSA9PiB2YWx1ZS5yZXBsYWNlKC8oW0EtWl0pKFtBLVpdKS9nLCBcIiQxLSQyXCIpLnJlcGxhY2UoLyhbYS16XSkoW0EtWl0pL2csIFwiJDEtJDJcIikucmVwbGFjZSgvW1xcc19dKy9nLCBcIi1cIikudG9Mb3dlckNhc2UoKTtcbnZhciBpc0VtcHR5ID0gKHYpID0+IHYubGVuZ3RoID09PSAwO1xuXG5leHBvcnQgeyBjcmVhdGVBbmF0b215IH07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/aria-hidden/dist/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@zag-js/aria-hidden/dist/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ariaHidden: () => (/* binding */ ariaHidden)\n/* harmony export */ });\n// src/walk-tree-outside.ts\nvar counterMap = /* @__PURE__ */ new WeakMap();\nvar uncontrolledNodes = /* @__PURE__ */ new WeakMap();\nvar markerMap = {};\nvar lockCount = 0;\nvar unwrapHost = (node) => node && (node.host || unwrapHost(node.parentNode));\nvar correctTargets = (parent, targets) => targets.map((target) => {\n  if (parent.contains(target)) return target;\n  const correctedTarget = unwrapHost(target);\n  if (correctedTarget && parent.contains(correctedTarget)) {\n    return correctedTarget;\n  }\n  console.error(\"[zag-js > ariaHidden] target\", target, \"in not contained inside\", parent, \". Doing nothing\");\n  return null;\n}).filter((x) => Boolean(x));\nvar isIgnoredNode = (node) => {\n  if (node.localName === \"next-route-announcer\") return true;\n  if (node.localName === \"script\") return true;\n  if (node.hasAttribute(\"aria-live\")) return true;\n  return node.matches(\"[data-live-announcer]\");\n};\nvar walkTreeOutside = (originalTarget, props) => {\n  const { parentNode, markerName, controlAttribute} = props;\n  const targets = correctTargets(parentNode, Array.isArray(originalTarget) ? originalTarget : [originalTarget]);\n  markerMap[markerName] || (markerMap[markerName] = /* @__PURE__ */ new WeakMap());\n  const markerCounter = markerMap[markerName];\n  const hiddenNodes = [];\n  const elementsToKeep = /* @__PURE__ */ new Set();\n  const elementsToStop = new Set(targets);\n  const keep = (el) => {\n    if (!el || elementsToKeep.has(el)) return;\n    elementsToKeep.add(el);\n    keep(el.parentNode);\n  };\n  targets.forEach(keep);\n  const deep = (parent) => {\n    if (!parent || elementsToStop.has(parent)) {\n      return;\n    }\n    Array.prototype.forEach.call(parent.children, (node) => {\n      if (elementsToKeep.has(node)) {\n        deep(node);\n      } else {\n        try {\n          if (isIgnoredNode(node)) return;\n          const attr = node.getAttribute(controlAttribute);\n          const alreadyHidden = attr === \"true\" ;\n          const counterValue = (counterMap.get(node) || 0) + 1;\n          const markerValue = (markerCounter.get(node) || 0) + 1;\n          counterMap.set(node, counterValue);\n          markerCounter.set(node, markerValue);\n          hiddenNodes.push(node);\n          if (counterValue === 1 && alreadyHidden) {\n            uncontrolledNodes.set(node, true);\n          }\n          if (markerValue === 1) {\n            node.setAttribute(markerName, \"\");\n          }\n          if (!alreadyHidden) {\n            node.setAttribute(controlAttribute, \"true\" );\n          }\n        } catch (e) {\n          console.error(\"[zag-js > ariaHidden] cannot operate on \", node, e);\n        }\n      }\n    });\n  };\n  deep(parentNode);\n  elementsToKeep.clear();\n  lockCount++;\n  return () => {\n    hiddenNodes.forEach((node) => {\n      const counterValue = counterMap.get(node) - 1;\n      const markerValue = markerCounter.get(node) - 1;\n      counterMap.set(node, counterValue);\n      markerCounter.set(node, markerValue);\n      if (!counterValue) {\n        if (!uncontrolledNodes.has(node)) {\n          node.removeAttribute(controlAttribute);\n        }\n        uncontrolledNodes.delete(node);\n      }\n      if (!markerValue) {\n        node.removeAttribute(markerName);\n      }\n    });\n    lockCount--;\n    if (!lockCount) {\n      counterMap = /* @__PURE__ */ new WeakMap();\n      counterMap = /* @__PURE__ */ new WeakMap();\n      uncontrolledNodes = /* @__PURE__ */ new WeakMap();\n      markerMap = {};\n    }\n  };\n};\n\n// src/aria-hidden.ts\nvar getParentNode = (originalTarget) => {\n  const target = Array.isArray(originalTarget) ? originalTarget[0] : originalTarget;\n  return target.ownerDocument.body;\n};\nvar hideOthers = (originalTarget, parentNode = getParentNode(originalTarget), markerName = \"data-aria-hidden\") => {\n  if (!parentNode) return;\n  return walkTreeOutside(originalTarget, {\n    parentNode,\n    markerName,\n    controlAttribute: \"aria-hidden\"});\n};\n\n// src/index.ts\nvar raf = (fn) => {\n  const frameId = requestAnimationFrame(() => fn());\n  return () => cancelAnimationFrame(frameId);\n};\nfunction ariaHidden(targetsOrFn, options = {}) {\n  const { defer = true } = options;\n  const func = defer ? raf : (v) => v();\n  const cleanups = [];\n  cleanups.push(\n    func(() => {\n      const targets = typeof targetsOrFn === \"function\" ? targetsOrFn() : targetsOrFn;\n      const elements = targets.filter(Boolean);\n      if (elements.length === 0) return;\n      cleanups.push(hideOthers(elements));\n    })\n  );\n  return () => {\n    cleanups.forEach((fn) => fn?.());\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9hcmlhLWhpZGRlbi9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsMENBQTBDO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DO0FBQ3BDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0MsVUFBVSxlQUFlO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFc0IiLCJzb3VyY2VzIjpbIi9Vc2Vycy9yYXVuYXFwbGFoYS9EZXNrdG9wL3BpY2stYS1ib3QtMjAyNS9ub2RlX21vZHVsZXMvQHphZy1qcy9hcmlhLWhpZGRlbi9kaXN0L2luZGV4Lm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvd2Fsay10cmVlLW91dHNpZGUudHNcbnZhciBjb3VudGVyTWFwID0gLyogQF9fUFVSRV9fICovIG5ldyBXZWFrTWFwKCk7XG52YXIgdW5jb250cm9sbGVkTm9kZXMgPSAvKiBAX19QVVJFX18gKi8gbmV3IFdlYWtNYXAoKTtcbnZhciBtYXJrZXJNYXAgPSB7fTtcbnZhciBsb2NrQ291bnQgPSAwO1xudmFyIHVud3JhcEhvc3QgPSAobm9kZSkgPT4gbm9kZSAmJiAobm9kZS5ob3N0IHx8IHVud3JhcEhvc3Qobm9kZS5wYXJlbnROb2RlKSk7XG52YXIgY29ycmVjdFRhcmdldHMgPSAocGFyZW50LCB0YXJnZXRzKSA9PiB0YXJnZXRzLm1hcCgodGFyZ2V0KSA9PiB7XG4gIGlmIChwYXJlbnQuY29udGFpbnModGFyZ2V0KSkgcmV0dXJuIHRhcmdldDtcbiAgY29uc3QgY29ycmVjdGVkVGFyZ2V0ID0gdW53cmFwSG9zdCh0YXJnZXQpO1xuICBpZiAoY29ycmVjdGVkVGFyZ2V0ICYmIHBhcmVudC5jb250YWlucyhjb3JyZWN0ZWRUYXJnZXQpKSB7XG4gICAgcmV0dXJuIGNvcnJlY3RlZFRhcmdldDtcbiAgfVxuICBjb25zb2xlLmVycm9yKFwiW3phZy1qcyA+IGFyaWFIaWRkZW5dIHRhcmdldFwiLCB0YXJnZXQsIFwiaW4gbm90IGNvbnRhaW5lZCBpbnNpZGVcIiwgcGFyZW50LCBcIi4gRG9pbmcgbm90aGluZ1wiKTtcbiAgcmV0dXJuIG51bGw7XG59KS5maWx0ZXIoKHgpID0+IEJvb2xlYW4oeCkpO1xudmFyIGlzSWdub3JlZE5vZGUgPSAobm9kZSkgPT4ge1xuICBpZiAobm9kZS5sb2NhbE5hbWUgPT09IFwibmV4dC1yb3V0ZS1hbm5vdW5jZXJcIikgcmV0dXJuIHRydWU7XG4gIGlmIChub2RlLmxvY2FsTmFtZSA9PT0gXCJzY3JpcHRcIikgcmV0dXJuIHRydWU7XG4gIGlmIChub2RlLmhhc0F0dHJpYnV0ZShcImFyaWEtbGl2ZVwiKSkgcmV0dXJuIHRydWU7XG4gIHJldHVybiBub2RlLm1hdGNoZXMoXCJbZGF0YS1saXZlLWFubm91bmNlcl1cIik7XG59O1xudmFyIHdhbGtUcmVlT3V0c2lkZSA9IChvcmlnaW5hbFRhcmdldCwgcHJvcHMpID0+IHtcbiAgY29uc3QgeyBwYXJlbnROb2RlLCBtYXJrZXJOYW1lLCBjb250cm9sQXR0cmlidXRlfSA9IHByb3BzO1xuICBjb25zdCB0YXJnZXRzID0gY29ycmVjdFRhcmdldHMocGFyZW50Tm9kZSwgQXJyYXkuaXNBcnJheShvcmlnaW5hbFRhcmdldCkgPyBvcmlnaW5hbFRhcmdldCA6IFtvcmlnaW5hbFRhcmdldF0pO1xuICBtYXJrZXJNYXBbbWFya2VyTmFtZV0gfHwgKG1hcmtlck1hcFttYXJrZXJOYW1lXSA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgV2Vha01hcCgpKTtcbiAgY29uc3QgbWFya2VyQ291bnRlciA9IG1hcmtlck1hcFttYXJrZXJOYW1lXTtcbiAgY29uc3QgaGlkZGVuTm9kZXMgPSBbXTtcbiAgY29uc3QgZWxlbWVudHNUb0tlZXAgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpO1xuICBjb25zdCBlbGVtZW50c1RvU3RvcCA9IG5ldyBTZXQodGFyZ2V0cyk7XG4gIGNvbnN0IGtlZXAgPSAoZWwpID0+IHtcbiAgICBpZiAoIWVsIHx8IGVsZW1lbnRzVG9LZWVwLmhhcyhlbCkpIHJldHVybjtcbiAgICBlbGVtZW50c1RvS2VlcC5hZGQoZWwpO1xuICAgIGtlZXAoZWwucGFyZW50Tm9kZSk7XG4gIH07XG4gIHRhcmdldHMuZm9yRWFjaChrZWVwKTtcbiAgY29uc3QgZGVlcCA9IChwYXJlbnQpID0+IHtcbiAgICBpZiAoIXBhcmVudCB8fCBlbGVtZW50c1RvU3RvcC5oYXMocGFyZW50KSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKHBhcmVudC5jaGlsZHJlbiwgKG5vZGUpID0+IHtcbiAgICAgIGlmIChlbGVtZW50c1RvS2VlcC5oYXMobm9kZSkpIHtcbiAgICAgICAgZGVlcChub2RlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgaWYgKGlzSWdub3JlZE5vZGUobm9kZSkpIHJldHVybjtcbiAgICAgICAgICBjb25zdCBhdHRyID0gbm9kZS5nZXRBdHRyaWJ1dGUoY29udHJvbEF0dHJpYnV0ZSk7XG4gICAgICAgICAgY29uc3QgYWxyZWFkeUhpZGRlbiA9IGF0dHIgPT09IFwidHJ1ZVwiIDtcbiAgICAgICAgICBjb25zdCBjb3VudGVyVmFsdWUgPSAoY291bnRlck1hcC5nZXQobm9kZSkgfHwgMCkgKyAxO1xuICAgICAgICAgIGNvbnN0IG1hcmtlclZhbHVlID0gKG1hcmtlckNvdW50ZXIuZ2V0KG5vZGUpIHx8IDApICsgMTtcbiAgICAgICAgICBjb3VudGVyTWFwLnNldChub2RlLCBjb3VudGVyVmFsdWUpO1xuICAgICAgICAgIG1hcmtlckNvdW50ZXIuc2V0KG5vZGUsIG1hcmtlclZhbHVlKTtcbiAgICAgICAgICBoaWRkZW5Ob2Rlcy5wdXNoKG5vZGUpO1xuICAgICAgICAgIGlmIChjb3VudGVyVmFsdWUgPT09IDEgJiYgYWxyZWFkeUhpZGRlbikge1xuICAgICAgICAgICAgdW5jb250cm9sbGVkTm9kZXMuc2V0KG5vZGUsIHRydWUpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAobWFya2VyVmFsdWUgPT09IDEpIHtcbiAgICAgICAgICAgIG5vZGUuc2V0QXR0cmlidXRlKG1hcmtlck5hbWUsIFwiXCIpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoIWFscmVhZHlIaWRkZW4pIHtcbiAgICAgICAgICAgIG5vZGUuc2V0QXR0cmlidXRlKGNvbnRyb2xBdHRyaWJ1dGUsIFwidHJ1ZVwiICk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcihcIlt6YWctanMgPiBhcmlhSGlkZGVuXSBjYW5ub3Qgb3BlcmF0ZSBvbiBcIiwgbm9kZSwgZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcbiAgZGVlcChwYXJlbnROb2RlKTtcbiAgZWxlbWVudHNUb0tlZXAuY2xlYXIoKTtcbiAgbG9ja0NvdW50Kys7XG4gIHJldHVybiAoKSA9PiB7XG4gICAgaGlkZGVuTm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xuICAgICAgY29uc3QgY291bnRlclZhbHVlID0gY291bnRlck1hcC5nZXQobm9kZSkgLSAxO1xuICAgICAgY29uc3QgbWFya2VyVmFsdWUgPSBtYXJrZXJDb3VudGVyLmdldChub2RlKSAtIDE7XG4gICAgICBjb3VudGVyTWFwLnNldChub2RlLCBjb3VudGVyVmFsdWUpO1xuICAgICAgbWFya2VyQ291bnRlci5zZXQobm9kZSwgbWFya2VyVmFsdWUpO1xuICAgICAgaWYgKCFjb3VudGVyVmFsdWUpIHtcbiAgICAgICAgaWYgKCF1bmNvbnRyb2xsZWROb2Rlcy5oYXMobm9kZSkpIHtcbiAgICAgICAgICBub2RlLnJlbW92ZUF0dHJpYnV0ZShjb250cm9sQXR0cmlidXRlKTtcbiAgICAgICAgfVxuICAgICAgICB1bmNvbnRyb2xsZWROb2Rlcy5kZWxldGUobm9kZSk7XG4gICAgICB9XG4gICAgICBpZiAoIW1hcmtlclZhbHVlKSB7XG4gICAgICAgIG5vZGUucmVtb3ZlQXR0cmlidXRlKG1hcmtlck5hbWUpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIGxvY2tDb3VudC0tO1xuICAgIGlmICghbG9ja0NvdW50KSB7XG4gICAgICBjb3VudGVyTWFwID0gLyogQF9fUFVSRV9fICovIG5ldyBXZWFrTWFwKCk7XG4gICAgICBjb3VudGVyTWFwID0gLyogQF9fUFVSRV9fICovIG5ldyBXZWFrTWFwKCk7XG4gICAgICB1bmNvbnRyb2xsZWROb2RlcyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgV2Vha01hcCgpO1xuICAgICAgbWFya2VyTWFwID0ge307XG4gICAgfVxuICB9O1xufTtcblxuLy8gc3JjL2FyaWEtaGlkZGVuLnRzXG52YXIgZ2V0UGFyZW50Tm9kZSA9IChvcmlnaW5hbFRhcmdldCkgPT4ge1xuICBjb25zdCB0YXJnZXQgPSBBcnJheS5pc0FycmF5KG9yaWdpbmFsVGFyZ2V0KSA/IG9yaWdpbmFsVGFyZ2V0WzBdIDogb3JpZ2luYWxUYXJnZXQ7XG4gIHJldHVybiB0YXJnZXQub3duZXJEb2N1bWVudC5ib2R5O1xufTtcbnZhciBoaWRlT3RoZXJzID0gKG9yaWdpbmFsVGFyZ2V0LCBwYXJlbnROb2RlID0gZ2V0UGFyZW50Tm9kZShvcmlnaW5hbFRhcmdldCksIG1hcmtlck5hbWUgPSBcImRhdGEtYXJpYS1oaWRkZW5cIikgPT4ge1xuICBpZiAoIXBhcmVudE5vZGUpIHJldHVybjtcbiAgcmV0dXJuIHdhbGtUcmVlT3V0c2lkZShvcmlnaW5hbFRhcmdldCwge1xuICAgIHBhcmVudE5vZGUsXG4gICAgbWFya2VyTmFtZSxcbiAgICBjb250cm9sQXR0cmlidXRlOiBcImFyaWEtaGlkZGVuXCJ9KTtcbn07XG5cbi8vIHNyYy9pbmRleC50c1xudmFyIHJhZiA9IChmbikgPT4ge1xuICBjb25zdCBmcmFtZUlkID0gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgpID0+IGZuKCkpO1xuICByZXR1cm4gKCkgPT4gY2FuY2VsQW5pbWF0aW9uRnJhbWUoZnJhbWVJZCk7XG59O1xuZnVuY3Rpb24gYXJpYUhpZGRlbih0YXJnZXRzT3JGbiwgb3B0aW9ucyA9IHt9KSB7XG4gIGNvbnN0IHsgZGVmZXIgPSB0cnVlIH0gPSBvcHRpb25zO1xuICBjb25zdCBmdW5jID0gZGVmZXIgPyByYWYgOiAodikgPT4gdigpO1xuICBjb25zdCBjbGVhbnVwcyA9IFtdO1xuICBjbGVhbnVwcy5wdXNoKFxuICAgIGZ1bmMoKCkgPT4ge1xuICAgICAgY29uc3QgdGFyZ2V0cyA9IHR5cGVvZiB0YXJnZXRzT3JGbiA9PT0gXCJmdW5jdGlvblwiID8gdGFyZ2V0c09yRm4oKSA6IHRhcmdldHNPckZuO1xuICAgICAgY29uc3QgZWxlbWVudHMgPSB0YXJnZXRzLmZpbHRlcihCb29sZWFuKTtcbiAgICAgIGlmIChlbGVtZW50cy5sZW5ndGggPT09IDApIHJldHVybjtcbiAgICAgIGNsZWFudXBzLnB1c2goaGlkZU90aGVycyhlbGVtZW50cykpO1xuICAgIH0pXG4gICk7XG4gIHJldHVybiAoKSA9PiB7XG4gICAgY2xlYW51cHMuZm9yRWFjaCgoZm4pID0+IGZuPy4oKSk7XG4gIH07XG59XG5cbmV4cG9ydCB7IGFyaWFIaWRkZW4gfTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/aria-hidden/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/avatar/dist/index.mjs":
/*!****************************************************!*\
  !*** ./node_modules/@zag-js/avatar/dist/index.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n\n\n\n// src/avatar.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"avatar\").parts(\"root\", \"image\", \"fallback\");\nvar parts = anatomy.build();\n\n// src/avatar.dom.ts\nvar getRootId = (ctx) => ctx.ids?.root ?? `avatar:${ctx.id}`;\nvar getImageId = (ctx) => ctx.ids?.image ?? `avatar:${ctx.id}:image`;\nvar getFallbackId = (ctx) => ctx.ids?.fallback ?? `avatar:${ctx.id}:fallback`;\nvar getRootEl = (ctx) => ctx.getById(getRootId(ctx));\nvar getImageEl = (ctx) => ctx.getById(getImageId(ctx));\n\n// src/avatar.connect.ts\nfunction connect(service, normalize) {\n  const { state, send, prop, scope } = service;\n  const loaded = state.matches(\"loaded\");\n  return {\n    loaded,\n    setSrc(src) {\n      const img = getImageEl(scope);\n      img?.setAttribute(\"src\", src);\n    },\n    setLoaded() {\n      send({ type: \"img.loaded\", src: \"api\" });\n    },\n    setError() {\n      send({ type: \"img.error\", src: \"api\" });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        dir: prop(\"dir\"),\n        id: getRootId(scope)\n      });\n    },\n    getImageProps() {\n      return normalize.img({\n        ...parts.image.attrs,\n        hidden: !loaded,\n        dir: prop(\"dir\"),\n        id: getImageId(scope),\n        \"data-state\": loaded ? \"visible\" : \"hidden\",\n        onLoad() {\n          send({ type: \"img.loaded\", src: \"element\" });\n        },\n        onError() {\n          send({ type: \"img.error\", src: \"element\" });\n        }\n      });\n    },\n    getFallbackProps() {\n      return normalize.element({\n        ...parts.fallback.attrs,\n        dir: prop(\"dir\"),\n        id: getFallbackId(scope),\n        hidden: loaded,\n        \"data-state\": loaded ? \"hidden\" : \"visible\"\n      });\n    }\n  };\n}\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_1__.createMachine)({\n  initialState() {\n    return \"loading\";\n  },\n  effects: [\"trackImageRemoval\", \"trackSrcChange\"],\n  on: {\n    \"src.change\": {\n      target: \"loading\"\n    },\n    \"img.unmount\": {\n      target: \"error\"\n    }\n  },\n  states: {\n    loading: {\n      entry: [\"checkImageStatus\"],\n      on: {\n        \"img.loaded\": {\n          target: \"loaded\",\n          actions: [\"invokeOnLoad\"]\n        },\n        \"img.error\": {\n          target: \"error\",\n          actions: [\"invokeOnError\"]\n        }\n      }\n    },\n    error: {\n      on: {\n        \"img.loaded\": {\n          target: \"loaded\",\n          actions: [\"invokeOnLoad\"]\n        }\n      }\n    },\n    loaded: {\n      on: {\n        \"img.error\": {\n          target: \"error\",\n          actions: [\"invokeOnError\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    actions: {\n      invokeOnLoad({ prop }) {\n        prop(\"onStatusChange\")?.({ status: \"loaded\" });\n      },\n      invokeOnError({ prop }) {\n        prop(\"onStatusChange\")?.({ status: \"error\" });\n      },\n      checkImageStatus({ send, scope }) {\n        const imageEl = getImageEl(scope);\n        if (!imageEl?.complete) return;\n        const type = hasLoaded(imageEl) ? \"img.loaded\" : \"img.error\";\n        send({ type, src: \"ssr\" });\n      }\n    },\n    effects: {\n      trackImageRemoval({ send, scope }) {\n        const rootEl = getRootEl(scope);\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.observeChildren)(rootEl, {\n          callback(records) {\n            const removedNodes = Array.from(records[0].removedNodes);\n            const removed = removedNodes.find(\n              (node) => node.nodeType === Node.ELEMENT_NODE && node.matches(\"[data-scope=avatar][data-part=image]\")\n            );\n            if (removed) {\n              send({ type: \"img.unmount\" });\n            }\n          }\n        });\n      },\n      trackSrcChange({ send, scope }) {\n        const imageEl = getImageEl(scope);\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.observeAttributes)(imageEl, {\n          attributes: [\"src\", \"srcset\"],\n          callback() {\n            send({ type: \"src.change\" });\n          }\n        });\n      }\n    }\n  }\n});\nfunction hasLoaded(image) {\n  return image.complete && image.naturalWidth !== 0 && image.naturalHeight !== 0;\n}\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_3__.createProps)()([\"dir\", \"id\", \"ids\", \"onStatusChange\", \"getRootNode\"]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/avatar/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/checkbox/dist/index.mjs":
/*!******************************************************!*\
  !*** ./node_modules/@zag-js/checkbox/dist/index.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/focus-visible */ \"(ssr)/./node_modules/@zag-js/focus-visible/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n\n\n\n\n// src/checkbox.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"checkbox\").parts(\"root\", \"label\", \"control\", \"indicator\");\nvar parts = anatomy.build();\n\n// src/checkbox.dom.ts\nvar getRootId = (ctx) => ctx.ids?.root ?? `checkbox:${ctx.id}`;\nvar getLabelId = (ctx) => ctx.ids?.label ?? `checkbox:${ctx.id}:label`;\nvar getControlId = (ctx) => ctx.ids?.control ?? `checkbox:${ctx.id}:control`;\nvar getHiddenInputId = (ctx) => ctx.ids?.hiddenInput ?? `checkbox:${ctx.id}:input`;\nvar getRootEl = (ctx) => ctx.getById(getRootId(ctx));\nvar getHiddenInputEl = (ctx) => ctx.getById(getHiddenInputId(ctx));\n\n// src/checkbox.connect.ts\nfunction connect(service, normalize) {\n  const { send, context, prop, computed, scope } = service;\n  const disabled = prop(\"disabled\");\n  const readOnly = prop(\"readOnly\");\n  const invalid = prop(\"invalid\");\n  const focused = !disabled && context.get(\"focused\");\n  const focusVisible = !disabled && context.get(\"focusVisible\");\n  const checked = computed(\"checked\");\n  const indeterminate = computed(\"indeterminate\");\n  const dataAttrs = {\n    \"data-active\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(context.get(\"active\")),\n    \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n    \"data-focus-visible\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focusVisible),\n    \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(readOnly),\n    \"data-hover\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(context.get(\"hovered\")),\n    \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n    \"data-state\": indeterminate ? \"indeterminate\" : checked ? \"checked\" : \"unchecked\",\n    \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid)\n  };\n  return {\n    checked,\n    disabled,\n    indeterminate,\n    focused,\n    checkedState: checked,\n    setChecked(checked2) {\n      send({ type: \"CHECKED.SET\", checked: checked2, isTrusted: false });\n    },\n    toggleChecked() {\n      send({ type: \"CHECKED.TOGGLE\", checked, isTrusted: false });\n    },\n    getRootProps() {\n      return normalize.label({\n        ...parts.root.attrs,\n        ...dataAttrs,\n        dir: prop(\"dir\"),\n        id: getRootId(scope),\n        htmlFor: getHiddenInputId(scope),\n        onPointerMove() {\n          if (disabled) return;\n          send({ type: \"CONTEXT.SET\", context: { hovered: true } });\n        },\n        onPointerLeave() {\n          if (disabled) return;\n          send({ type: \"CONTEXT.SET\", context: { hovered: false } });\n        },\n        onClick(event) {\n          const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventTarget)(event);\n          if (target === getHiddenInputEl(scope)) {\n            event.stopPropagation();\n          }\n        }\n      });\n    },\n    getLabelProps() {\n      return normalize.element({\n        ...parts.label.attrs,\n        ...dataAttrs,\n        dir: prop(\"dir\"),\n        id: getLabelId(scope)\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        ...dataAttrs,\n        dir: prop(\"dir\"),\n        id: getControlId(scope),\n        \"aria-hidden\": true\n      });\n    },\n    getIndicatorProps() {\n      return normalize.element({\n        ...parts.indicator.attrs,\n        ...dataAttrs,\n        dir: prop(\"dir\"),\n        hidden: !indeterminate && !checked\n      });\n    },\n    getHiddenInputProps() {\n      return normalize.input({\n        id: getHiddenInputId(scope),\n        type: \"checkbox\",\n        required: prop(\"required\"),\n        defaultChecked: checked,\n        disabled,\n        \"aria-labelledby\": getLabelId(scope),\n        \"aria-invalid\": invalid,\n        name: prop(\"name\"),\n        form: prop(\"form\"),\n        value: prop(\"value\"),\n        style: _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.visuallyHiddenStyle,\n        onFocus() {\n          const focusVisible2 = (0,_zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_2__.isFocusVisible)();\n          send({ type: \"CONTEXT.SET\", context: { focused: true, focusVisible: focusVisible2 } });\n        },\n        onBlur() {\n          send({ type: \"CONTEXT.SET\", context: { focused: false, focusVisible: false } });\n        },\n        onClick(event) {\n          if (readOnly) {\n            event.preventDefault();\n            return;\n          }\n          const checked2 = event.currentTarget.checked;\n          send({ type: \"CHECKED.SET\", checked: checked2, isTrusted: true });\n        }\n      });\n    }\n  };\n}\nvar { not } = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createGuards)();\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)({\n  props({ props: props2 }) {\n    return {\n      value: \"on\",\n      ...props2,\n      defaultChecked: !!props2.defaultChecked\n    };\n  },\n  initialState() {\n    return \"ready\";\n  },\n  context({ prop, bindable }) {\n    return {\n      checked: bindable(() => ({\n        defaultValue: prop(\"defaultChecked\"),\n        value: prop(\"checked\"),\n        onChange(checked) {\n          prop(\"onCheckedChange\")?.({ checked });\n        }\n      })),\n      fieldsetDisabled: bindable(() => ({ defaultValue: false })),\n      focusVisible: bindable(() => ({ defaultValue: false })),\n      active: bindable(() => ({ defaultValue: false })),\n      focused: bindable(() => ({ defaultValue: false })),\n      hovered: bindable(() => ({ defaultValue: false }))\n    };\n  },\n  watch({ track, context, prop, action }) {\n    track([() => prop(\"disabled\")], () => {\n      action([\"removeFocusIfNeeded\"]);\n    });\n    track([() => context.get(\"checked\")], () => {\n      action([\"syncInputElement\"]);\n    });\n  },\n  effects: [\"trackFormControlState\", \"trackPressEvent\", \"trackFocusVisible\"],\n  on: {\n    \"CHECKED.TOGGLE\": [\n      {\n        guard: not(\"isTrusted\"),\n        actions: [\"toggleChecked\", \"dispatchChangeEvent\"]\n      },\n      {\n        actions: [\"toggleChecked\"]\n      }\n    ],\n    \"CHECKED.SET\": [\n      {\n        guard: not(\"isTrusted\"),\n        actions: [\"setChecked\", \"dispatchChangeEvent\"]\n      },\n      {\n        actions: [\"setChecked\"]\n      }\n    ],\n    \"CONTEXT.SET\": {\n      actions: [\"setContext\"]\n    }\n  },\n  computed: {\n    indeterminate: ({ context }) => isIndeterminate(context.get(\"checked\")),\n    checked: ({ context }) => isChecked(context.get(\"checked\")),\n    disabled: ({ context, prop }) => !!prop(\"disabled\") || context.get(\"fieldsetDisabled\")\n  },\n  states: {\n    ready: {}\n  },\n  implementations: {\n    guards: {\n      isTrusted: ({ event }) => !!event.isTrusted\n    },\n    effects: {\n      trackPressEvent({ context, computed, scope }) {\n        if (computed(\"disabled\")) return;\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackPress)({\n          pointerNode: getRootEl(scope),\n          keyboardNode: getHiddenInputEl(scope),\n          isValidKey: (event) => event.key === \" \",\n          onPress: () => context.set(\"active\", false),\n          onPressStart: () => context.set(\"active\", true),\n          onPressEnd: () => context.set(\"active\", false)\n        });\n      },\n      trackFocusVisible({ computed, scope }) {\n        if (computed(\"disabled\")) return;\n        return (0,_zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_2__.trackFocusVisible)({ root: scope.getRootNode?.() });\n      },\n      trackFormControlState({ context, scope }) {\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackFormControl)(getHiddenInputEl(scope), {\n          onFieldsetDisabledChange(disabled) {\n            context.set(\"fieldsetDisabled\", disabled);\n          },\n          onFormReset() {\n            context.set(\"checked\", context.initial(\"checked\"));\n          }\n        });\n      }\n    },\n    actions: {\n      setContext({ context, event }) {\n        for (const key in event.context) {\n          context.set(key, event.context[key]);\n        }\n      },\n      syncInputElement({ context, computed, scope }) {\n        const inputEl = getHiddenInputEl(scope);\n        if (!inputEl) return;\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.setElementChecked)(inputEl, computed(\"checked\"));\n        inputEl.indeterminate = isIndeterminate(context.get(\"checked\"));\n      },\n      removeFocusIfNeeded({ context, prop }) {\n        if (prop(\"disabled\") && context.get(\"focused\")) {\n          context.set(\"focused\", false);\n          context.set(\"focusVisible\", false);\n        }\n      },\n      setChecked({ context, event }) {\n        context.set(\"checked\", event.checked);\n      },\n      toggleChecked({ context, computed }) {\n        const checked = isIndeterminate(computed(\"checked\")) ? true : !computed(\"checked\");\n        context.set(\"checked\", checked);\n      },\n      dispatchChangeEvent({ computed, scope }) {\n        queueMicrotask(() => {\n          const inputEl = getHiddenInputEl(scope);\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dispatchInputCheckedEvent)(inputEl, { checked: computed(\"checked\") });\n        });\n      }\n    }\n  }\n});\nfunction isIndeterminate(checked) {\n  return checked === \"indeterminate\";\n}\nfunction isChecked(checked) {\n  return isIndeterminate(checked) ? false : !!checked;\n}\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_4__.createProps)()([\n  \"defaultChecked\",\n  \"checked\",\n  \"dir\",\n  \"disabled\",\n  \"form\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"invalid\",\n  \"name\",\n  \"onCheckedChange\",\n  \"readOnly\",\n  \"required\",\n  \"value\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_5__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/checkbox/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/collapsible/dist/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@zag-js/collapsible/dist/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n\n\n\n// src/collapsible.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"collapsible\").parts(\"root\", \"trigger\", \"content\", \"indicator\");\nvar parts = anatomy.build();\n\n// src/collapsible.dom.ts\nvar getRootId = (ctx) => ctx.ids?.root ?? `collapsible:${ctx.id}`;\nvar getContentId = (ctx) => ctx.ids?.content ?? `collapsible:${ctx.id}:content`;\nvar getTriggerId = (ctx) => ctx.ids?.trigger ?? `collapsible:${ctx.id}:trigger`;\nvar getContentEl = (ctx) => ctx.getById(getContentId(ctx));\n\n// src/collapsible.connect.ts\nfunction connect(service, normalize) {\n  const { state, send, context, scope, prop } = service;\n  const visible = state.matches(\"open\") || state.matches(\"closing\");\n  const open = state.matches(\"open\");\n  const { width, height } = context.get(\"size\");\n  const disabled = !!prop(\"disabled\");\n  const skip = !context.get(\"initial\") && open;\n  const dir = \"ltr\";\n  return {\n    disabled,\n    visible,\n    open,\n    measureSize() {\n      send({ type: \"size.measure\" });\n    },\n    setOpen(nextOpen) {\n      const open2 = state.matches(\"open\");\n      if (open2 === nextOpen) return;\n      send({ type: nextOpen ? \"open\" : \"close\" });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        \"data-state\": open ? \"open\" : \"closed\",\n        dir,\n        id: getRootId(scope)\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        \"data-collapsible\": \"\",\n        \"data-state\": skip ? void 0 : open ? \"open\" : \"closed\",\n        id: getContentId(scope),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        hidden: !visible,\n        style: {\n          \"--height\": height != null ? `${height}px` : void 0,\n          \"--width\": width != null ? `${width}px` : void 0\n        }\n      });\n    },\n    getTriggerProps() {\n      return normalize.element({\n        ...parts.trigger.attrs,\n        id: getTriggerId(scope),\n        dir,\n        type: \"button\",\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"aria-controls\": getContentId(scope),\n        \"aria-expanded\": visible || false,\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          send({ type: open ? \"close\" : \"open\" });\n        }\n      });\n    },\n    getIndicatorProps() {\n      return normalize.element({\n        ...parts.indicator.attrs,\n        dir,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled)\n      });\n    }\n  };\n}\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_2__.createMachine)({\n  initialState({ prop }) {\n    const open = prop(\"open\") || prop(\"defaultOpen\");\n    return open ? \"open\" : \"closed\";\n  },\n  context({ bindable }) {\n    return {\n      size: bindable(() => ({\n        defaultValue: { height: 0, width: 0 },\n        sync: true\n      })),\n      initial: bindable(() => ({\n        defaultValue: false\n      }))\n    };\n  },\n  refs() {\n    return {\n      cleanup: void 0,\n      stylesRef: void 0\n    };\n  },\n  watch({ track, prop, action }) {\n    track([() => prop(\"open\")], () => {\n      action([\"setInitial\", \"computeSize\", \"toggleVisibility\"]);\n    });\n  },\n  exit: [\"clearInitial\", \"cleanupNode\"],\n  states: {\n    closed: {\n      on: {\n        \"controlled.open\": {\n          target: \"open\"\n        },\n        open: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"setInitial\", \"computeSize\", \"invokeOnOpen\"]\n          }\n        ]\n      }\n    },\n    closing: {\n      effects: [\"trackExitAnimation\"],\n      on: {\n        \"controlled.close\": {\n          target: \"closed\"\n        },\n        \"controlled.open\": {\n          target: \"open\"\n        },\n        open: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"setInitial\", \"invokeOnOpen\"]\n          }\n        ],\n        close: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnExitComplete\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"setInitial\", \"computeSize\", \"invokeOnExitComplete\"]\n          }\n        ],\n        \"animation.end\": {\n          target: \"closed\",\n          actions: [\"invokeOnExitComplete\", \"clearInitial\"]\n        }\n      }\n    },\n    open: {\n      effects: [\"trackEnterAnimation\"],\n      on: {\n        \"controlled.close\": {\n          target: \"closing\"\n        },\n        close: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closing\",\n            actions: [\"setInitial\", \"computeSize\", \"invokeOnClose\"]\n          }\n        ],\n        \"size.measure\": {\n          actions: [\"measureSize\"]\n        },\n        \"animation.end\": {\n          actions: [\"clearInitial\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      isOpenControlled: ({ prop }) => prop(\"open\") != void 0\n    },\n    effects: {\n      trackEnterAnimation: ({ send, scope }) => {\n        let cleanup;\n        const rafCleanup = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          const contentEl = getContentEl(scope);\n          if (!contentEl) return;\n          const animationName = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getComputedStyle)(contentEl).animationName;\n          const hasNoAnimation = !animationName || animationName === \"none\";\n          if (hasNoAnimation) {\n            send({ type: \"animation.end\" });\n            return;\n          }\n          const onEnd = (event) => {\n            const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventTarget)(event);\n            if (target === contentEl) {\n              send({ type: \"animation.end\" });\n            }\n          };\n          contentEl.addEventListener(\"animationend\", onEnd);\n          cleanup = () => {\n            contentEl.removeEventListener(\"animationend\", onEnd);\n          };\n        });\n        return () => {\n          rafCleanup();\n          cleanup?.();\n        };\n      },\n      trackExitAnimation: ({ send, scope }) => {\n        let cleanup;\n        const rafCleanup = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          const contentEl = getContentEl(scope);\n          if (!contentEl) return;\n          const animationName = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getComputedStyle)(contentEl).animationName;\n          const hasNoAnimation = !animationName || animationName === \"none\";\n          if (hasNoAnimation) {\n            send({ type: \"animation.end\" });\n            return;\n          }\n          const onEnd = (event) => {\n            const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventTarget)(event);\n            if (target === contentEl) {\n              send({ type: \"animation.end\" });\n            }\n          };\n          contentEl.addEventListener(\"animationend\", onEnd);\n          const restoreStyles = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.setStyle)(contentEl, {\n            animationFillMode: \"forwards\"\n          });\n          cleanup = () => {\n            contentEl.removeEventListener(\"animationend\", onEnd);\n            (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.nextTick)(() => restoreStyles());\n          };\n        });\n        return () => {\n          rafCleanup();\n          cleanup?.();\n        };\n      }\n    },\n    actions: {\n      setInitial: ({ context, flush }) => {\n        flush(() => {\n          context.set(\"initial\", true);\n        });\n      },\n      clearInitial: ({ context }) => {\n        context.set(\"initial\", false);\n      },\n      cleanupNode: ({ refs }) => {\n        refs.set(\"stylesRef\", null);\n      },\n      measureSize: ({ context, scope }) => {\n        const contentEl = getContentEl(scope);\n        if (!contentEl) return;\n        const { height, width } = contentEl.getBoundingClientRect();\n        context.set(\"size\", { height, width });\n      },\n      computeSize: ({ refs, scope, context }) => {\n        refs.get(\"cleanup\")?.();\n        const rafCleanup = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          const contentEl = getContentEl(scope);\n          if (!contentEl) return;\n          const hidden = contentEl.hidden;\n          contentEl.style.animationName = \"none\";\n          contentEl.style.animationDuration = \"0s\";\n          contentEl.hidden = false;\n          const rect = contentEl.getBoundingClientRect();\n          context.set(\"size\", { height: rect.height, width: rect.width });\n          if (context.get(\"initial\")) {\n            contentEl.style.animationName = \"\";\n            contentEl.style.animationDuration = \"\";\n          }\n          contentEl.hidden = hidden;\n        });\n        refs.set(\"cleanup\", rafCleanup);\n      },\n      invokeOnOpen: ({ prop }) => {\n        prop(\"onOpenChange\")?.({ open: true });\n      },\n      invokeOnClose: ({ prop }) => {\n        prop(\"onOpenChange\")?.({ open: false });\n      },\n      invokeOnExitComplete: ({ prop }) => {\n        prop(\"onExitComplete\")?.();\n      },\n      toggleVisibility: ({ prop, send }) => {\n        send({ type: prop(\"open\") ? \"controlled.open\" : \"controlled.close\" });\n      }\n    }\n  }\n});\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_3__.createProps)()([\n  \"dir\",\n  \"disabled\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"onExitComplete\",\n  \"onOpenChange\",\n  \"defaultOpen\",\n  \"open\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/collapsible/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/collection/dist/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@zag-js/collection/dist/index.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GridCollection: () => (/* binding */ GridCollection),\n/* harmony export */   ListCollection: () => (/* binding */ ListCollection),\n/* harmony export */   Selection: () => (/* binding */ Selection),\n/* harmony export */   TreeCollection: () => (/* binding */ TreeCollection),\n/* harmony export */   filePathToTree: () => (/* binding */ filePathToTree),\n/* harmony export */   flattenedToTree: () => (/* binding */ flattenedToTree),\n/* harmony export */   isGridCollection: () => (/* binding */ isGridCollection),\n/* harmony export */   isListCollection: () => (/* binding */ isListCollection)\n/* harmony export */ });\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nvar fallback = {\n  itemToValue(item) {\n    if (typeof item === \"string\") return item;\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isObject)(item) && (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.hasProp)(item, \"value\")) return item.value;\n    return \"\";\n  },\n  itemToString(item) {\n    if (typeof item === \"string\") return item;\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isObject)(item) && (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.hasProp)(item, \"label\")) return item.label;\n    return fallback.itemToValue(item);\n  },\n  isItemDisabled(item) {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isObject)(item) && (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.hasProp)(item, \"disabled\")) return !!item.disabled;\n    return false;\n  }\n};\nvar ListCollection = class _ListCollection {\n  constructor(options) {\n    this.options = options;\n    /**\n     * The items in the collection\n     */\n    __publicField(this, \"items\");\n    /**\n     * Copy the collection\n     */\n    __publicField(this, \"copy\", (items) => {\n      return new _ListCollection({ ...this.options, items: items ?? [...this.items] });\n    });\n    /**\n     * Check if the collection is equal to another collection\n     */\n    __publicField(this, \"isEqual\", (other) => {\n      return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isEqual)(this.items, other.items);\n    });\n    /**\n     * Function to update the collection items\n     */\n    __publicField(this, \"setItems\", (items) => {\n      return this.copy(items);\n    });\n    /**\n     * Returns all the values in the collection\n     */\n    __publicField(this, \"getValues\", (items = this.items) => {\n      return Array.from(items).map((item) => this.getItemValue(item)).filter(Boolean);\n    });\n    /**\n     * Get the item based on its value\n     */\n    __publicField(this, \"find\", (value) => {\n      if (value == null) return null;\n      const index = this.indexOf(value);\n      return index != null ? this.at(index) : null;\n    });\n    /**\n     * Get the items based on its values\n     */\n    __publicField(this, \"findMany\", (values) => {\n      return Array.from(values).map((value) => this.find(value)).filter((item) => item != null);\n    });\n    /**\n     * Get the item based on its index\n     */\n    __publicField(this, \"at\", (index) => {\n      if (!this.options.groupBy && !this.options.groupSort) {\n        return this.items[index] ?? null;\n      }\n      let idx = 0;\n      const groups = this.group();\n      for (const [, items] of groups) {\n        for (const item of items) {\n          if (idx === index) return item;\n          idx++;\n        }\n      }\n      return null;\n    });\n    __publicField(this, \"sortFn\", (valueA, valueB) => {\n      const indexA = this.indexOf(valueA);\n      const indexB = this.indexOf(valueB);\n      return (indexA ?? 0) - (indexB ?? 0);\n    });\n    /**\n     * Sort the values based on their index\n     */\n    __publicField(this, \"sort\", (values) => {\n      return [...values].sort(this.sortFn.bind(this));\n    });\n    /**\n     * Convert an item to a value\n     */\n    __publicField(this, \"getItemValue\", (item) => {\n      if (item == null) return null;\n      return this.options.itemToValue?.(item) ?? fallback.itemToValue(item);\n    });\n    /**\n     * Whether an item is disabled\n     */\n    __publicField(this, \"getItemDisabled\", (item) => {\n      if (item == null) return false;\n      return this.options.isItemDisabled?.(item) ?? fallback.isItemDisabled(item);\n    });\n    /**\n     * Convert an item to a string\n     */\n    __publicField(this, \"stringifyItem\", (item) => {\n      if (item == null) return null;\n      return this.options.itemToString?.(item) ?? fallback.itemToString(item);\n    });\n    /**\n     * Convert a value to a string\n     */\n    __publicField(this, \"stringify\", (value) => {\n      if (value == null) return null;\n      return this.stringifyItem(this.find(value));\n    });\n    /**\n     * Convert an array of items to a string\n     */\n    __publicField(this, \"stringifyItems\", (items, separator = \", \") => {\n      return Array.from(items).map((item) => this.stringifyItem(item)).filter(Boolean).join(separator);\n    });\n    /**\n     * Convert an array of items to a string\n     */\n    __publicField(this, \"stringifyMany\", (value, separator) => {\n      return this.stringifyItems(this.findMany(value), separator);\n    });\n    /**\n     * Whether the collection has a value\n     */\n    __publicField(this, \"has\", (value) => {\n      return this.indexOf(value) !== -1;\n    });\n    /**\n     * Whether the collection has an item\n     */\n    __publicField(this, \"hasItem\", (item) => {\n      if (item == null) return false;\n      return this.has(this.getItemValue(item));\n    });\n    /**\n     * Group items by the groupBy function provided in options\n     * Returns an array of [groupKey, items] tuples\n     */\n    __publicField(this, \"group\", () => {\n      const { groupBy, groupSort } = this.options;\n      if (!groupBy) return [[\"\", [...this.items]]];\n      const groups = /* @__PURE__ */ new Map();\n      this.items.forEach((item, index) => {\n        const groupKey = groupBy(item, index);\n        if (!groups.has(groupKey)) {\n          groups.set(groupKey, []);\n        }\n        groups.get(groupKey).push(item);\n      });\n      let entries = Array.from(groups.entries());\n      if (groupSort) {\n        entries.sort(([a], [b]) => {\n          if (typeof groupSort === \"function\") return groupSort(a, b);\n          if (Array.isArray(groupSort)) {\n            const indexA = groupSort.indexOf(a);\n            const indexB = groupSort.indexOf(b);\n            if (indexA === -1) return 1;\n            if (indexB === -1) return -1;\n            return indexA - indexB;\n          }\n          if (groupSort === \"asc\") return a.localeCompare(b);\n          if (groupSort === \"desc\") return b.localeCompare(a);\n          return 0;\n        });\n      }\n      return entries;\n    });\n    /**\n     * Returns the next value in the collection\n     */\n    __publicField(this, \"getNextValue\", (value, step = 1, clamp = false) => {\n      let index = this.indexOf(value);\n      if (index === -1) return null;\n      index = clamp ? Math.min(index + step, this.size - 1) : index + step;\n      while (index <= this.size && this.getItemDisabled(this.at(index))) index++;\n      return this.getItemValue(this.at(index));\n    });\n    /**\n     * Returns the previous value in the collection\n     */\n    __publicField(this, \"getPreviousValue\", (value, step = 1, clamp = false) => {\n      let index = this.indexOf(value);\n      if (index === -1) return null;\n      index = clamp ? Math.max(index - step, 0) : index - step;\n      while (index >= 0 && this.getItemDisabled(this.at(index))) index--;\n      return this.getItemValue(this.at(index));\n    });\n    /**\n     * Get the index of an item based on its key\n     */\n    __publicField(this, \"indexOf\", (value) => {\n      if (value == null) return -1;\n      if (!this.options.groupBy && !this.options.groupSort) {\n        return this.items.findIndex((item) => this.getItemValue(item) === value);\n      }\n      let idx = 0;\n      const groups = this.group();\n      for (const [, items] of groups) {\n        for (const item of items) {\n          if (this.getItemValue(item) === value) return idx;\n          idx++;\n        }\n      }\n      return -1;\n    });\n    __publicField(this, \"getByText\", (text, current) => {\n      let items = current != null ? wrap(this.items, this.indexOf(current)) : this.items;\n      const isSingleKey = text.length === 1;\n      if (isSingleKey) items = items.filter((item) => this.getItemValue(item) !== current);\n      return items.find((item) => match(this.stringifyItem(item), text));\n    });\n    /**\n     * Search for a value based on a query\n     */\n    __publicField(this, \"search\", (queryString, options) => {\n      const { state, currentValue, timeout = 350 } = options;\n      const search = state.keysSoFar + queryString;\n      const isRepeated = search.length > 1 && Array.from(search).every((char) => char === search[0]);\n      const query = isRepeated ? search[0] : search;\n      const item = this.getByText(query, currentValue);\n      const value = this.getItemValue(item);\n      function cleanup() {\n        clearTimeout(state.timer);\n        state.timer = -1;\n      }\n      function update(value2) {\n        state.keysSoFar = value2;\n        cleanup();\n        if (value2 !== \"\") {\n          state.timer = +setTimeout(() => {\n            update(\"\");\n            cleanup();\n          }, timeout);\n        }\n      }\n      update(search);\n      return value;\n    });\n    /**\n     * Update an item in the collection\n     */\n    __publicField(this, \"update\", (value, item) => {\n      let index = this.items.findIndex((item2) => this.getItemValue(item2) === value);\n      if (index === -1) return this;\n      return this.copy([...this.items.slice(0, index), item, ...this.items.slice(index + 1)]);\n    });\n    /**\n     * Insert items at a specific index\n     */\n    __publicField(this, \"insert\", (index, ...items) => {\n      return this.copy(insert(this.items, index, ...items));\n    });\n    /**\n     * Insert items before a specific value\n     */\n    __publicField(this, \"insertBefore\", (value, ...items) => {\n      let toIndex = this.indexOf(value);\n      if (toIndex === -1) {\n        if (this.items.length === 0) toIndex = 0;\n        else return this;\n      }\n      return this.copy(insert(this.items, toIndex, ...items));\n    });\n    /**\n     * Insert items after a specific value\n     */\n    __publicField(this, \"insertAfter\", (value, ...items) => {\n      let toIndex = this.indexOf(value);\n      if (toIndex === -1) {\n        if (this.items.length === 0) toIndex = 0;\n        else return this;\n      }\n      return this.copy(insert(this.items, toIndex + 1, ...items));\n    });\n    /**\n     * Prepend items to the collection\n     */\n    __publicField(this, \"prepend\", (...items) => {\n      return this.copy(insert(this.items, 0, ...items));\n    });\n    /**\n     * Append items to the collection\n     */\n    __publicField(this, \"append\", (...items) => {\n      return this.copy(insert(this.items, this.items.length, ...items));\n    });\n    /**\n     * Filter the collection\n     */\n    __publicField(this, \"filter\", (fn) => {\n      const filteredItems = this.items.filter((item, index) => fn(this.stringifyItem(item), index));\n      return this.copy(filteredItems);\n    });\n    /**\n     * Remove items from the collection\n     */\n    __publicField(this, \"remove\", (...itemsOrValues) => {\n      const values = itemsOrValues.map(\n        (itemOrValue) => typeof itemOrValue === \"string\" ? itemOrValue : this.getItemValue(itemOrValue)\n      );\n      return this.copy(\n        this.items.filter((item) => {\n          const value = this.getItemValue(item);\n          if (value == null) return false;\n          return !values.includes(value);\n        })\n      );\n    });\n    /**\n     * Move an item to a specific index\n     */\n    __publicField(this, \"move\", (value, toIndex) => {\n      const fromIndex = this.indexOf(value);\n      if (fromIndex === -1) return this;\n      return this.copy(move(this.items, [fromIndex], toIndex));\n    });\n    /**\n     * Move items before a specific value\n     */\n    __publicField(this, \"moveBefore\", (value, ...values) => {\n      let toIndex = this.items.findIndex((item) => this.getItemValue(item) === value);\n      if (toIndex === -1) return this;\n      let indices = values.map((value2) => this.items.findIndex((item) => this.getItemValue(item) === value2)).sort((a, b) => a - b);\n      return this.copy(move(this.items, indices, toIndex));\n    });\n    /**\n     * Move items after a specific value\n     */\n    __publicField(this, \"moveAfter\", (value, ...values) => {\n      let toIndex = this.items.findIndex((item) => this.getItemValue(item) === value);\n      if (toIndex === -1) return this;\n      let indices = values.map((value2) => this.items.findIndex((item) => this.getItemValue(item) === value2)).sort((a, b) => a - b);\n      return this.copy(move(this.items, indices, toIndex + 1));\n    });\n    /**\n     * Reorder items\n     */\n    __publicField(this, \"reorder\", (fromIndex, toIndex) => {\n      return this.copy(move(this.items, [fromIndex], toIndex));\n    });\n    /**\n     * Compare two values\n     */\n    __publicField(this, \"compareValue\", (a, b) => {\n      const indexA = this.indexOf(a);\n      const indexB = this.indexOf(b);\n      if (indexA < indexB) return -1;\n      if (indexA > indexB) return 1;\n      return 0;\n    });\n    /**\n     * Get the range of values between two values\n     */\n    __publicField(this, \"range\", (from, to) => {\n      let keys = [];\n      let key = from;\n      while (key != null) {\n        let item = this.find(key);\n        if (item) keys.push(key);\n        if (key === to) return keys;\n        key = this.getNextValue(key);\n      }\n      return [];\n    });\n    /**\n     * Get the range of values between two values\n     */\n    __publicField(this, \"getValueRange\", (from, to) => {\n      if (from && to) {\n        if (this.compareValue(from, to) <= 0) {\n          return this.range(from, to);\n        }\n        return this.range(to, from);\n      }\n      return [];\n    });\n    /**\n     * Convert the collection to a string\n     */\n    __publicField(this, \"toString\", () => {\n      let result = \"\";\n      for (const item of this.items) {\n        const value = this.getItemValue(item);\n        const label = this.stringifyItem(item);\n        const disabled = this.getItemDisabled(item);\n        const itemString = [value, label, disabled].filter(Boolean).join(\":\");\n        result += itemString + \",\";\n      }\n      return result;\n    });\n    /**\n     * Convert the collection to a JSON object\n     */\n    __publicField(this, \"toJSON\", () => {\n      return {\n        size: this.size,\n        first: this.firstValue,\n        last: this.lastValue\n      };\n    });\n    this.items = [...options.items];\n  }\n  /**\n   * Returns the number of items in the collection\n   */\n  get size() {\n    return this.items.length;\n  }\n  /**\n   * Returns the first value in the collection\n   */\n  get firstValue() {\n    let index = 0;\n    while (this.getItemDisabled(this.at(index))) index++;\n    return this.getItemValue(this.at(index));\n  }\n  /**\n   * Returns the last value in the collection\n   */\n  get lastValue() {\n    let index = this.size - 1;\n    while (this.getItemDisabled(this.at(index))) index--;\n    return this.getItemValue(this.at(index));\n  }\n  *[Symbol.iterator]() {\n    yield* this.items;\n  }\n};\nvar match = (label, query) => {\n  return !!label?.toLowerCase().startsWith(query.toLowerCase());\n};\nvar wrap = (v, idx) => {\n  return v.map((_, index) => v[(Math.max(idx, 0) + index) % v.length]);\n};\nfunction isListCollection(v) {\n  return v instanceof ListCollection;\n}\nfunction insert(items, index, ...values) {\n  return [...items.slice(0, index), ...values, ...items.slice(index)];\n}\nfunction move(items, indices, toIndex) {\n  indices = [...indices].sort((a, b) => a - b);\n  const itemsToMove = indices.map((i) => items[i]);\n  for (let i = indices.length - 1; i >= 0; i--) {\n    items = [...items.slice(0, indices[i]), ...items.slice(indices[i] + 1)];\n  }\n  toIndex = Math.max(0, toIndex - indices.filter((i) => i < toIndex).length);\n  return [...items.slice(0, toIndex), ...itemsToMove, ...items.slice(toIndex)];\n}\n\n// src/grid-collection.ts\nvar GridCollection = class extends ListCollection {\n  constructor(options) {\n    const { columnCount } = options;\n    super(options);\n    __publicField(this, \"columnCount\");\n    /**\n     * Returns the row data in the grid\n     */\n    __publicField(this, \"getRows\", () => {\n      return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.chunk)([...this.items], this.columnCount);\n    });\n    /**\n     * Returns the number of rows in the grid\n     */\n    __publicField(this, \"getRowCount\", () => {\n      return this.getRows().length;\n    });\n    /**\n     * Returns the index of the specified row and column in the grid\n     */\n    __publicField(this, \"getCellIndex\", (row, column) => {\n      return row * this.columnCount + column;\n    });\n    /**\n     * Returns the item at the specified row and column in the grid\n     */\n    __publicField(this, \"getCell\", (row, column) => {\n      return this.at(this.getCellIndex(row, column));\n    });\n    /**\n     * Returns the row and column index for a given value\n     */\n    __publicField(this, \"getValueCell\", (value) => {\n      const index = this.indexOf(value);\n      if (index === -1) return null;\n      const row = Math.floor(index / this.columnCount);\n      const column = index % this.columnCount;\n      return { row, column };\n    });\n    /**\n     * Returns the value of the last enabled column in a row\n     */\n    __publicField(this, \"getLastEnabledColumnIndex\", (row) => {\n      for (let col = this.columnCount - 1; col >= 0; col--) {\n        const cell = this.getCell(row, col);\n        if (cell && !this.getItemDisabled(cell)) {\n          return col;\n        }\n      }\n      return null;\n    });\n    /**\n     * Returns the index of the first enabled column in a row\n     */\n    __publicField(this, \"getFirstEnabledColumnIndex\", (row) => {\n      for (let col = 0; col < this.columnCount; col++) {\n        const cell = this.getCell(row, col);\n        if (cell && !this.getItemDisabled(cell)) {\n          return col;\n        }\n      }\n      return null;\n    });\n    /**\n     * Returns the value of the previous row in the grid, based on the current value\n     */\n    __publicField(this, \"getPreviousRowValue\", (value, loop = false) => {\n      const currentCell = this.getValueCell(value);\n      if (currentCell === null) return null;\n      const rows = this.getRows();\n      const rowCount = this.getRowCount();\n      let prevRowIndex = currentCell.row;\n      let prevColumnIndex = currentCell.column;\n      for (let i = 1; i <= rowCount; i++) {\n        prevRowIndex = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.prevIndex)(rows, prevRowIndex, { loop });\n        const prevRow = rows[prevRowIndex];\n        if (!prevRow) continue;\n        const prevCell = prevRow[prevColumnIndex];\n        if (!prevCell) {\n          const lastColumnIndex = this.getLastEnabledColumnIndex(prevRowIndex);\n          if (lastColumnIndex != null) {\n            prevColumnIndex = lastColumnIndex;\n          }\n        }\n        const cell = this.getCell(prevRowIndex, prevColumnIndex);\n        if (!this.getItemDisabled(cell)) {\n          return this.getItemValue(cell);\n        }\n      }\n      return this.firstValue;\n    });\n    /**\n     * Returns the value of the next row in the grid, based on the current value\n     */\n    __publicField(this, \"getNextRowValue\", (value, loop = false) => {\n      const currentCell = this.getValueCell(value);\n      if (currentCell === null) return null;\n      const rows = this.getRows();\n      const rowCount = this.getRowCount();\n      let nextRowIndex = currentCell.row;\n      let nextColumnIndex = currentCell.column;\n      for (let i = 1; i <= rowCount; i++) {\n        nextRowIndex = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.nextIndex)(rows, nextRowIndex, { loop });\n        const nextRow = rows[nextRowIndex];\n        if (!nextRow) continue;\n        const nextCell = nextRow[nextColumnIndex];\n        if (!nextCell) {\n          const lastColumnIndex = this.getLastEnabledColumnIndex(nextRowIndex);\n          if (lastColumnIndex != null) {\n            nextColumnIndex = lastColumnIndex;\n          }\n        }\n        const cell = this.getCell(nextRowIndex, nextColumnIndex);\n        if (!this.getItemDisabled(cell)) {\n          return this.getItemValue(cell);\n        }\n      }\n      return this.lastValue;\n    });\n    this.columnCount = columnCount;\n  }\n};\nfunction isGridCollection(v) {\n  return v instanceof GridCollection;\n}\n\n// src/tree-visit.ts\nfunction access(node, indexPath, options) {\n  for (let i = 0; i < indexPath.length; i++) node = options.getChildren(node, indexPath.slice(i + 1))[indexPath[i]];\n  return node;\n}\nfunction ancestorIndexPaths(indexPaths) {\n  const sortedPaths = sortIndexPaths(indexPaths);\n  const result = [];\n  const seen = /* @__PURE__ */ new Set();\n  for (const indexPath of sortedPaths) {\n    const key = indexPath.join();\n    if (!seen.has(key)) {\n      seen.add(key);\n      result.push(indexPath);\n    }\n  }\n  return result;\n}\nfunction compareIndexPaths(a, b) {\n  for (let i = 0; i < Math.min(a.length, b.length); i++) {\n    if (a[i] < b[i]) return -1;\n    if (a[i] > b[i]) return 1;\n  }\n  return a.length - b.length;\n}\nfunction sortIndexPaths(indexPaths) {\n  return indexPaths.sort(compareIndexPaths);\n}\nfunction find(node, options) {\n  let found;\n  visit(node, {\n    ...options,\n    onEnter: (child, indexPath) => {\n      if (options.predicate(child, indexPath)) {\n        found = child;\n        return \"stop\";\n      }\n    }\n  });\n  return found;\n}\nfunction findIndexPath(node, options) {\n  let found;\n  visit(node, {\n    onEnter: (child, indexPath) => {\n      if (options.predicate(child, indexPath)) {\n        found = [...indexPath];\n        return \"stop\";\n      }\n    },\n    getChildren: options.getChildren\n  });\n  return found;\n}\nfunction reduce(node, options) {\n  let result = options.initialResult;\n  visit(node, {\n    ...options,\n    onEnter: (child, indexPath) => {\n      result = options.nextResult(result, child, indexPath);\n    }\n  });\n  return result;\n}\nfunction flatMap(node, options) {\n  return reduce(node, {\n    ...options,\n    initialResult: [],\n    nextResult: (result, child, indexPath) => {\n      result.push(...options.transform(child, indexPath));\n      return result;\n    }\n  });\n}\nfunction insertOperation(index, nodes) {\n  return { type: \"insert\", index, nodes };\n}\nfunction removeOperation(indexes) {\n  return { type: \"remove\", indexes };\n}\nfunction replaceOperation() {\n  return { type: \"replace\" };\n}\nfunction splitIndexPath(indexPath) {\n  return [indexPath.slice(0, -1), indexPath[indexPath.length - 1]];\n}\nfunction getInsertionOperations(indexPath, nodes, operations = /* @__PURE__ */ new Map()) {\n  const [parentIndexPath, index] = splitIndexPath(indexPath);\n  for (let i = parentIndexPath.length - 1; i >= 0; i--) {\n    const parentKey = parentIndexPath.slice(0, i).join();\n    switch (operations.get(parentKey)?.type) {\n      case \"remove\":\n        continue;\n    }\n    operations.set(parentKey, replaceOperation());\n  }\n  const operation = operations.get(parentIndexPath.join());\n  switch (operation?.type) {\n    case \"remove\":\n      operations.set(parentIndexPath.join(), {\n        type: \"removeThenInsert\",\n        removeIndexes: operation.indexes,\n        insertIndex: index,\n        insertNodes: nodes\n      });\n      break;\n    default:\n      operations.set(parentIndexPath.join(), insertOperation(index, nodes));\n  }\n  return operations;\n}\nfunction getRemovalOperations(indexPaths) {\n  const operations = /* @__PURE__ */ new Map();\n  const indexesToRemove = /* @__PURE__ */ new Map();\n  for (const indexPath of indexPaths) {\n    const parentKey = indexPath.slice(0, -1).join();\n    const value = indexesToRemove.get(parentKey) ?? [];\n    value.push(indexPath[indexPath.length - 1]);\n    indexesToRemove.set(\n      parentKey,\n      value.sort((a, b) => a - b)\n    );\n  }\n  for (const indexPath of indexPaths) {\n    for (let i = indexPath.length - 2; i >= 0; i--) {\n      const parentKey = indexPath.slice(0, i).join();\n      if (!operations.has(parentKey)) {\n        operations.set(parentKey, replaceOperation());\n      }\n    }\n  }\n  for (const [parentKey, indexes] of indexesToRemove) {\n    operations.set(parentKey, removeOperation(indexes));\n  }\n  return operations;\n}\nfunction getReplaceOperations(indexPath, node) {\n  const operations = /* @__PURE__ */ new Map();\n  const [parentIndexPath, index] = splitIndexPath(indexPath);\n  for (let i = parentIndexPath.length - 1; i >= 0; i--) {\n    const parentKey = parentIndexPath.slice(0, i).join();\n    operations.set(parentKey, replaceOperation());\n  }\n  operations.set(parentIndexPath.join(), {\n    type: \"removeThenInsert\",\n    removeIndexes: [index],\n    insertIndex: index,\n    insertNodes: [node]\n  });\n  return operations;\n}\nfunction mutate(node, operations, options) {\n  return map(node, {\n    ...options,\n    getChildren: (node2, indexPath) => {\n      const key = indexPath.join();\n      const operation = operations.get(key);\n      switch (operation?.type) {\n        case \"replace\":\n        case \"remove\":\n        case \"removeThenInsert\":\n        case \"insert\":\n          return options.getChildren(node2, indexPath);\n        default:\n          return [];\n      }\n    },\n    transform: (node2, children, indexPath) => {\n      const key = indexPath.join();\n      const operation = operations.get(key);\n      switch (operation?.type) {\n        case \"remove\":\n          return options.create(\n            node2,\n            children.filter((_, index) => !operation.indexes.includes(index)),\n            indexPath\n          );\n        case \"removeThenInsert\":\n          const updatedChildren = children.filter((_, index) => !operation.removeIndexes.includes(index));\n          const adjustedIndex = operation.removeIndexes.reduce(\n            (index, removedIndex) => removedIndex < index ? index - 1 : index,\n            operation.insertIndex\n          );\n          return options.create(node2, splice(updatedChildren, adjustedIndex, 0, ...operation.insertNodes), indexPath);\n        case \"insert\":\n          return options.create(node2, splice(children, operation.index, 0, ...operation.nodes), indexPath);\n        case \"replace\":\n          return options.create(node2, children, indexPath);\n        default:\n          return node2;\n      }\n    }\n  });\n}\nfunction splice(array, start, deleteCount, ...items) {\n  return [...array.slice(0, start), ...items, ...array.slice(start + deleteCount)];\n}\nfunction map(node, options) {\n  const childrenMap = {};\n  visit(node, {\n    ...options,\n    onLeave: (child, indexPath) => {\n      const keyIndexPath = [0, ...indexPath];\n      const key = keyIndexPath.join();\n      const transformed = options.transform(child, childrenMap[key] ?? [], indexPath);\n      const parentKey = keyIndexPath.slice(0, -1).join();\n      const parentChildren = childrenMap[parentKey] ?? [];\n      parentChildren.push(transformed);\n      childrenMap[parentKey] = parentChildren;\n    }\n  });\n  return childrenMap[\"\"][0];\n}\nfunction insert2(node, options) {\n  const { nodes, at } = options;\n  if (at.length === 0) throw new Error(`Can't insert nodes at the root`);\n  const state = getInsertionOperations(at, nodes);\n  return mutate(node, state, options);\n}\nfunction replace(node, options) {\n  if (options.at.length === 0) return options.node;\n  const operations = getReplaceOperations(options.at, options.node);\n  return mutate(node, operations, options);\n}\nfunction remove(node, options) {\n  if (options.indexPaths.length === 0) return node;\n  for (const indexPath of options.indexPaths) {\n    if (indexPath.length === 0) throw new Error(`Can't remove the root node`);\n  }\n  const operations = getRemovalOperations(options.indexPaths);\n  return mutate(node, operations, options);\n}\nfunction move2(node, options) {\n  if (options.indexPaths.length === 0) return node;\n  for (const indexPath of options.indexPaths) {\n    if (indexPath.length === 0) throw new Error(`Can't move the root node`);\n  }\n  if (options.to.length === 0) throw new Error(`Can't move nodes to the root`);\n  const _ancestorIndexPaths = ancestorIndexPaths(options.indexPaths);\n  const nodesToInsert = _ancestorIndexPaths.map((indexPath) => access(node, indexPath, options));\n  const operations = getInsertionOperations(options.to, nodesToInsert, getRemovalOperations(_ancestorIndexPaths));\n  return mutate(node, operations, options);\n}\nfunction visit(node, options) {\n  const { onEnter, onLeave, getChildren } = options;\n  let indexPath = [];\n  let stack = [{ node }];\n  const getIndexPath = options.reuseIndexPath ? () => indexPath : () => indexPath.slice();\n  while (stack.length > 0) {\n    let wrapper = stack[stack.length - 1];\n    if (wrapper.state === void 0) {\n      const enterResult = onEnter?.(wrapper.node, getIndexPath());\n      if (enterResult === \"stop\") return;\n      wrapper.state = enterResult === \"skip\" ? -1 : 0;\n    }\n    const children = wrapper.children || getChildren(wrapper.node, getIndexPath());\n    wrapper.children || (wrapper.children = children);\n    if (wrapper.state !== -1) {\n      if (wrapper.state < children.length) {\n        let currentIndex = wrapper.state;\n        indexPath.push(currentIndex);\n        stack.push({ node: children[currentIndex] });\n        wrapper.state = currentIndex + 1;\n        continue;\n      }\n      const leaveResult = onLeave?.(wrapper.node, getIndexPath());\n      if (leaveResult === \"stop\") return;\n    }\n    indexPath.pop();\n    stack.pop();\n  }\n}\n\n// src/tree-collection.ts\nvar TreeCollection = class _TreeCollection {\n  constructor(options) {\n    this.options = options;\n    __publicField(this, \"rootNode\");\n    __publicField(this, \"isEqual\", (other) => {\n      return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isEqual)(this.rootNode, other.rootNode);\n    });\n    __publicField(this, \"getNodeChildren\", (node) => {\n      return this.options.nodeToChildren?.(node) ?? fallback2.nodeToChildren(node) ?? [];\n    });\n    __publicField(this, \"getNodeChildrenCount\", (node) => {\n      return this.options.nodeToChildrenCount?.(node) ?? fallback2.nodeToChildrenCount(node);\n    });\n    __publicField(this, \"getNodeValue\", (node) => {\n      return this.options.nodeToValue?.(node) ?? fallback2.nodeToValue(node);\n    });\n    __publicField(this, \"getNodeDisabled\", (node) => {\n      return this.options.isNodeDisabled?.(node) ?? fallback2.isNodeDisabled(node);\n    });\n    __publicField(this, \"stringify\", (value) => {\n      const node = this.findNode(value);\n      if (!node) return null;\n      return this.stringifyNode(node);\n    });\n    __publicField(this, \"stringifyNode\", (node) => {\n      return this.options.nodeToString?.(node) ?? fallback2.nodeToString(node);\n    });\n    __publicField(this, \"getFirstNode\", (rootNode = this.rootNode) => {\n      let firstChild;\n      visit(rootNode, {\n        getChildren: this.getNodeChildren,\n        onEnter: (node, indexPath) => {\n          if (!firstChild && indexPath.length > 0 && !this.getNodeDisabled(node)) {\n            firstChild = node;\n            return \"stop\";\n          }\n        }\n      });\n      return firstChild;\n    });\n    __publicField(this, \"getLastNode\", (rootNode = this.rootNode, opts = {}) => {\n      let lastChild;\n      visit(rootNode, {\n        getChildren: this.getNodeChildren,\n        onEnter: (node, indexPath) => {\n          const nodeValue = this.getNodeValue(node);\n          if (opts.skip?.({ value: nodeValue, node, indexPath })) return \"skip\";\n          if (indexPath.length > 1) return \"skip\";\n          if (!this.getNodeDisabled(node)) {\n            lastChild = node;\n          }\n        }\n      });\n      return lastChild;\n    });\n    __publicField(this, \"at\", (indexPath) => {\n      return access(this.rootNode, indexPath, {\n        getChildren: this.getNodeChildren\n      });\n    });\n    __publicField(this, \"findNode\", (value, rootNode = this.rootNode) => {\n      return find(rootNode, {\n        getChildren: this.getNodeChildren,\n        predicate: (node) => this.getNodeValue(node) === value\n      });\n    });\n    __publicField(this, \"sort\", (values) => {\n      return values.reduce(\n        (acc, value) => {\n          const indexPath = this.getIndexPath(value);\n          if (indexPath != null) acc.push({ value, indexPath });\n          return acc;\n        },\n        []\n      ).sort((a, b) => compareIndexPaths(a.indexPath, b.indexPath)).map(({ value }) => value);\n    });\n    __publicField(this, \"getIndexPath\", (value) => {\n      return findIndexPath(this.rootNode, {\n        getChildren: this.getNodeChildren,\n        predicate: (node) => this.getNodeValue(node) === value\n      });\n    });\n    __publicField(this, \"getValue\", (indexPath) => {\n      const node = this.at(indexPath);\n      return node ? this.getNodeValue(node) : void 0;\n    });\n    __publicField(this, \"getValuePath\", (indexPath) => {\n      if (!indexPath) return [];\n      const valuePath = [];\n      let currentPath = [...indexPath];\n      while (currentPath.length > 0) {\n        const node = this.at(currentPath);\n        if (node) valuePath.unshift(this.getNodeValue(node));\n        currentPath.pop();\n      }\n      return valuePath;\n    });\n    __publicField(this, \"getDepth\", (value) => {\n      const indexPath = findIndexPath(this.rootNode, {\n        getChildren: this.getNodeChildren,\n        predicate: (node) => this.getNodeValue(node) === value\n      });\n      return indexPath?.length ?? 0;\n    });\n    __publicField(this, \"isRootNode\", (node) => {\n      return this.getNodeValue(node) === this.getNodeValue(this.rootNode);\n    });\n    __publicField(this, \"contains\", (parentIndexPath, valueIndexPath) => {\n      if (!parentIndexPath || !valueIndexPath) return false;\n      return valueIndexPath.slice(0, parentIndexPath.length).every((_, i) => parentIndexPath[i] === valueIndexPath[i]);\n    });\n    __publicField(this, \"getNextNode\", (value, opts = {}) => {\n      let found = false;\n      let nextNode;\n      visit(this.rootNode, {\n        getChildren: this.getNodeChildren,\n        onEnter: (node, indexPath) => {\n          if (this.isRootNode(node)) return;\n          const nodeValue = this.getNodeValue(node);\n          if (opts.skip?.({ value: nodeValue, node, indexPath })) {\n            if (nodeValue === value) {\n              found = true;\n            }\n            return \"skip\";\n          }\n          if (found && !this.getNodeDisabled(node)) {\n            nextNode = node;\n            return \"stop\";\n          }\n          if (nodeValue === value) {\n            found = true;\n          }\n        }\n      });\n      return nextNode;\n    });\n    __publicField(this, \"getPreviousNode\", (value, opts = {}) => {\n      let previousNode;\n      let found = false;\n      visit(this.rootNode, {\n        getChildren: this.getNodeChildren,\n        onEnter: (node, indexPath) => {\n          if (this.isRootNode(node)) return;\n          const nodeValue = this.getNodeValue(node);\n          if (opts.skip?.({ value: nodeValue, node, indexPath })) {\n            return \"skip\";\n          }\n          if (nodeValue === value) {\n            found = true;\n            return \"stop\";\n          }\n          if (!this.getNodeDisabled(node)) {\n            previousNode = node;\n          }\n        }\n      });\n      return found ? previousNode : void 0;\n    });\n    __publicField(this, \"getParentNodes\", (values) => {\n      const result = [];\n      let indexPath = this.getIndexPath(values);\n      while (indexPath && indexPath.length > 0) {\n        indexPath.pop();\n        const parentNode = this.at(indexPath);\n        if (parentNode && !this.isRootNode(parentNode)) {\n          result.unshift(parentNode);\n        }\n      }\n      return result;\n    });\n    __publicField(this, \"getParentIndexPath\", (indexPath) => {\n      return indexPath.slice(0, -1);\n    });\n    __publicField(this, \"getParentNode\", (valueOrIndexPath) => {\n      const indexPath = typeof valueOrIndexPath === \"string\" ? this.getIndexPath(valueOrIndexPath) : valueOrIndexPath;\n      return indexPath ? this.at(this.getParentIndexPath(indexPath)) : void 0;\n    });\n    __publicField(this, \"visit\", (opts) => {\n      const { skip, ...rest } = opts;\n      visit(this.rootNode, {\n        ...rest,\n        getChildren: this.getNodeChildren,\n        onEnter: (node, indexPath) => {\n          if (this.isRootNode(node)) return;\n          if (skip?.({ value: this.getNodeValue(node), node, indexPath })) return \"skip\";\n          return rest.onEnter?.(node, indexPath);\n        }\n      });\n    });\n    __publicField(this, \"getPreviousSibling\", (indexPath) => {\n      const parentNode = this.getParentNode(indexPath);\n      if (!parentNode) return;\n      const siblings = this.getNodeChildren(parentNode);\n      let idx = siblings.findIndex((sibling) => this.getValue(indexPath) === this.getNodeValue(sibling));\n      while (--idx >= 0) {\n        const sibling = siblings[idx];\n        if (!this.getNodeDisabled(sibling)) return sibling;\n      }\n      return;\n    });\n    __publicField(this, \"getNextSibling\", (indexPath) => {\n      const parentNode = this.getParentNode(indexPath);\n      if (!parentNode) return;\n      const siblings = this.getNodeChildren(parentNode);\n      let idx = siblings.findIndex((sibling) => this.getValue(indexPath) === this.getNodeValue(sibling));\n      while (++idx < siblings.length) {\n        const sibling = siblings[idx];\n        if (!this.getNodeDisabled(sibling)) return sibling;\n      }\n      return;\n    });\n    __publicField(this, \"getSiblingNodes\", (indexPath) => {\n      const parentNode = this.getParentNode(indexPath);\n      return parentNode ? this.getNodeChildren(parentNode) : [];\n    });\n    __publicField(this, \"getValues\", (rootNode = this.rootNode) => {\n      const values = flatMap(rootNode, {\n        getChildren: this.getNodeChildren,\n        transform: (node) => [this.getNodeValue(node)]\n      });\n      return values.slice(1);\n    });\n    __publicField(this, \"isSameDepth\", (indexPath, depth) => {\n      if (depth == null) return true;\n      return indexPath.length === depth;\n    });\n    __publicField(this, \"isBranchNode\", (node) => {\n      return this.getNodeChildren(node).length > 0 || this.getNodeChildrenCount(node) != null;\n    });\n    __publicField(this, \"getBranchValues\", (rootNode = this.rootNode, opts = {}) => {\n      let values = [];\n      visit(rootNode, {\n        getChildren: this.getNodeChildren,\n        onEnter: (node, indexPath) => {\n          const nodeValue = this.getNodeValue(node);\n          if (opts.skip?.({ value: nodeValue, node, indexPath })) return \"skip\";\n          if (this.isBranchNode(node) && this.isSameDepth(indexPath, opts.depth)) {\n            values.push(this.getNodeValue(node));\n          }\n        }\n      });\n      return values.slice(1);\n    });\n    __publicField(this, \"flatten\", (rootNode = this.rootNode) => {\n      const nodes = flatMap(rootNode, {\n        getChildren: this.getNodeChildren,\n        transform: (node, indexPath) => {\n          const children = this.getNodeChildren(node).map((child) => this.getNodeValue(child));\n          return [\n            (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.compact)({\n              label: this.stringifyNode(node),\n              value: this.getNodeValue(node),\n              indexPath,\n              children: children.length > 0 ? children : void 0\n            })\n          ];\n        }\n      });\n      return nodes.slice(1);\n    });\n    __publicField(this, \"_create\", (node, children) => {\n      return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.compact)({ ...node, children });\n    });\n    __publicField(this, \"_insert\", (rootNode, indexPath, nodes) => {\n      return this._set(\n        insert2(rootNode, { at: indexPath, nodes, getChildren: this.getNodeChildren, create: this._create })\n      );\n    });\n    __publicField(this, \"_set\", (rootNode) => {\n      return new _TreeCollection({ ...this.options, rootNode });\n    });\n    __publicField(this, \"_replace\", (rootNode, indexPath, node) => {\n      return this._set(\n        replace(rootNode, { at: indexPath, node, getChildren: this.getNodeChildren, create: this._create })\n      );\n    });\n    __publicField(this, \"_move\", (rootNode, indexPaths, to) => {\n      return this._set(move2(rootNode, { indexPaths, to, getChildren: this.getNodeChildren, create: this._create }));\n    });\n    __publicField(this, \"_remove\", (rootNode, indexPaths) => {\n      return this._set(remove(rootNode, { indexPaths, getChildren: this.getNodeChildren, create: this._create }));\n    });\n    __publicField(this, \"replace\", (indexPath, node) => {\n      return this._replace(this.rootNode, indexPath, node);\n    });\n    __publicField(this, \"remove\", (indexPaths) => {\n      return this._remove(this.rootNode, indexPaths);\n    });\n    __publicField(this, \"insertBefore\", (indexPath, nodes) => {\n      const parentNode = this.getParentNode(indexPath);\n      return parentNode ? this._insert(this.rootNode, indexPath, nodes) : void 0;\n    });\n    __publicField(this, \"insertAfter\", (indexPath, nodes) => {\n      const parentNode = this.getParentNode(indexPath);\n      if (!parentNode) return;\n      const nextIndex2 = [...indexPath.slice(0, -1), indexPath[indexPath.length - 1] + 1];\n      return this._insert(this.rootNode, nextIndex2, nodes);\n    });\n    __publicField(this, \"move\", (fromIndexPaths, toIndexPath) => {\n      return this._move(this.rootNode, fromIndexPaths, toIndexPath);\n    });\n    __publicField(this, \"toJSON\", () => {\n      return this.getValues(this.rootNode);\n    });\n    this.rootNode = options.rootNode;\n  }\n};\nfunction flattenedToTree(nodes) {\n  let rootNode = {\n    value: \"ROOT\"\n  };\n  nodes.map((node) => {\n    const { indexPath, label, value } = node;\n    if (!indexPath.length) {\n      Object.assign(rootNode, { label, value, children: [] });\n      return;\n    }\n    rootNode = insert2(rootNode, {\n      at: indexPath,\n      nodes: [(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.compact)({ label, value })],\n      getChildren: (node2) => node2.children ?? [],\n      create: (node2, children) => {\n        return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.compact)({ ...node2, children });\n      }\n    });\n  });\n  return new TreeCollection({ rootNode });\n}\nfunction filePathToTree(paths) {\n  const rootNode = {\n    label: \"\",\n    value: \"ROOT\",\n    children: []\n  };\n  paths.forEach((path) => {\n    const parts = path.split(\"/\");\n    let currentNode = rootNode;\n    parts.forEach((part) => {\n      let childNode = currentNode.children?.find((child) => child.label === part);\n      if (!childNode) {\n        childNode = {\n          value: parts.slice(0, parts.indexOf(part) + 1).join(\"/\"),\n          label: part\n        };\n        currentNode.children || (currentNode.children = []);\n        currentNode.children.push(childNode);\n      }\n      currentNode = childNode;\n    });\n  });\n  return new TreeCollection({ rootNode });\n}\nvar fallback2 = {\n  nodeToValue(node) {\n    if (typeof node === \"string\") return node;\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isObject)(node) && (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.hasProp)(node, \"value\")) return node.value;\n    return \"\";\n  },\n  nodeToString(node) {\n    if (typeof node === \"string\") return node;\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isObject)(node) && (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.hasProp)(node, \"label\")) return node.label;\n    return fallback2.nodeToValue(node);\n  },\n  isNodeDisabled(node) {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isObject)(node) && (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.hasProp)(node, \"disabled\")) return !!node.disabled;\n    return false;\n  },\n  nodeToChildren(node) {\n    return node.children;\n  },\n  nodeToChildrenCount(node) {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isObject)(node) && (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.hasProp)(node, \"childrenCount\")) return node.childrenCount;\n  }\n};\nvar Selection = class _Selection extends Set {\n  constructor(values = []) {\n    super(values);\n    __publicField(this, \"selectionMode\", \"single\");\n    __publicField(this, \"deselectable\", true);\n    __publicField(this, \"copy\", () => {\n      const clone = new _Selection([...this]);\n      return this.sync(clone);\n    });\n    __publicField(this, \"sync\", (other) => {\n      other.selectionMode = this.selectionMode;\n      other.deselectable = this.deselectable;\n      return other;\n    });\n    __publicField(this, \"isEmpty\", () => {\n      return this.size === 0;\n    });\n    __publicField(this, \"isSelected\", (value) => {\n      if (this.selectionMode === \"none\" || value == null) {\n        return false;\n      }\n      return this.has(value);\n    });\n    __publicField(this, \"canSelect\", (collection, value) => {\n      return this.selectionMode !== \"none\" || !collection.getItemDisabled(collection.find(value));\n    });\n    __publicField(this, \"firstSelectedValue\", (collection) => {\n      let firstValue = null;\n      for (let value of this) {\n        if (!firstValue || collection.compareValue(value, firstValue) < 0) {\n          firstValue = value;\n        }\n      }\n      return firstValue;\n    });\n    __publicField(this, \"lastSelectedValue\", (collection) => {\n      let lastValue = null;\n      for (let value of this) {\n        if (!lastValue || collection.compareValue(value, lastValue) > 0) {\n          lastValue = value;\n        }\n      }\n      return lastValue;\n    });\n    __publicField(this, \"extendSelection\", (collection, anchorValue, targetValue) => {\n      if (this.selectionMode === \"none\") {\n        return this;\n      }\n      if (this.selectionMode === \"single\") {\n        return this.replaceSelection(collection, targetValue);\n      }\n      const selection = this.copy();\n      const lastSelected = Array.from(this).pop();\n      for (let key of collection.getValueRange(anchorValue, lastSelected ?? targetValue)) {\n        selection.delete(key);\n      }\n      for (let key of collection.getValueRange(targetValue, anchorValue)) {\n        if (this.canSelect(collection, key)) {\n          selection.add(key);\n        }\n      }\n      return selection;\n    });\n    __publicField(this, \"toggleSelection\", (collection, value) => {\n      if (this.selectionMode === \"none\") {\n        return this;\n      }\n      if (this.selectionMode === \"single\" && !this.isSelected(value)) {\n        return this.replaceSelection(collection, value);\n      }\n      const selection = this.copy();\n      if (selection.has(value)) {\n        selection.delete(value);\n      } else if (selection.canSelect(collection, value)) {\n        selection.add(value);\n      }\n      return selection;\n    });\n    __publicField(this, \"replaceSelection\", (collection, value) => {\n      if (this.selectionMode === \"none\") {\n        return this;\n      }\n      if (value == null) {\n        return this;\n      }\n      if (!this.canSelect(collection, value)) {\n        return this;\n      }\n      const selection = new _Selection([value]);\n      return this.sync(selection);\n    });\n    __publicField(this, \"setSelection\", (values) => {\n      if (this.selectionMode === \"none\") {\n        return this;\n      }\n      let selection = new _Selection();\n      for (let value of values) {\n        if (value != null) {\n          selection.add(value);\n          if (this.selectionMode === \"single\") {\n            break;\n          }\n        }\n      }\n      return this.sync(selection);\n    });\n    __publicField(this, \"clearSelection\", () => {\n      const selection = this.copy();\n      if (selection.deselectable && selection.size > 0) {\n        selection.clear();\n      }\n      return selection;\n    });\n    __publicField(this, \"select\", (collection, value, forceToggle) => {\n      if (this.selectionMode === \"none\") {\n        return this;\n      }\n      if (this.selectionMode === \"single\") {\n        if (this.isSelected(value) && this.deselectable) {\n          return this.toggleSelection(collection, value);\n        } else {\n          return this.replaceSelection(collection, value);\n        }\n      } else if (this.selectionMode === \"multiple\" || forceToggle) {\n        return this.toggleSelection(collection, value);\n      } else {\n        return this.replaceSelection(collection, value);\n      }\n    });\n    __publicField(this, \"deselect\", (value) => {\n      const selection = this.copy();\n      selection.delete(value);\n      return selection;\n    });\n    __publicField(this, \"isEqual\", (other) => {\n      return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isEqual)(Array.from(this), Array.from(other));\n    });\n  }\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9jb2xsZWN0aW9uL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFpRzs7QUFFakc7QUFDQSw4RUFBOEUsNkRBQTZEO0FBQzNJO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1REFBUSxVQUFVLHNEQUFPO0FBQ2pDO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxRQUFRLHVEQUFRLFVBQVUsc0RBQU87QUFDakM7QUFDQSxHQUFHO0FBQ0g7QUFDQSxRQUFRLHVEQUFRLFVBQVUsc0RBQU87QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxrREFBa0Q7QUFDckYsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxzREFBTztBQUNwQixLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLHFCQUFxQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMscUNBQXFDO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLFFBQVE7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGNBQWM7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxvREFBSztBQUNsQixLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZixLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsVUFBVTtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0Isd0JBQXdCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixlQUFlO0FBQ3JDLHVCQUF1Qix3REFBUyx1QkFBdUIsTUFBTTtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsZUFBZTtBQUNyQyx1QkFBdUIsd0RBQVMsdUJBQXVCLE1BQU07QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esa0JBQWtCLHNCQUFzQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixrQ0FBa0M7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsUUFBUTtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsUUFBUTtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLFFBQVE7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsVUFBVSxZQUFZO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLGdDQUFnQztBQUMxQztBQUNBLGlCQUFpQixNQUFNO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsOEJBQThCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsc0RBQU87QUFDcEIsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEtBQUs7QUFDTCwyRUFBMkU7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixtQ0FBbUM7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QyxrQkFBa0I7QUFDOUQ7QUFDQSxTQUFTO0FBQ1Q7QUFDQSwyRUFBMkUsT0FBTztBQUNsRixLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCx3REFBd0Q7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsbUNBQW1DO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsS0FBSztBQUNMLDREQUE0RDtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixtQ0FBbUM7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLGNBQWMsZ0JBQWdCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsaURBQWlEO0FBQ3hFO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTCwrRUFBK0U7QUFDL0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixtQ0FBbUM7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxzREFBTztBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsS0FBSztBQUNMO0FBQ0EsYUFBYSxzREFBTyxHQUFHLG1CQUFtQjtBQUMxQyxLQUFLO0FBQ0w7QUFDQTtBQUNBLDRCQUE0QiwrRUFBK0U7QUFDM0c7QUFDQSxLQUFLO0FBQ0w7QUFDQSxtQ0FBbUMsMkJBQTJCO0FBQzlELEtBQUs7QUFDTDtBQUNBO0FBQ0EsNEJBQTRCLDhFQUE4RTtBQUMxRztBQUNBLEtBQUs7QUFDTDtBQUNBLHlDQUF5Qyx5RUFBeUU7QUFDbEgsS0FBSztBQUNMO0FBQ0EsMENBQTBDLHFFQUFxRTtBQUMvRyxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSwwQkFBMEI7QUFDdEM7QUFDQSxnQ0FBZ0MsNEJBQTRCO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxzREFBTyxHQUFHLGNBQWM7QUFDdEM7QUFDQTtBQUNBLGVBQWUsc0RBQU8sR0FBRyxvQkFBb0I7QUFDN0M7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNILDhCQUE4QixVQUFVO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0gsOEJBQThCLFVBQVU7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHVEQUFRLFVBQVUsc0RBQU87QUFDakM7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLFFBQVEsdURBQVEsVUFBVSxzREFBTztBQUNqQztBQUNBLEdBQUc7QUFDSDtBQUNBLFFBQVEsdURBQVEsVUFBVSxzREFBTztBQUNqQztBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsUUFBUSx1REFBUSxVQUFVLHNEQUFPO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxhQUFhLHNEQUFPO0FBQ3BCLEtBQUs7QUFDTDtBQUNBOztBQUUwSSIsInNvdXJjZXMiOlsiL1VzZXJzL3JhdW5hcXBsYWhhL0Rlc2t0b3AvcGljay1hLWJvdC0yMDI1L25vZGVfbW9kdWxlcy9AemFnLWpzL2NvbGxlY3Rpb24vZGlzdC9pbmRleC5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29tcGFjdCwgaXNFcXVhbCwgY2h1bmssIHByZXZJbmRleCwgbmV4dEluZGV4LCBpc09iamVjdCwgaGFzUHJvcCB9IGZyb20gJ0B6YWctanMvdXRpbHMnO1xuXG52YXIgX19kZWZQcm9wID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIF9fZGVmTm9ybWFsUHJvcCA9IChvYmosIGtleSwgdmFsdWUpID0+IGtleSBpbiBvYmogPyBfX2RlZlByb3Aob2JqLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSwgdmFsdWUgfSkgOiBvYmpba2V5XSA9IHZhbHVlO1xudmFyIF9fcHVibGljRmllbGQgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBfX2RlZk5vcm1hbFByb3Aob2JqLCB0eXBlb2Yga2V5ICE9PSBcInN5bWJvbFwiID8ga2V5ICsgXCJcIiA6IGtleSwgdmFsdWUpO1xudmFyIGZhbGxiYWNrID0ge1xuICBpdGVtVG9WYWx1ZShpdGVtKSB7XG4gICAgaWYgKHR5cGVvZiBpdGVtID09PSBcInN0cmluZ1wiKSByZXR1cm4gaXRlbTtcbiAgICBpZiAoaXNPYmplY3QoaXRlbSkgJiYgaGFzUHJvcChpdGVtLCBcInZhbHVlXCIpKSByZXR1cm4gaXRlbS52YWx1ZTtcbiAgICByZXR1cm4gXCJcIjtcbiAgfSxcbiAgaXRlbVRvU3RyaW5nKGl0ZW0pIHtcbiAgICBpZiAodHlwZW9mIGl0ZW0gPT09IFwic3RyaW5nXCIpIHJldHVybiBpdGVtO1xuICAgIGlmIChpc09iamVjdChpdGVtKSAmJiBoYXNQcm9wKGl0ZW0sIFwibGFiZWxcIikpIHJldHVybiBpdGVtLmxhYmVsO1xuICAgIHJldHVybiBmYWxsYmFjay5pdGVtVG9WYWx1ZShpdGVtKTtcbiAgfSxcbiAgaXNJdGVtRGlzYWJsZWQoaXRlbSkge1xuICAgIGlmIChpc09iamVjdChpdGVtKSAmJiBoYXNQcm9wKGl0ZW0sIFwiZGlzYWJsZWRcIikpIHJldHVybiAhIWl0ZW0uZGlzYWJsZWQ7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59O1xudmFyIExpc3RDb2xsZWN0aW9uID0gY2xhc3MgX0xpc3RDb2xsZWN0aW9uIHtcbiAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgLyoqXG4gICAgICogVGhlIGl0ZW1zIGluIHRoZSBjb2xsZWN0aW9uXG4gICAgICovXG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcIml0ZW1zXCIpO1xuICAgIC8qKlxuICAgICAqIENvcHkgdGhlIGNvbGxlY3Rpb25cbiAgICAgKi9cbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiY29weVwiLCAoaXRlbXMpID0+IHtcbiAgICAgIHJldHVybiBuZXcgX0xpc3RDb2xsZWN0aW9uKHsgLi4udGhpcy5vcHRpb25zLCBpdGVtczogaXRlbXMgPz8gWy4uLnRoaXMuaXRlbXNdIH0pO1xuICAgIH0pO1xuICAgIC8qKlxuICAgICAqIENoZWNrIGlmIHRoZSBjb2xsZWN0aW9uIGlzIGVxdWFsIHRvIGFub3RoZXIgY29sbGVjdGlvblxuICAgICAqL1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJpc0VxdWFsXCIsIChvdGhlcikgPT4ge1xuICAgICAgcmV0dXJuIGlzRXF1YWwodGhpcy5pdGVtcywgb3RoZXIuaXRlbXMpO1xuICAgIH0pO1xuICAgIC8qKlxuICAgICAqIEZ1bmN0aW9uIHRvIHVwZGF0ZSB0aGUgY29sbGVjdGlvbiBpdGVtc1xuICAgICAqL1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJzZXRJdGVtc1wiLCAoaXRlbXMpID0+IHtcbiAgICAgIHJldHVybiB0aGlzLmNvcHkoaXRlbXMpO1xuICAgIH0pO1xuICAgIC8qKlxuICAgICAqIFJldHVybnMgYWxsIHRoZSB2YWx1ZXMgaW4gdGhlIGNvbGxlY3Rpb25cbiAgICAgKi9cbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZ2V0VmFsdWVzXCIsIChpdGVtcyA9IHRoaXMuaXRlbXMpID0+IHtcbiAgICAgIHJldHVybiBBcnJheS5mcm9tKGl0ZW1zKS5tYXAoKGl0ZW0pID0+IHRoaXMuZ2V0SXRlbVZhbHVlKGl0ZW0pKS5maWx0ZXIoQm9vbGVhbik7XG4gICAgfSk7XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBpdGVtIGJhc2VkIG9uIGl0cyB2YWx1ZVxuICAgICAqL1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJmaW5kXCIsICh2YWx1ZSkgPT4ge1xuICAgICAgaWYgKHZhbHVlID09IG51bGwpIHJldHVybiBudWxsO1xuICAgICAgY29uc3QgaW5kZXggPSB0aGlzLmluZGV4T2YodmFsdWUpO1xuICAgICAgcmV0dXJuIGluZGV4ICE9IG51bGwgPyB0aGlzLmF0KGluZGV4KSA6IG51bGw7XG4gICAgfSk7XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBpdGVtcyBiYXNlZCBvbiBpdHMgdmFsdWVzXG4gICAgICovXG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImZpbmRNYW55XCIsICh2YWx1ZXMpID0+IHtcbiAgICAgIHJldHVybiBBcnJheS5mcm9tKHZhbHVlcykubWFwKCh2YWx1ZSkgPT4gdGhpcy5maW5kKHZhbHVlKSkuZmlsdGVyKChpdGVtKSA9PiBpdGVtICE9IG51bGwpO1xuICAgIH0pO1xuICAgIC8qKlxuICAgICAqIEdldCB0aGUgaXRlbSBiYXNlZCBvbiBpdHMgaW5kZXhcbiAgICAgKi9cbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiYXRcIiwgKGluZGV4KSA9PiB7XG4gICAgICBpZiAoIXRoaXMub3B0aW9ucy5ncm91cEJ5ICYmICF0aGlzLm9wdGlvbnMuZ3JvdXBTb3J0KSB7XG4gICAgICAgIHJldHVybiB0aGlzLml0ZW1zW2luZGV4XSA/PyBudWxsO1xuICAgICAgfVxuICAgICAgbGV0IGlkeCA9IDA7XG4gICAgICBjb25zdCBncm91cHMgPSB0aGlzLmdyb3VwKCk7XG4gICAgICBmb3IgKGNvbnN0IFssIGl0ZW1zXSBvZiBncm91cHMpIHtcbiAgICAgICAgZm9yIChjb25zdCBpdGVtIG9mIGl0ZW1zKSB7XG4gICAgICAgICAgaWYgKGlkeCA9PT0gaW5kZXgpIHJldHVybiBpdGVtO1xuICAgICAgICAgIGlkeCsrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwic29ydEZuXCIsICh2YWx1ZUEsIHZhbHVlQikgPT4ge1xuICAgICAgY29uc3QgaW5kZXhBID0gdGhpcy5pbmRleE9mKHZhbHVlQSk7XG4gICAgICBjb25zdCBpbmRleEIgPSB0aGlzLmluZGV4T2YodmFsdWVCKTtcbiAgICAgIHJldHVybiAoaW5kZXhBID8/IDApIC0gKGluZGV4QiA/PyAwKTtcbiAgICB9KTtcbiAgICAvKipcbiAgICAgKiBTb3J0IHRoZSB2YWx1ZXMgYmFzZWQgb24gdGhlaXIgaW5kZXhcbiAgICAgKi9cbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwic29ydFwiLCAodmFsdWVzKSA9PiB7XG4gICAgICByZXR1cm4gWy4uLnZhbHVlc10uc29ydCh0aGlzLnNvcnRGbi5iaW5kKHRoaXMpKTtcbiAgICB9KTtcbiAgICAvKipcbiAgICAgKiBDb252ZXJ0IGFuIGl0ZW0gdG8gYSB2YWx1ZVxuICAgICAqL1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJnZXRJdGVtVmFsdWVcIiwgKGl0ZW0pID0+IHtcbiAgICAgIGlmIChpdGVtID09IG51bGwpIHJldHVybiBudWxsO1xuICAgICAgcmV0dXJuIHRoaXMub3B0aW9ucy5pdGVtVG9WYWx1ZT8uKGl0ZW0pID8/IGZhbGxiYWNrLml0ZW1Ub1ZhbHVlKGl0ZW0pO1xuICAgIH0pO1xuICAgIC8qKlxuICAgICAqIFdoZXRoZXIgYW4gaXRlbSBpcyBkaXNhYmxlZFxuICAgICAqL1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJnZXRJdGVtRGlzYWJsZWRcIiwgKGl0ZW0pID0+IHtcbiAgICAgIGlmIChpdGVtID09IG51bGwpIHJldHVybiBmYWxzZTtcbiAgICAgIHJldHVybiB0aGlzLm9wdGlvbnMuaXNJdGVtRGlzYWJsZWQ/LihpdGVtKSA/PyBmYWxsYmFjay5pc0l0ZW1EaXNhYmxlZChpdGVtKTtcbiAgICB9KTtcbiAgICAvKipcbiAgICAgKiBDb252ZXJ0IGFuIGl0ZW0gdG8gYSBzdHJpbmdcbiAgICAgKi9cbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwic3RyaW5naWZ5SXRlbVwiLCAoaXRlbSkgPT4ge1xuICAgICAgaWYgKGl0ZW0gPT0gbnVsbCkgcmV0dXJuIG51bGw7XG4gICAgICByZXR1cm4gdGhpcy5vcHRpb25zLml0ZW1Ub1N0cmluZz8uKGl0ZW0pID8/IGZhbGxiYWNrLml0ZW1Ub1N0cmluZyhpdGVtKTtcbiAgICB9KTtcbiAgICAvKipcbiAgICAgKiBDb252ZXJ0IGEgdmFsdWUgdG8gYSBzdHJpbmdcbiAgICAgKi9cbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwic3RyaW5naWZ5XCIsICh2YWx1ZSkgPT4ge1xuICAgICAgaWYgKHZhbHVlID09IG51bGwpIHJldHVybiBudWxsO1xuICAgICAgcmV0dXJuIHRoaXMuc3RyaW5naWZ5SXRlbSh0aGlzLmZpbmQodmFsdWUpKTtcbiAgICB9KTtcbiAgICAvKipcbiAgICAgKiBDb252ZXJ0IGFuIGFycmF5IG9mIGl0ZW1zIHRvIGEgc3RyaW5nXG4gICAgICovXG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInN0cmluZ2lmeUl0ZW1zXCIsIChpdGVtcywgc2VwYXJhdG9yID0gXCIsIFwiKSA9PiB7XG4gICAgICByZXR1cm4gQXJyYXkuZnJvbShpdGVtcykubWFwKChpdGVtKSA9PiB0aGlzLnN0cmluZ2lmeUl0ZW0oaXRlbSkpLmZpbHRlcihCb29sZWFuKS5qb2luKHNlcGFyYXRvcik7XG4gICAgfSk7XG4gICAgLyoqXG4gICAgICogQ29udmVydCBhbiBhcnJheSBvZiBpdGVtcyB0byBhIHN0cmluZ1xuICAgICAqL1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJzdHJpbmdpZnlNYW55XCIsICh2YWx1ZSwgc2VwYXJhdG9yKSA9PiB7XG4gICAgICByZXR1cm4gdGhpcy5zdHJpbmdpZnlJdGVtcyh0aGlzLmZpbmRNYW55KHZhbHVlKSwgc2VwYXJhdG9yKTtcbiAgICB9KTtcbiAgICAvKipcbiAgICAgKiBXaGV0aGVyIHRoZSBjb2xsZWN0aW9uIGhhcyBhIHZhbHVlXG4gICAgICovXG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImhhc1wiLCAodmFsdWUpID0+IHtcbiAgICAgIHJldHVybiB0aGlzLmluZGV4T2YodmFsdWUpICE9PSAtMTtcbiAgICB9KTtcbiAgICAvKipcbiAgICAgKiBXaGV0aGVyIHRoZSBjb2xsZWN0aW9uIGhhcyBhbiBpdGVtXG4gICAgICovXG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImhhc0l0ZW1cIiwgKGl0ZW0pID0+IHtcbiAgICAgIGlmIChpdGVtID09IG51bGwpIHJldHVybiBmYWxzZTtcbiAgICAgIHJldHVybiB0aGlzLmhhcyh0aGlzLmdldEl0ZW1WYWx1ZShpdGVtKSk7XG4gICAgfSk7XG4gICAgLyoqXG4gICAgICogR3JvdXAgaXRlbXMgYnkgdGhlIGdyb3VwQnkgZnVuY3Rpb24gcHJvdmlkZWQgaW4gb3B0aW9uc1xuICAgICAqIFJldHVybnMgYW4gYXJyYXkgb2YgW2dyb3VwS2V5LCBpdGVtc10gdHVwbGVzXG4gICAgICovXG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImdyb3VwXCIsICgpID0+IHtcbiAgICAgIGNvbnN0IHsgZ3JvdXBCeSwgZ3JvdXBTb3J0IH0gPSB0aGlzLm9wdGlvbnM7XG4gICAgICBpZiAoIWdyb3VwQnkpIHJldHVybiBbW1wiXCIsIFsuLi50aGlzLml0ZW1zXV1dO1xuICAgICAgY29uc3QgZ3JvdXBzID0gLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKTtcbiAgICAgIHRoaXMuaXRlbXMuZm9yRWFjaCgoaXRlbSwgaW5kZXgpID0+IHtcbiAgICAgICAgY29uc3QgZ3JvdXBLZXkgPSBncm91cEJ5KGl0ZW0sIGluZGV4KTtcbiAgICAgICAgaWYgKCFncm91cHMuaGFzKGdyb3VwS2V5KSkge1xuICAgICAgICAgIGdyb3Vwcy5zZXQoZ3JvdXBLZXksIFtdKTtcbiAgICAgICAgfVxuICAgICAgICBncm91cHMuZ2V0KGdyb3VwS2V5KS5wdXNoKGl0ZW0pO1xuICAgICAgfSk7XG4gICAgICBsZXQgZW50cmllcyA9IEFycmF5LmZyb20oZ3JvdXBzLmVudHJpZXMoKSk7XG4gICAgICBpZiAoZ3JvdXBTb3J0KSB7XG4gICAgICAgIGVudHJpZXMuc29ydCgoW2FdLCBbYl0pID0+IHtcbiAgICAgICAgICBpZiAodHlwZW9mIGdyb3VwU29ydCA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gZ3JvdXBTb3J0KGEsIGIpO1xuICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KGdyb3VwU29ydCkpIHtcbiAgICAgICAgICAgIGNvbnN0IGluZGV4QSA9IGdyb3VwU29ydC5pbmRleE9mKGEpO1xuICAgICAgICAgICAgY29uc3QgaW5kZXhCID0gZ3JvdXBTb3J0LmluZGV4T2YoYik7XG4gICAgICAgICAgICBpZiAoaW5kZXhBID09PSAtMSkgcmV0dXJuIDE7XG4gICAgICAgICAgICBpZiAoaW5kZXhCID09PSAtMSkgcmV0dXJuIC0xO1xuICAgICAgICAgICAgcmV0dXJuIGluZGV4QSAtIGluZGV4QjtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKGdyb3VwU29ydCA9PT0gXCJhc2NcIikgcmV0dXJuIGEubG9jYWxlQ29tcGFyZShiKTtcbiAgICAgICAgICBpZiAoZ3JvdXBTb3J0ID09PSBcImRlc2NcIikgcmV0dXJuIGIubG9jYWxlQ29tcGFyZShhKTtcbiAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gZW50cmllcztcbiAgICB9KTtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBuZXh0IHZhbHVlIGluIHRoZSBjb2xsZWN0aW9uXG4gICAgICovXG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImdldE5leHRWYWx1ZVwiLCAodmFsdWUsIHN0ZXAgPSAxLCBjbGFtcCA9IGZhbHNlKSA9PiB7XG4gICAgICBsZXQgaW5kZXggPSB0aGlzLmluZGV4T2YodmFsdWUpO1xuICAgICAgaWYgKGluZGV4ID09PSAtMSkgcmV0dXJuIG51bGw7XG4gICAgICBpbmRleCA9IGNsYW1wID8gTWF0aC5taW4oaW5kZXggKyBzdGVwLCB0aGlzLnNpemUgLSAxKSA6IGluZGV4ICsgc3RlcDtcbiAgICAgIHdoaWxlIChpbmRleCA8PSB0aGlzLnNpemUgJiYgdGhpcy5nZXRJdGVtRGlzYWJsZWQodGhpcy5hdChpbmRleCkpKSBpbmRleCsrO1xuICAgICAgcmV0dXJuIHRoaXMuZ2V0SXRlbVZhbHVlKHRoaXMuYXQoaW5kZXgpKTtcbiAgICB9KTtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBwcmV2aW91cyB2YWx1ZSBpbiB0aGUgY29sbGVjdGlvblxuICAgICAqL1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJnZXRQcmV2aW91c1ZhbHVlXCIsICh2YWx1ZSwgc3RlcCA9IDEsIGNsYW1wID0gZmFsc2UpID0+IHtcbiAgICAgIGxldCBpbmRleCA9IHRoaXMuaW5kZXhPZih2YWx1ZSk7XG4gICAgICBpZiAoaW5kZXggPT09IC0xKSByZXR1cm4gbnVsbDtcbiAgICAgIGluZGV4ID0gY2xhbXAgPyBNYXRoLm1heChpbmRleCAtIHN0ZXAsIDApIDogaW5kZXggLSBzdGVwO1xuICAgICAgd2hpbGUgKGluZGV4ID49IDAgJiYgdGhpcy5nZXRJdGVtRGlzYWJsZWQodGhpcy5hdChpbmRleCkpKSBpbmRleC0tO1xuICAgICAgcmV0dXJuIHRoaXMuZ2V0SXRlbVZhbHVlKHRoaXMuYXQoaW5kZXgpKTtcbiAgICB9KTtcbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIGluZGV4IG9mIGFuIGl0ZW0gYmFzZWQgb24gaXRzIGtleVxuICAgICAqL1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJpbmRleE9mXCIsICh2YWx1ZSkgPT4ge1xuICAgICAgaWYgKHZhbHVlID09IG51bGwpIHJldHVybiAtMTtcbiAgICAgIGlmICghdGhpcy5vcHRpb25zLmdyb3VwQnkgJiYgIXRoaXMub3B0aW9ucy5ncm91cFNvcnQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaXRlbXMuZmluZEluZGV4KChpdGVtKSA9PiB0aGlzLmdldEl0ZW1WYWx1ZShpdGVtKSA9PT0gdmFsdWUpO1xuICAgICAgfVxuICAgICAgbGV0IGlkeCA9IDA7XG4gICAgICBjb25zdCBncm91cHMgPSB0aGlzLmdyb3VwKCk7XG4gICAgICBmb3IgKGNvbnN0IFssIGl0ZW1zXSBvZiBncm91cHMpIHtcbiAgICAgICAgZm9yIChjb25zdCBpdGVtIG9mIGl0ZW1zKSB7XG4gICAgICAgICAgaWYgKHRoaXMuZ2V0SXRlbVZhbHVlKGl0ZW0pID09PSB2YWx1ZSkgcmV0dXJuIGlkeDtcbiAgICAgICAgICBpZHgrKztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIC0xO1xuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJnZXRCeVRleHRcIiwgKHRleHQsIGN1cnJlbnQpID0+IHtcbiAgICAgIGxldCBpdGVtcyA9IGN1cnJlbnQgIT0gbnVsbCA/IHdyYXAodGhpcy5pdGVtcywgdGhpcy5pbmRleE9mKGN1cnJlbnQpKSA6IHRoaXMuaXRlbXM7XG4gICAgICBjb25zdCBpc1NpbmdsZUtleSA9IHRleHQubGVuZ3RoID09PSAxO1xuICAgICAgaWYgKGlzU2luZ2xlS2V5KSBpdGVtcyA9IGl0ZW1zLmZpbHRlcigoaXRlbSkgPT4gdGhpcy5nZXRJdGVtVmFsdWUoaXRlbSkgIT09IGN1cnJlbnQpO1xuICAgICAgcmV0dXJuIGl0ZW1zLmZpbmQoKGl0ZW0pID0+IG1hdGNoKHRoaXMuc3RyaW5naWZ5SXRlbShpdGVtKSwgdGV4dCkpO1xuICAgIH0pO1xuICAgIC8qKlxuICAgICAqIFNlYXJjaCBmb3IgYSB2YWx1ZSBiYXNlZCBvbiBhIHF1ZXJ5XG4gICAgICovXG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInNlYXJjaFwiLCAocXVlcnlTdHJpbmcsIG9wdGlvbnMpID0+IHtcbiAgICAgIGNvbnN0IHsgc3RhdGUsIGN1cnJlbnRWYWx1ZSwgdGltZW91dCA9IDM1MCB9ID0gb3B0aW9ucztcbiAgICAgIGNvbnN0IHNlYXJjaCA9IHN0YXRlLmtleXNTb0ZhciArIHF1ZXJ5U3RyaW5nO1xuICAgICAgY29uc3QgaXNSZXBlYXRlZCA9IHNlYXJjaC5sZW5ndGggPiAxICYmIEFycmF5LmZyb20oc2VhcmNoKS5ldmVyeSgoY2hhcikgPT4gY2hhciA9PT0gc2VhcmNoWzBdKTtcbiAgICAgIGNvbnN0IHF1ZXJ5ID0gaXNSZXBlYXRlZCA/IHNlYXJjaFswXSA6IHNlYXJjaDtcbiAgICAgIGNvbnN0IGl0ZW0gPSB0aGlzLmdldEJ5VGV4dChxdWVyeSwgY3VycmVudFZhbHVlKTtcbiAgICAgIGNvbnN0IHZhbHVlID0gdGhpcy5nZXRJdGVtVmFsdWUoaXRlbSk7XG4gICAgICBmdW5jdGlvbiBjbGVhbnVwKCkge1xuICAgICAgICBjbGVhclRpbWVvdXQoc3RhdGUudGltZXIpO1xuICAgICAgICBzdGF0ZS50aW1lciA9IC0xO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gdXBkYXRlKHZhbHVlMikge1xuICAgICAgICBzdGF0ZS5rZXlzU29GYXIgPSB2YWx1ZTI7XG4gICAgICAgIGNsZWFudXAoKTtcbiAgICAgICAgaWYgKHZhbHVlMiAhPT0gXCJcIikge1xuICAgICAgICAgIHN0YXRlLnRpbWVyID0gK3NldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgdXBkYXRlKFwiXCIpO1xuICAgICAgICAgICAgY2xlYW51cCgpO1xuICAgICAgICAgIH0sIHRpbWVvdXQpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICB1cGRhdGUoc2VhcmNoKTtcbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9KTtcbiAgICAvKipcbiAgICAgKiBVcGRhdGUgYW4gaXRlbSBpbiB0aGUgY29sbGVjdGlvblxuICAgICAqL1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJ1cGRhdGVcIiwgKHZhbHVlLCBpdGVtKSA9PiB7XG4gICAgICBsZXQgaW5kZXggPSB0aGlzLml0ZW1zLmZpbmRJbmRleCgoaXRlbTIpID0+IHRoaXMuZ2V0SXRlbVZhbHVlKGl0ZW0yKSA9PT0gdmFsdWUpO1xuICAgICAgaWYgKGluZGV4ID09PSAtMSkgcmV0dXJuIHRoaXM7XG4gICAgICByZXR1cm4gdGhpcy5jb3B5KFsuLi50aGlzLml0ZW1zLnNsaWNlKDAsIGluZGV4KSwgaXRlbSwgLi4udGhpcy5pdGVtcy5zbGljZShpbmRleCArIDEpXSk7XG4gICAgfSk7XG4gICAgLyoqXG4gICAgICogSW5zZXJ0IGl0ZW1zIGF0IGEgc3BlY2lmaWMgaW5kZXhcbiAgICAgKi9cbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiaW5zZXJ0XCIsIChpbmRleCwgLi4uaXRlbXMpID0+IHtcbiAgICAgIHJldHVybiB0aGlzLmNvcHkoaW5zZXJ0KHRoaXMuaXRlbXMsIGluZGV4LCAuLi5pdGVtcykpO1xuICAgIH0pO1xuICAgIC8qKlxuICAgICAqIEluc2VydCBpdGVtcyBiZWZvcmUgYSBzcGVjaWZpYyB2YWx1ZVxuICAgICAqL1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJpbnNlcnRCZWZvcmVcIiwgKHZhbHVlLCAuLi5pdGVtcykgPT4ge1xuICAgICAgbGV0IHRvSW5kZXggPSB0aGlzLmluZGV4T2YodmFsdWUpO1xuICAgICAgaWYgKHRvSW5kZXggPT09IC0xKSB7XG4gICAgICAgIGlmICh0aGlzLml0ZW1zLmxlbmd0aCA9PT0gMCkgdG9JbmRleCA9IDA7XG4gICAgICAgIGVsc2UgcmV0dXJuIHRoaXM7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcy5jb3B5KGluc2VydCh0aGlzLml0ZW1zLCB0b0luZGV4LCAuLi5pdGVtcykpO1xuICAgIH0pO1xuICAgIC8qKlxuICAgICAqIEluc2VydCBpdGVtcyBhZnRlciBhIHNwZWNpZmljIHZhbHVlXG4gICAgICovXG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImluc2VydEFmdGVyXCIsICh2YWx1ZSwgLi4uaXRlbXMpID0+IHtcbiAgICAgIGxldCB0b0luZGV4ID0gdGhpcy5pbmRleE9mKHZhbHVlKTtcbiAgICAgIGlmICh0b0luZGV4ID09PSAtMSkge1xuICAgICAgICBpZiAodGhpcy5pdGVtcy5sZW5ndGggPT09IDApIHRvSW5kZXggPSAwO1xuICAgICAgICBlbHNlIHJldHVybiB0aGlzO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRoaXMuY29weShpbnNlcnQodGhpcy5pdGVtcywgdG9JbmRleCArIDEsIC4uLml0ZW1zKSk7XG4gICAgfSk7XG4gICAgLyoqXG4gICAgICogUHJlcGVuZCBpdGVtcyB0byB0aGUgY29sbGVjdGlvblxuICAgICAqL1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJwcmVwZW5kXCIsICguLi5pdGVtcykgPT4ge1xuICAgICAgcmV0dXJuIHRoaXMuY29weShpbnNlcnQodGhpcy5pdGVtcywgMCwgLi4uaXRlbXMpKTtcbiAgICB9KTtcbiAgICAvKipcbiAgICAgKiBBcHBlbmQgaXRlbXMgdG8gdGhlIGNvbGxlY3Rpb25cbiAgICAgKi9cbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiYXBwZW5kXCIsICguLi5pdGVtcykgPT4ge1xuICAgICAgcmV0dXJuIHRoaXMuY29weShpbnNlcnQodGhpcy5pdGVtcywgdGhpcy5pdGVtcy5sZW5ndGgsIC4uLml0ZW1zKSk7XG4gICAgfSk7XG4gICAgLyoqXG4gICAgICogRmlsdGVyIHRoZSBjb2xsZWN0aW9uXG4gICAgICovXG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImZpbHRlclwiLCAoZm4pID0+IHtcbiAgICAgIGNvbnN0IGZpbHRlcmVkSXRlbXMgPSB0aGlzLml0ZW1zLmZpbHRlcigoaXRlbSwgaW5kZXgpID0+IGZuKHRoaXMuc3RyaW5naWZ5SXRlbShpdGVtKSwgaW5kZXgpKTtcbiAgICAgIHJldHVybiB0aGlzLmNvcHkoZmlsdGVyZWRJdGVtcyk7XG4gICAgfSk7XG4gICAgLyoqXG4gICAgICogUmVtb3ZlIGl0ZW1zIGZyb20gdGhlIGNvbGxlY3Rpb25cbiAgICAgKi9cbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwicmVtb3ZlXCIsICguLi5pdGVtc09yVmFsdWVzKSA9PiB7XG4gICAgICBjb25zdCB2YWx1ZXMgPSBpdGVtc09yVmFsdWVzLm1hcChcbiAgICAgICAgKGl0ZW1PclZhbHVlKSA9PiB0eXBlb2YgaXRlbU9yVmFsdWUgPT09IFwic3RyaW5nXCIgPyBpdGVtT3JWYWx1ZSA6IHRoaXMuZ2V0SXRlbVZhbHVlKGl0ZW1PclZhbHVlKVxuICAgICAgKTtcbiAgICAgIHJldHVybiB0aGlzLmNvcHkoXG4gICAgICAgIHRoaXMuaXRlbXMuZmlsdGVyKChpdGVtKSA9PiB7XG4gICAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLmdldEl0ZW1WYWx1ZShpdGVtKTtcbiAgICAgICAgICBpZiAodmFsdWUgPT0gbnVsbCkgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgIHJldHVybiAhdmFsdWVzLmluY2x1ZGVzKHZhbHVlKTtcbiAgICAgICAgfSlcbiAgICAgICk7XG4gICAgfSk7XG4gICAgLyoqXG4gICAgICogTW92ZSBhbiBpdGVtIHRvIGEgc3BlY2lmaWMgaW5kZXhcbiAgICAgKi9cbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwibW92ZVwiLCAodmFsdWUsIHRvSW5kZXgpID0+IHtcbiAgICAgIGNvbnN0IGZyb21JbmRleCA9IHRoaXMuaW5kZXhPZih2YWx1ZSk7XG4gICAgICBpZiAoZnJvbUluZGV4ID09PSAtMSkgcmV0dXJuIHRoaXM7XG4gICAgICByZXR1cm4gdGhpcy5jb3B5KG1vdmUodGhpcy5pdGVtcywgW2Zyb21JbmRleF0sIHRvSW5kZXgpKTtcbiAgICB9KTtcbiAgICAvKipcbiAgICAgKiBNb3ZlIGl0ZW1zIGJlZm9yZSBhIHNwZWNpZmljIHZhbHVlXG4gICAgICovXG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcIm1vdmVCZWZvcmVcIiwgKHZhbHVlLCAuLi52YWx1ZXMpID0+IHtcbiAgICAgIGxldCB0b0luZGV4ID0gdGhpcy5pdGVtcy5maW5kSW5kZXgoKGl0ZW0pID0+IHRoaXMuZ2V0SXRlbVZhbHVlKGl0ZW0pID09PSB2YWx1ZSk7XG4gICAgICBpZiAodG9JbmRleCA9PT0gLTEpIHJldHVybiB0aGlzO1xuICAgICAgbGV0IGluZGljZXMgPSB2YWx1ZXMubWFwKCh2YWx1ZTIpID0+IHRoaXMuaXRlbXMuZmluZEluZGV4KChpdGVtKSA9PiB0aGlzLmdldEl0ZW1WYWx1ZShpdGVtKSA9PT0gdmFsdWUyKSkuc29ydCgoYSwgYikgPT4gYSAtIGIpO1xuICAgICAgcmV0dXJuIHRoaXMuY29weShtb3ZlKHRoaXMuaXRlbXMsIGluZGljZXMsIHRvSW5kZXgpKTtcbiAgICB9KTtcbiAgICAvKipcbiAgICAgKiBNb3ZlIGl0ZW1zIGFmdGVyIGEgc3BlY2lmaWMgdmFsdWVcbiAgICAgKi9cbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwibW92ZUFmdGVyXCIsICh2YWx1ZSwgLi4udmFsdWVzKSA9PiB7XG4gICAgICBsZXQgdG9JbmRleCA9IHRoaXMuaXRlbXMuZmluZEluZGV4KChpdGVtKSA9PiB0aGlzLmdldEl0ZW1WYWx1ZShpdGVtKSA9PT0gdmFsdWUpO1xuICAgICAgaWYgKHRvSW5kZXggPT09IC0xKSByZXR1cm4gdGhpcztcbiAgICAgIGxldCBpbmRpY2VzID0gdmFsdWVzLm1hcCgodmFsdWUyKSA9PiB0aGlzLml0ZW1zLmZpbmRJbmRleCgoaXRlbSkgPT4gdGhpcy5nZXRJdGVtVmFsdWUoaXRlbSkgPT09IHZhbHVlMikpLnNvcnQoKGEsIGIpID0+IGEgLSBiKTtcbiAgICAgIHJldHVybiB0aGlzLmNvcHkobW92ZSh0aGlzLml0ZW1zLCBpbmRpY2VzLCB0b0luZGV4ICsgMSkpO1xuICAgIH0pO1xuICAgIC8qKlxuICAgICAqIFJlb3JkZXIgaXRlbXNcbiAgICAgKi9cbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwicmVvcmRlclwiLCAoZnJvbUluZGV4LCB0b0luZGV4KSA9PiB7XG4gICAgICByZXR1cm4gdGhpcy5jb3B5KG1vdmUodGhpcy5pdGVtcywgW2Zyb21JbmRleF0sIHRvSW5kZXgpKTtcbiAgICB9KTtcbiAgICAvKipcbiAgICAgKiBDb21wYXJlIHR3byB2YWx1ZXNcbiAgICAgKi9cbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiY29tcGFyZVZhbHVlXCIsIChhLCBiKSA9PiB7XG4gICAgICBjb25zdCBpbmRleEEgPSB0aGlzLmluZGV4T2YoYSk7XG4gICAgICBjb25zdCBpbmRleEIgPSB0aGlzLmluZGV4T2YoYik7XG4gICAgICBpZiAoaW5kZXhBIDwgaW5kZXhCKSByZXR1cm4gLTE7XG4gICAgICBpZiAoaW5kZXhBID4gaW5kZXhCKSByZXR1cm4gMTtcbiAgICAgIHJldHVybiAwO1xuICAgIH0pO1xuICAgIC8qKlxuICAgICAqIEdldCB0aGUgcmFuZ2Ugb2YgdmFsdWVzIGJldHdlZW4gdHdvIHZhbHVlc1xuICAgICAqL1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJyYW5nZVwiLCAoZnJvbSwgdG8pID0+IHtcbiAgICAgIGxldCBrZXlzID0gW107XG4gICAgICBsZXQga2V5ID0gZnJvbTtcbiAgICAgIHdoaWxlIChrZXkgIT0gbnVsbCkge1xuICAgICAgICBsZXQgaXRlbSA9IHRoaXMuZmluZChrZXkpO1xuICAgICAgICBpZiAoaXRlbSkga2V5cy5wdXNoKGtleSk7XG4gICAgICAgIGlmIChrZXkgPT09IHRvKSByZXR1cm4ga2V5cztcbiAgICAgICAga2V5ID0gdGhpcy5nZXROZXh0VmFsdWUoa2V5KTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBbXTtcbiAgICB9KTtcbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIHJhbmdlIG9mIHZhbHVlcyBiZXR3ZWVuIHR3byB2YWx1ZXNcbiAgICAgKi9cbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZ2V0VmFsdWVSYW5nZVwiLCAoZnJvbSwgdG8pID0+IHtcbiAgICAgIGlmIChmcm9tICYmIHRvKSB7XG4gICAgICAgIGlmICh0aGlzLmNvbXBhcmVWYWx1ZShmcm9tLCB0bykgPD0gMCkge1xuICAgICAgICAgIHJldHVybiB0aGlzLnJhbmdlKGZyb20sIHRvKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5yYW5nZSh0bywgZnJvbSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gW107XG4gICAgfSk7XG4gICAgLyoqXG4gICAgICogQ29udmVydCB0aGUgY29sbGVjdGlvbiB0byBhIHN0cmluZ1xuICAgICAqL1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJ0b1N0cmluZ1wiLCAoKSA9PiB7XG4gICAgICBsZXQgcmVzdWx0ID0gXCJcIjtcbiAgICAgIGZvciAoY29uc3QgaXRlbSBvZiB0aGlzLml0ZW1zKSB7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gdGhpcy5nZXRJdGVtVmFsdWUoaXRlbSk7XG4gICAgICAgIGNvbnN0IGxhYmVsID0gdGhpcy5zdHJpbmdpZnlJdGVtKGl0ZW0pO1xuICAgICAgICBjb25zdCBkaXNhYmxlZCA9IHRoaXMuZ2V0SXRlbURpc2FibGVkKGl0ZW0pO1xuICAgICAgICBjb25zdCBpdGVtU3RyaW5nID0gW3ZhbHVlLCBsYWJlbCwgZGlzYWJsZWRdLmZpbHRlcihCb29sZWFuKS5qb2luKFwiOlwiKTtcbiAgICAgICAgcmVzdWx0ICs9IGl0ZW1TdHJpbmcgKyBcIixcIjtcbiAgICAgIH1cbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfSk7XG4gICAgLyoqXG4gICAgICogQ29udmVydCB0aGUgY29sbGVjdGlvbiB0byBhIEpTT04gb2JqZWN0XG4gICAgICovXG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInRvSlNPTlwiLCAoKSA9PiB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzaXplOiB0aGlzLnNpemUsXG4gICAgICAgIGZpcnN0OiB0aGlzLmZpcnN0VmFsdWUsXG4gICAgICAgIGxhc3Q6IHRoaXMubGFzdFZhbHVlXG4gICAgICB9O1xuICAgIH0pO1xuICAgIHRoaXMuaXRlbXMgPSBbLi4ub3B0aW9ucy5pdGVtc107XG4gIH1cbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIG51bWJlciBvZiBpdGVtcyBpbiB0aGUgY29sbGVjdGlvblxuICAgKi9cbiAgZ2V0IHNpemUoKSB7XG4gICAgcmV0dXJuIHRoaXMuaXRlbXMubGVuZ3RoO1xuICB9XG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoZSBmaXJzdCB2YWx1ZSBpbiB0aGUgY29sbGVjdGlvblxuICAgKi9cbiAgZ2V0IGZpcnN0VmFsdWUoKSB7XG4gICAgbGV0IGluZGV4ID0gMDtcbiAgICB3aGlsZSAodGhpcy5nZXRJdGVtRGlzYWJsZWQodGhpcy5hdChpbmRleCkpKSBpbmRleCsrO1xuICAgIHJldHVybiB0aGlzLmdldEl0ZW1WYWx1ZSh0aGlzLmF0KGluZGV4KSk7XG4gIH1cbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIGxhc3QgdmFsdWUgaW4gdGhlIGNvbGxlY3Rpb25cbiAgICovXG4gIGdldCBsYXN0VmFsdWUoKSB7XG4gICAgbGV0IGluZGV4ID0gdGhpcy5zaXplIC0gMTtcbiAgICB3aGlsZSAodGhpcy5nZXRJdGVtRGlzYWJsZWQodGhpcy5hdChpbmRleCkpKSBpbmRleC0tO1xuICAgIHJldHVybiB0aGlzLmdldEl0ZW1WYWx1ZSh0aGlzLmF0KGluZGV4KSk7XG4gIH1cbiAgKltTeW1ib2wuaXRlcmF0b3JdKCkge1xuICAgIHlpZWxkKiB0aGlzLml0ZW1zO1xuICB9XG59O1xudmFyIG1hdGNoID0gKGxhYmVsLCBxdWVyeSkgPT4ge1xuICByZXR1cm4gISFsYWJlbD8udG9Mb3dlckNhc2UoKS5zdGFydHNXaXRoKHF1ZXJ5LnRvTG93ZXJDYXNlKCkpO1xufTtcbnZhciB3cmFwID0gKHYsIGlkeCkgPT4ge1xuICByZXR1cm4gdi5tYXAoKF8sIGluZGV4KSA9PiB2WyhNYXRoLm1heChpZHgsIDApICsgaW5kZXgpICUgdi5sZW5ndGhdKTtcbn07XG5mdW5jdGlvbiBpc0xpc3RDb2xsZWN0aW9uKHYpIHtcbiAgcmV0dXJuIHYgaW5zdGFuY2VvZiBMaXN0Q29sbGVjdGlvbjtcbn1cbmZ1bmN0aW9uIGluc2VydChpdGVtcywgaW5kZXgsIC4uLnZhbHVlcykge1xuICByZXR1cm4gWy4uLml0ZW1zLnNsaWNlKDAsIGluZGV4KSwgLi4udmFsdWVzLCAuLi5pdGVtcy5zbGljZShpbmRleCldO1xufVxuZnVuY3Rpb24gbW92ZShpdGVtcywgaW5kaWNlcywgdG9JbmRleCkge1xuICBpbmRpY2VzID0gWy4uLmluZGljZXNdLnNvcnQoKGEsIGIpID0+IGEgLSBiKTtcbiAgY29uc3QgaXRlbXNUb01vdmUgPSBpbmRpY2VzLm1hcCgoaSkgPT4gaXRlbXNbaV0pO1xuICBmb3IgKGxldCBpID0gaW5kaWNlcy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgIGl0ZW1zID0gWy4uLml0ZW1zLnNsaWNlKDAsIGluZGljZXNbaV0pLCAuLi5pdGVtcy5zbGljZShpbmRpY2VzW2ldICsgMSldO1xuICB9XG4gIHRvSW5kZXggPSBNYXRoLm1heCgwLCB0b0luZGV4IC0gaW5kaWNlcy5maWx0ZXIoKGkpID0+IGkgPCB0b0luZGV4KS5sZW5ndGgpO1xuICByZXR1cm4gWy4uLml0ZW1zLnNsaWNlKDAsIHRvSW5kZXgpLCAuLi5pdGVtc1RvTW92ZSwgLi4uaXRlbXMuc2xpY2UodG9JbmRleCldO1xufVxuXG4vLyBzcmMvZ3JpZC1jb2xsZWN0aW9uLnRzXG52YXIgR3JpZENvbGxlY3Rpb24gPSBjbGFzcyBleHRlbmRzIExpc3RDb2xsZWN0aW9uIHtcbiAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgIGNvbnN0IHsgY29sdW1uQ291bnQgfSA9IG9wdGlvbnM7XG4gICAgc3VwZXIob3B0aW9ucyk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImNvbHVtbkNvdW50XCIpO1xuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIHJvdyBkYXRhIGluIHRoZSBncmlkXG4gICAgICovXG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImdldFJvd3NcIiwgKCkgPT4ge1xuICAgICAgcmV0dXJuIGNodW5rKFsuLi50aGlzLml0ZW1zXSwgdGhpcy5jb2x1bW5Db3VudCk7XG4gICAgfSk7XG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgbnVtYmVyIG9mIHJvd3MgaW4gdGhlIGdyaWRcbiAgICAgKi9cbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZ2V0Um93Q291bnRcIiwgKCkgPT4ge1xuICAgICAgcmV0dXJuIHRoaXMuZ2V0Um93cygpLmxlbmd0aDtcbiAgICB9KTtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBpbmRleCBvZiB0aGUgc3BlY2lmaWVkIHJvdyBhbmQgY29sdW1uIGluIHRoZSBncmlkXG4gICAgICovXG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImdldENlbGxJbmRleFwiLCAocm93LCBjb2x1bW4pID0+IHtcbiAgICAgIHJldHVybiByb3cgKiB0aGlzLmNvbHVtbkNvdW50ICsgY29sdW1uO1xuICAgIH0pO1xuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIGl0ZW0gYXQgdGhlIHNwZWNpZmllZCByb3cgYW5kIGNvbHVtbiBpbiB0aGUgZ3JpZFxuICAgICAqL1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJnZXRDZWxsXCIsIChyb3csIGNvbHVtbikgPT4ge1xuICAgICAgcmV0dXJuIHRoaXMuYXQodGhpcy5nZXRDZWxsSW5kZXgocm93LCBjb2x1bW4pKTtcbiAgICB9KTtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSByb3cgYW5kIGNvbHVtbiBpbmRleCBmb3IgYSBnaXZlbiB2YWx1ZVxuICAgICAqL1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJnZXRWYWx1ZUNlbGxcIiwgKHZhbHVlKSA9PiB7XG4gICAgICBjb25zdCBpbmRleCA9IHRoaXMuaW5kZXhPZih2YWx1ZSk7XG4gICAgICBpZiAoaW5kZXggPT09IC0xKSByZXR1cm4gbnVsbDtcbiAgICAgIGNvbnN0IHJvdyA9IE1hdGguZmxvb3IoaW5kZXggLyB0aGlzLmNvbHVtbkNvdW50KTtcbiAgICAgIGNvbnN0IGNvbHVtbiA9IGluZGV4ICUgdGhpcy5jb2x1bW5Db3VudDtcbiAgICAgIHJldHVybiB7IHJvdywgY29sdW1uIH07XG4gICAgfSk7XG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgdmFsdWUgb2YgdGhlIGxhc3QgZW5hYmxlZCBjb2x1bW4gaW4gYSByb3dcbiAgICAgKi9cbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZ2V0TGFzdEVuYWJsZWRDb2x1bW5JbmRleFwiLCAocm93KSA9PiB7XG4gICAgICBmb3IgKGxldCBjb2wgPSB0aGlzLmNvbHVtbkNvdW50IC0gMTsgY29sID49IDA7IGNvbC0tKSB7XG4gICAgICAgIGNvbnN0IGNlbGwgPSB0aGlzLmdldENlbGwocm93LCBjb2wpO1xuICAgICAgICBpZiAoY2VsbCAmJiAhdGhpcy5nZXRJdGVtRGlzYWJsZWQoY2VsbCkpIHtcbiAgICAgICAgICByZXR1cm4gY29sO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9KTtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBpbmRleCBvZiB0aGUgZmlyc3QgZW5hYmxlZCBjb2x1bW4gaW4gYSByb3dcbiAgICAgKi9cbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZ2V0Rmlyc3RFbmFibGVkQ29sdW1uSW5kZXhcIiwgKHJvdykgPT4ge1xuICAgICAgZm9yIChsZXQgY29sID0gMDsgY29sIDwgdGhpcy5jb2x1bW5Db3VudDsgY29sKyspIHtcbiAgICAgICAgY29uc3QgY2VsbCA9IHRoaXMuZ2V0Q2VsbChyb3csIGNvbCk7XG4gICAgICAgIGlmIChjZWxsICYmICF0aGlzLmdldEl0ZW1EaXNhYmxlZChjZWxsKSkge1xuICAgICAgICAgIHJldHVybiBjb2w7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBudWxsO1xuICAgIH0pO1xuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIHZhbHVlIG9mIHRoZSBwcmV2aW91cyByb3cgaW4gdGhlIGdyaWQsIGJhc2VkIG9uIHRoZSBjdXJyZW50IHZhbHVlXG4gICAgICovXG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImdldFByZXZpb3VzUm93VmFsdWVcIiwgKHZhbHVlLCBsb29wID0gZmFsc2UpID0+IHtcbiAgICAgIGNvbnN0IGN1cnJlbnRDZWxsID0gdGhpcy5nZXRWYWx1ZUNlbGwodmFsdWUpO1xuICAgICAgaWYgKGN1cnJlbnRDZWxsID09PSBudWxsKSByZXR1cm4gbnVsbDtcbiAgICAgIGNvbnN0IHJvd3MgPSB0aGlzLmdldFJvd3MoKTtcbiAgICAgIGNvbnN0IHJvd0NvdW50ID0gdGhpcy5nZXRSb3dDb3VudCgpO1xuICAgICAgbGV0IHByZXZSb3dJbmRleCA9IGN1cnJlbnRDZWxsLnJvdztcbiAgICAgIGxldCBwcmV2Q29sdW1uSW5kZXggPSBjdXJyZW50Q2VsbC5jb2x1bW47XG4gICAgICBmb3IgKGxldCBpID0gMTsgaSA8PSByb3dDb3VudDsgaSsrKSB7XG4gICAgICAgIHByZXZSb3dJbmRleCA9IHByZXZJbmRleChyb3dzLCBwcmV2Um93SW5kZXgsIHsgbG9vcCB9KTtcbiAgICAgICAgY29uc3QgcHJldlJvdyA9IHJvd3NbcHJldlJvd0luZGV4XTtcbiAgICAgICAgaWYgKCFwcmV2Um93KSBjb250aW51ZTtcbiAgICAgICAgY29uc3QgcHJldkNlbGwgPSBwcmV2Um93W3ByZXZDb2x1bW5JbmRleF07XG4gICAgICAgIGlmICghcHJldkNlbGwpIHtcbiAgICAgICAgICBjb25zdCBsYXN0Q29sdW1uSW5kZXggPSB0aGlzLmdldExhc3RFbmFibGVkQ29sdW1uSW5kZXgocHJldlJvd0luZGV4KTtcbiAgICAgICAgICBpZiAobGFzdENvbHVtbkluZGV4ICE9IG51bGwpIHtcbiAgICAgICAgICAgIHByZXZDb2x1bW5JbmRleCA9IGxhc3RDb2x1bW5JbmRleDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgY2VsbCA9IHRoaXMuZ2V0Q2VsbChwcmV2Um93SW5kZXgsIHByZXZDb2x1bW5JbmRleCk7XG4gICAgICAgIGlmICghdGhpcy5nZXRJdGVtRGlzYWJsZWQoY2VsbCkpIHtcbiAgICAgICAgICByZXR1cm4gdGhpcy5nZXRJdGVtVmFsdWUoY2VsbCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiB0aGlzLmZpcnN0VmFsdWU7XG4gICAgfSk7XG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgdmFsdWUgb2YgdGhlIG5leHQgcm93IGluIHRoZSBncmlkLCBiYXNlZCBvbiB0aGUgY3VycmVudCB2YWx1ZVxuICAgICAqL1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJnZXROZXh0Um93VmFsdWVcIiwgKHZhbHVlLCBsb29wID0gZmFsc2UpID0+IHtcbiAgICAgIGNvbnN0IGN1cnJlbnRDZWxsID0gdGhpcy5nZXRWYWx1ZUNlbGwodmFsdWUpO1xuICAgICAgaWYgKGN1cnJlbnRDZWxsID09PSBudWxsKSByZXR1cm4gbnVsbDtcbiAgICAgIGNvbnN0IHJvd3MgPSB0aGlzLmdldFJvd3MoKTtcbiAgICAgIGNvbnN0IHJvd0NvdW50ID0gdGhpcy5nZXRSb3dDb3VudCgpO1xuICAgICAgbGV0IG5leHRSb3dJbmRleCA9IGN1cnJlbnRDZWxsLnJvdztcbiAgICAgIGxldCBuZXh0Q29sdW1uSW5kZXggPSBjdXJyZW50Q2VsbC5jb2x1bW47XG4gICAgICBmb3IgKGxldCBpID0gMTsgaSA8PSByb3dDb3VudDsgaSsrKSB7XG4gICAgICAgIG5leHRSb3dJbmRleCA9IG5leHRJbmRleChyb3dzLCBuZXh0Um93SW5kZXgsIHsgbG9vcCB9KTtcbiAgICAgICAgY29uc3QgbmV4dFJvdyA9IHJvd3NbbmV4dFJvd0luZGV4XTtcbiAgICAgICAgaWYgKCFuZXh0Um93KSBjb250aW51ZTtcbiAgICAgICAgY29uc3QgbmV4dENlbGwgPSBuZXh0Um93W25leHRDb2x1bW5JbmRleF07XG4gICAgICAgIGlmICghbmV4dENlbGwpIHtcbiAgICAgICAgICBjb25zdCBsYXN0Q29sdW1uSW5kZXggPSB0aGlzLmdldExhc3RFbmFibGVkQ29sdW1uSW5kZXgobmV4dFJvd0luZGV4KTtcbiAgICAgICAgICBpZiAobGFzdENvbHVtbkluZGV4ICE9IG51bGwpIHtcbiAgICAgICAgICAgIG5leHRDb2x1bW5JbmRleCA9IGxhc3RDb2x1bW5JbmRleDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgY2VsbCA9IHRoaXMuZ2V0Q2VsbChuZXh0Um93SW5kZXgsIG5leHRDb2x1bW5JbmRleCk7XG4gICAgICAgIGlmICghdGhpcy5nZXRJdGVtRGlzYWJsZWQoY2VsbCkpIHtcbiAgICAgICAgICByZXR1cm4gdGhpcy5nZXRJdGVtVmFsdWUoY2VsbCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiB0aGlzLmxhc3RWYWx1ZTtcbiAgICB9KTtcbiAgICB0aGlzLmNvbHVtbkNvdW50ID0gY29sdW1uQ291bnQ7XG4gIH1cbn07XG5mdW5jdGlvbiBpc0dyaWRDb2xsZWN0aW9uKHYpIHtcbiAgcmV0dXJuIHYgaW5zdGFuY2VvZiBHcmlkQ29sbGVjdGlvbjtcbn1cblxuLy8gc3JjL3RyZWUtdmlzaXQudHNcbmZ1bmN0aW9uIGFjY2Vzcyhub2RlLCBpbmRleFBhdGgsIG9wdGlvbnMpIHtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBpbmRleFBhdGgubGVuZ3RoOyBpKyspIG5vZGUgPSBvcHRpb25zLmdldENoaWxkcmVuKG5vZGUsIGluZGV4UGF0aC5zbGljZShpICsgMSkpW2luZGV4UGF0aFtpXV07XG4gIHJldHVybiBub2RlO1xufVxuZnVuY3Rpb24gYW5jZXN0b3JJbmRleFBhdGhzKGluZGV4UGF0aHMpIHtcbiAgY29uc3Qgc29ydGVkUGF0aHMgPSBzb3J0SW5kZXhQYXRocyhpbmRleFBhdGhzKTtcbiAgY29uc3QgcmVzdWx0ID0gW107XG4gIGNvbnN0IHNlZW4gPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpO1xuICBmb3IgKGNvbnN0IGluZGV4UGF0aCBvZiBzb3J0ZWRQYXRocykge1xuICAgIGNvbnN0IGtleSA9IGluZGV4UGF0aC5qb2luKCk7XG4gICAgaWYgKCFzZWVuLmhhcyhrZXkpKSB7XG4gICAgICBzZWVuLmFkZChrZXkpO1xuICAgICAgcmVzdWx0LnB1c2goaW5kZXhQYXRoKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIGNvbXBhcmVJbmRleFBhdGhzKGEsIGIpIHtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBNYXRoLm1pbihhLmxlbmd0aCwgYi5sZW5ndGgpOyBpKyspIHtcbiAgICBpZiAoYVtpXSA8IGJbaV0pIHJldHVybiAtMTtcbiAgICBpZiAoYVtpXSA+IGJbaV0pIHJldHVybiAxO1xuICB9XG4gIHJldHVybiBhLmxlbmd0aCAtIGIubGVuZ3RoO1xufVxuZnVuY3Rpb24gc29ydEluZGV4UGF0aHMoaW5kZXhQYXRocykge1xuICByZXR1cm4gaW5kZXhQYXRocy5zb3J0KGNvbXBhcmVJbmRleFBhdGhzKTtcbn1cbmZ1bmN0aW9uIGZpbmQobm9kZSwgb3B0aW9ucykge1xuICBsZXQgZm91bmQ7XG4gIHZpc2l0KG5vZGUsIHtcbiAgICAuLi5vcHRpb25zLFxuICAgIG9uRW50ZXI6IChjaGlsZCwgaW5kZXhQYXRoKSA9PiB7XG4gICAgICBpZiAob3B0aW9ucy5wcmVkaWNhdGUoY2hpbGQsIGluZGV4UGF0aCkpIHtcbiAgICAgICAgZm91bmQgPSBjaGlsZDtcbiAgICAgICAgcmV0dXJuIFwic3RvcFwiO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG4gIHJldHVybiBmb3VuZDtcbn1cbmZ1bmN0aW9uIGZpbmRJbmRleFBhdGgobm9kZSwgb3B0aW9ucykge1xuICBsZXQgZm91bmQ7XG4gIHZpc2l0KG5vZGUsIHtcbiAgICBvbkVudGVyOiAoY2hpbGQsIGluZGV4UGF0aCkgPT4ge1xuICAgICAgaWYgKG9wdGlvbnMucHJlZGljYXRlKGNoaWxkLCBpbmRleFBhdGgpKSB7XG4gICAgICAgIGZvdW5kID0gWy4uLmluZGV4UGF0aF07XG4gICAgICAgIHJldHVybiBcInN0b3BcIjtcbiAgICAgIH1cbiAgICB9LFxuICAgIGdldENoaWxkcmVuOiBvcHRpb25zLmdldENoaWxkcmVuXG4gIH0pO1xuICByZXR1cm4gZm91bmQ7XG59XG5mdW5jdGlvbiByZWR1Y2Uobm9kZSwgb3B0aW9ucykge1xuICBsZXQgcmVzdWx0ID0gb3B0aW9ucy5pbml0aWFsUmVzdWx0O1xuICB2aXNpdChub2RlLCB7XG4gICAgLi4ub3B0aW9ucyxcbiAgICBvbkVudGVyOiAoY2hpbGQsIGluZGV4UGF0aCkgPT4ge1xuICAgICAgcmVzdWx0ID0gb3B0aW9ucy5uZXh0UmVzdWx0KHJlc3VsdCwgY2hpbGQsIGluZGV4UGF0aCk7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIGZsYXRNYXAobm9kZSwgb3B0aW9ucykge1xuICByZXR1cm4gcmVkdWNlKG5vZGUsIHtcbiAgICAuLi5vcHRpb25zLFxuICAgIGluaXRpYWxSZXN1bHQ6IFtdLFxuICAgIG5leHRSZXN1bHQ6IChyZXN1bHQsIGNoaWxkLCBpbmRleFBhdGgpID0+IHtcbiAgICAgIHJlc3VsdC5wdXNoKC4uLm9wdGlvbnMudHJhbnNmb3JtKGNoaWxkLCBpbmRleFBhdGgpKTtcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICB9KTtcbn1cbmZ1bmN0aW9uIGluc2VydE9wZXJhdGlvbihpbmRleCwgbm9kZXMpIHtcbiAgcmV0dXJuIHsgdHlwZTogXCJpbnNlcnRcIiwgaW5kZXgsIG5vZGVzIH07XG59XG5mdW5jdGlvbiByZW1vdmVPcGVyYXRpb24oaW5kZXhlcykge1xuICByZXR1cm4geyB0eXBlOiBcInJlbW92ZVwiLCBpbmRleGVzIH07XG59XG5mdW5jdGlvbiByZXBsYWNlT3BlcmF0aW9uKCkge1xuICByZXR1cm4geyB0eXBlOiBcInJlcGxhY2VcIiB9O1xufVxuZnVuY3Rpb24gc3BsaXRJbmRleFBhdGgoaW5kZXhQYXRoKSB7XG4gIHJldHVybiBbaW5kZXhQYXRoLnNsaWNlKDAsIC0xKSwgaW5kZXhQYXRoW2luZGV4UGF0aC5sZW5ndGggLSAxXV07XG59XG5mdW5jdGlvbiBnZXRJbnNlcnRpb25PcGVyYXRpb25zKGluZGV4UGF0aCwgbm9kZXMsIG9wZXJhdGlvbnMgPSAvKiBAX19QVVJFX18gKi8gbmV3IE1hcCgpKSB7XG4gIGNvbnN0IFtwYXJlbnRJbmRleFBhdGgsIGluZGV4XSA9IHNwbGl0SW5kZXhQYXRoKGluZGV4UGF0aCk7XG4gIGZvciAobGV0IGkgPSBwYXJlbnRJbmRleFBhdGgubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICBjb25zdCBwYXJlbnRLZXkgPSBwYXJlbnRJbmRleFBhdGguc2xpY2UoMCwgaSkuam9pbigpO1xuICAgIHN3aXRjaCAob3BlcmF0aW9ucy5nZXQocGFyZW50S2V5KT8udHlwZSkge1xuICAgICAgY2FzZSBcInJlbW92ZVwiOlxuICAgICAgICBjb250aW51ZTtcbiAgICB9XG4gICAgb3BlcmF0aW9ucy5zZXQocGFyZW50S2V5LCByZXBsYWNlT3BlcmF0aW9uKCkpO1xuICB9XG4gIGNvbnN0IG9wZXJhdGlvbiA9IG9wZXJhdGlvbnMuZ2V0KHBhcmVudEluZGV4UGF0aC5qb2luKCkpO1xuICBzd2l0Y2ggKG9wZXJhdGlvbj8udHlwZSkge1xuICAgIGNhc2UgXCJyZW1vdmVcIjpcbiAgICAgIG9wZXJhdGlvbnMuc2V0KHBhcmVudEluZGV4UGF0aC5qb2luKCksIHtcbiAgICAgICAgdHlwZTogXCJyZW1vdmVUaGVuSW5zZXJ0XCIsXG4gICAgICAgIHJlbW92ZUluZGV4ZXM6IG9wZXJhdGlvbi5pbmRleGVzLFxuICAgICAgICBpbnNlcnRJbmRleDogaW5kZXgsXG4gICAgICAgIGluc2VydE5vZGVzOiBub2Rlc1xuICAgICAgfSk7XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgb3BlcmF0aW9ucy5zZXQocGFyZW50SW5kZXhQYXRoLmpvaW4oKSwgaW5zZXJ0T3BlcmF0aW9uKGluZGV4LCBub2RlcykpO1xuICB9XG4gIHJldHVybiBvcGVyYXRpb25zO1xufVxuZnVuY3Rpb24gZ2V0UmVtb3ZhbE9wZXJhdGlvbnMoaW5kZXhQYXRocykge1xuICBjb25zdCBvcGVyYXRpb25zID0gLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKTtcbiAgY29uc3QgaW5kZXhlc1RvUmVtb3ZlID0gLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKTtcbiAgZm9yIChjb25zdCBpbmRleFBhdGggb2YgaW5kZXhQYXRocykge1xuICAgIGNvbnN0IHBhcmVudEtleSA9IGluZGV4UGF0aC5zbGljZSgwLCAtMSkuam9pbigpO1xuICAgIGNvbnN0IHZhbHVlID0gaW5kZXhlc1RvUmVtb3ZlLmdldChwYXJlbnRLZXkpID8/IFtdO1xuICAgIHZhbHVlLnB1c2goaW5kZXhQYXRoW2luZGV4UGF0aC5sZW5ndGggLSAxXSk7XG4gICAgaW5kZXhlc1RvUmVtb3ZlLnNldChcbiAgICAgIHBhcmVudEtleSxcbiAgICAgIHZhbHVlLnNvcnQoKGEsIGIpID0+IGEgLSBiKVxuICAgICk7XG4gIH1cbiAgZm9yIChjb25zdCBpbmRleFBhdGggb2YgaW5kZXhQYXRocykge1xuICAgIGZvciAobGV0IGkgPSBpbmRleFBhdGgubGVuZ3RoIC0gMjsgaSA+PSAwOyBpLS0pIHtcbiAgICAgIGNvbnN0IHBhcmVudEtleSA9IGluZGV4UGF0aC5zbGljZSgwLCBpKS5qb2luKCk7XG4gICAgICBpZiAoIW9wZXJhdGlvbnMuaGFzKHBhcmVudEtleSkpIHtcbiAgICAgICAgb3BlcmF0aW9ucy5zZXQocGFyZW50S2V5LCByZXBsYWNlT3BlcmF0aW9uKCkpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBmb3IgKGNvbnN0IFtwYXJlbnRLZXksIGluZGV4ZXNdIG9mIGluZGV4ZXNUb1JlbW92ZSkge1xuICAgIG9wZXJhdGlvbnMuc2V0KHBhcmVudEtleSwgcmVtb3ZlT3BlcmF0aW9uKGluZGV4ZXMpKTtcbiAgfVxuICByZXR1cm4gb3BlcmF0aW9ucztcbn1cbmZ1bmN0aW9uIGdldFJlcGxhY2VPcGVyYXRpb25zKGluZGV4UGF0aCwgbm9kZSkge1xuICBjb25zdCBvcGVyYXRpb25zID0gLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKTtcbiAgY29uc3QgW3BhcmVudEluZGV4UGF0aCwgaW5kZXhdID0gc3BsaXRJbmRleFBhdGgoaW5kZXhQYXRoKTtcbiAgZm9yIChsZXQgaSA9IHBhcmVudEluZGV4UGF0aC5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgIGNvbnN0IHBhcmVudEtleSA9IHBhcmVudEluZGV4UGF0aC5zbGljZSgwLCBpKS5qb2luKCk7XG4gICAgb3BlcmF0aW9ucy5zZXQocGFyZW50S2V5LCByZXBsYWNlT3BlcmF0aW9uKCkpO1xuICB9XG4gIG9wZXJhdGlvbnMuc2V0KHBhcmVudEluZGV4UGF0aC5qb2luKCksIHtcbiAgICB0eXBlOiBcInJlbW92ZVRoZW5JbnNlcnRcIixcbiAgICByZW1vdmVJbmRleGVzOiBbaW5kZXhdLFxuICAgIGluc2VydEluZGV4OiBpbmRleCxcbiAgICBpbnNlcnROb2RlczogW25vZGVdXG4gIH0pO1xuICByZXR1cm4gb3BlcmF0aW9ucztcbn1cbmZ1bmN0aW9uIG11dGF0ZShub2RlLCBvcGVyYXRpb25zLCBvcHRpb25zKSB7XG4gIHJldHVybiBtYXAobm9kZSwge1xuICAgIC4uLm9wdGlvbnMsXG4gICAgZ2V0Q2hpbGRyZW46IChub2RlMiwgaW5kZXhQYXRoKSA9PiB7XG4gICAgICBjb25zdCBrZXkgPSBpbmRleFBhdGguam9pbigpO1xuICAgICAgY29uc3Qgb3BlcmF0aW9uID0gb3BlcmF0aW9ucy5nZXQoa2V5KTtcbiAgICAgIHN3aXRjaCAob3BlcmF0aW9uPy50eXBlKSB7XG4gICAgICAgIGNhc2UgXCJyZXBsYWNlXCI6XG4gICAgICAgIGNhc2UgXCJyZW1vdmVcIjpcbiAgICAgICAgY2FzZSBcInJlbW92ZVRoZW5JbnNlcnRcIjpcbiAgICAgICAgY2FzZSBcImluc2VydFwiOlxuICAgICAgICAgIHJldHVybiBvcHRpb25zLmdldENoaWxkcmVuKG5vZGUyLCBpbmRleFBhdGgpO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIHJldHVybiBbXTtcbiAgICAgIH1cbiAgICB9LFxuICAgIHRyYW5zZm9ybTogKG5vZGUyLCBjaGlsZHJlbiwgaW5kZXhQYXRoKSA9PiB7XG4gICAgICBjb25zdCBrZXkgPSBpbmRleFBhdGguam9pbigpO1xuICAgICAgY29uc3Qgb3BlcmF0aW9uID0gb3BlcmF0aW9ucy5nZXQoa2V5KTtcbiAgICAgIHN3aXRjaCAob3BlcmF0aW9uPy50eXBlKSB7XG4gICAgICAgIGNhc2UgXCJyZW1vdmVcIjpcbiAgICAgICAgICByZXR1cm4gb3B0aW9ucy5jcmVhdGUoXG4gICAgICAgICAgICBub2RlMixcbiAgICAgICAgICAgIGNoaWxkcmVuLmZpbHRlcigoXywgaW5kZXgpID0+ICFvcGVyYXRpb24uaW5kZXhlcy5pbmNsdWRlcyhpbmRleCkpLFxuICAgICAgICAgICAgaW5kZXhQYXRoXG4gICAgICAgICAgKTtcbiAgICAgICAgY2FzZSBcInJlbW92ZVRoZW5JbnNlcnRcIjpcbiAgICAgICAgICBjb25zdCB1cGRhdGVkQ2hpbGRyZW4gPSBjaGlsZHJlbi5maWx0ZXIoKF8sIGluZGV4KSA9PiAhb3BlcmF0aW9uLnJlbW92ZUluZGV4ZXMuaW5jbHVkZXMoaW5kZXgpKTtcbiAgICAgICAgICBjb25zdCBhZGp1c3RlZEluZGV4ID0gb3BlcmF0aW9uLnJlbW92ZUluZGV4ZXMucmVkdWNlKFxuICAgICAgICAgICAgKGluZGV4LCByZW1vdmVkSW5kZXgpID0+IHJlbW92ZWRJbmRleCA8IGluZGV4ID8gaW5kZXggLSAxIDogaW5kZXgsXG4gICAgICAgICAgICBvcGVyYXRpb24uaW5zZXJ0SW5kZXhcbiAgICAgICAgICApO1xuICAgICAgICAgIHJldHVybiBvcHRpb25zLmNyZWF0ZShub2RlMiwgc3BsaWNlKHVwZGF0ZWRDaGlsZHJlbiwgYWRqdXN0ZWRJbmRleCwgMCwgLi4ub3BlcmF0aW9uLmluc2VydE5vZGVzKSwgaW5kZXhQYXRoKTtcbiAgICAgICAgY2FzZSBcImluc2VydFwiOlxuICAgICAgICAgIHJldHVybiBvcHRpb25zLmNyZWF0ZShub2RlMiwgc3BsaWNlKGNoaWxkcmVuLCBvcGVyYXRpb24uaW5kZXgsIDAsIC4uLm9wZXJhdGlvbi5ub2RlcyksIGluZGV4UGF0aCk7XG4gICAgICAgIGNhc2UgXCJyZXBsYWNlXCI6XG4gICAgICAgICAgcmV0dXJuIG9wdGlvbnMuY3JlYXRlKG5vZGUyLCBjaGlsZHJlbiwgaW5kZXhQYXRoKTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICByZXR1cm4gbm9kZTI7XG4gICAgICB9XG4gICAgfVxuICB9KTtcbn1cbmZ1bmN0aW9uIHNwbGljZShhcnJheSwgc3RhcnQsIGRlbGV0ZUNvdW50LCAuLi5pdGVtcykge1xuICByZXR1cm4gWy4uLmFycmF5LnNsaWNlKDAsIHN0YXJ0KSwgLi4uaXRlbXMsIC4uLmFycmF5LnNsaWNlKHN0YXJ0ICsgZGVsZXRlQ291bnQpXTtcbn1cbmZ1bmN0aW9uIG1hcChub2RlLCBvcHRpb25zKSB7XG4gIGNvbnN0IGNoaWxkcmVuTWFwID0ge307XG4gIHZpc2l0KG5vZGUsIHtcbiAgICAuLi5vcHRpb25zLFxuICAgIG9uTGVhdmU6IChjaGlsZCwgaW5kZXhQYXRoKSA9PiB7XG4gICAgICBjb25zdCBrZXlJbmRleFBhdGggPSBbMCwgLi4uaW5kZXhQYXRoXTtcbiAgICAgIGNvbnN0IGtleSA9IGtleUluZGV4UGF0aC5qb2luKCk7XG4gICAgICBjb25zdCB0cmFuc2Zvcm1lZCA9IG9wdGlvbnMudHJhbnNmb3JtKGNoaWxkLCBjaGlsZHJlbk1hcFtrZXldID8/IFtdLCBpbmRleFBhdGgpO1xuICAgICAgY29uc3QgcGFyZW50S2V5ID0ga2V5SW5kZXhQYXRoLnNsaWNlKDAsIC0xKS5qb2luKCk7XG4gICAgICBjb25zdCBwYXJlbnRDaGlsZHJlbiA9IGNoaWxkcmVuTWFwW3BhcmVudEtleV0gPz8gW107XG4gICAgICBwYXJlbnRDaGlsZHJlbi5wdXNoKHRyYW5zZm9ybWVkKTtcbiAgICAgIGNoaWxkcmVuTWFwW3BhcmVudEtleV0gPSBwYXJlbnRDaGlsZHJlbjtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gY2hpbGRyZW5NYXBbXCJcIl1bMF07XG59XG5mdW5jdGlvbiBpbnNlcnQyKG5vZGUsIG9wdGlvbnMpIHtcbiAgY29uc3QgeyBub2RlcywgYXQgfSA9IG9wdGlvbnM7XG4gIGlmIChhdC5sZW5ndGggPT09IDApIHRocm93IG5ldyBFcnJvcihgQ2FuJ3QgaW5zZXJ0IG5vZGVzIGF0IHRoZSByb290YCk7XG4gIGNvbnN0IHN0YXRlID0gZ2V0SW5zZXJ0aW9uT3BlcmF0aW9ucyhhdCwgbm9kZXMpO1xuICByZXR1cm4gbXV0YXRlKG5vZGUsIHN0YXRlLCBvcHRpb25zKTtcbn1cbmZ1bmN0aW9uIHJlcGxhY2Uobm9kZSwgb3B0aW9ucykge1xuICBpZiAob3B0aW9ucy5hdC5sZW5ndGggPT09IDApIHJldHVybiBvcHRpb25zLm5vZGU7XG4gIGNvbnN0IG9wZXJhdGlvbnMgPSBnZXRSZXBsYWNlT3BlcmF0aW9ucyhvcHRpb25zLmF0LCBvcHRpb25zLm5vZGUpO1xuICByZXR1cm4gbXV0YXRlKG5vZGUsIG9wZXJhdGlvbnMsIG9wdGlvbnMpO1xufVxuZnVuY3Rpb24gcmVtb3ZlKG5vZGUsIG9wdGlvbnMpIHtcbiAgaWYgKG9wdGlvbnMuaW5kZXhQYXRocy5sZW5ndGggPT09IDApIHJldHVybiBub2RlO1xuICBmb3IgKGNvbnN0IGluZGV4UGF0aCBvZiBvcHRpb25zLmluZGV4UGF0aHMpIHtcbiAgICBpZiAoaW5kZXhQYXRoLmxlbmd0aCA9PT0gMCkgdGhyb3cgbmV3IEVycm9yKGBDYW4ndCByZW1vdmUgdGhlIHJvb3Qgbm9kZWApO1xuICB9XG4gIGNvbnN0IG9wZXJhdGlvbnMgPSBnZXRSZW1vdmFsT3BlcmF0aW9ucyhvcHRpb25zLmluZGV4UGF0aHMpO1xuICByZXR1cm4gbXV0YXRlKG5vZGUsIG9wZXJhdGlvbnMsIG9wdGlvbnMpO1xufVxuZnVuY3Rpb24gbW92ZTIobm9kZSwgb3B0aW9ucykge1xuICBpZiAob3B0aW9ucy5pbmRleFBhdGhzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIG5vZGU7XG4gIGZvciAoY29uc3QgaW5kZXhQYXRoIG9mIG9wdGlvbnMuaW5kZXhQYXRocykge1xuICAgIGlmIChpbmRleFBhdGgubGVuZ3RoID09PSAwKSB0aHJvdyBuZXcgRXJyb3IoYENhbid0IG1vdmUgdGhlIHJvb3Qgbm9kZWApO1xuICB9XG4gIGlmIChvcHRpb25zLnRvLmxlbmd0aCA9PT0gMCkgdGhyb3cgbmV3IEVycm9yKGBDYW4ndCBtb3ZlIG5vZGVzIHRvIHRoZSByb290YCk7XG4gIGNvbnN0IF9hbmNlc3RvckluZGV4UGF0aHMgPSBhbmNlc3RvckluZGV4UGF0aHMob3B0aW9ucy5pbmRleFBhdGhzKTtcbiAgY29uc3Qgbm9kZXNUb0luc2VydCA9IF9hbmNlc3RvckluZGV4UGF0aHMubWFwKChpbmRleFBhdGgpID0+IGFjY2Vzcyhub2RlLCBpbmRleFBhdGgsIG9wdGlvbnMpKTtcbiAgY29uc3Qgb3BlcmF0aW9ucyA9IGdldEluc2VydGlvbk9wZXJhdGlvbnMob3B0aW9ucy50bywgbm9kZXNUb0luc2VydCwgZ2V0UmVtb3ZhbE9wZXJhdGlvbnMoX2FuY2VzdG9ySW5kZXhQYXRocykpO1xuICByZXR1cm4gbXV0YXRlKG5vZGUsIG9wZXJhdGlvbnMsIG9wdGlvbnMpO1xufVxuZnVuY3Rpb24gdmlzaXQobm9kZSwgb3B0aW9ucykge1xuICBjb25zdCB7IG9uRW50ZXIsIG9uTGVhdmUsIGdldENoaWxkcmVuIH0gPSBvcHRpb25zO1xuICBsZXQgaW5kZXhQYXRoID0gW107XG4gIGxldCBzdGFjayA9IFt7IG5vZGUgfV07XG4gIGNvbnN0IGdldEluZGV4UGF0aCA9IG9wdGlvbnMucmV1c2VJbmRleFBhdGggPyAoKSA9PiBpbmRleFBhdGggOiAoKSA9PiBpbmRleFBhdGguc2xpY2UoKTtcbiAgd2hpbGUgKHN0YWNrLmxlbmd0aCA+IDApIHtcbiAgICBsZXQgd3JhcHBlciA9IHN0YWNrW3N0YWNrLmxlbmd0aCAtIDFdO1xuICAgIGlmICh3cmFwcGVyLnN0YXRlID09PSB2b2lkIDApIHtcbiAgICAgIGNvbnN0IGVudGVyUmVzdWx0ID0gb25FbnRlcj8uKHdyYXBwZXIubm9kZSwgZ2V0SW5kZXhQYXRoKCkpO1xuICAgICAgaWYgKGVudGVyUmVzdWx0ID09PSBcInN0b3BcIikgcmV0dXJuO1xuICAgICAgd3JhcHBlci5zdGF0ZSA9IGVudGVyUmVzdWx0ID09PSBcInNraXBcIiA/IC0xIDogMDtcbiAgICB9XG4gICAgY29uc3QgY2hpbGRyZW4gPSB3cmFwcGVyLmNoaWxkcmVuIHx8IGdldENoaWxkcmVuKHdyYXBwZXIubm9kZSwgZ2V0SW5kZXhQYXRoKCkpO1xuICAgIHdyYXBwZXIuY2hpbGRyZW4gfHwgKHdyYXBwZXIuY2hpbGRyZW4gPSBjaGlsZHJlbik7XG4gICAgaWYgKHdyYXBwZXIuc3RhdGUgIT09IC0xKSB7XG4gICAgICBpZiAod3JhcHBlci5zdGF0ZSA8IGNoaWxkcmVuLmxlbmd0aCkge1xuICAgICAgICBsZXQgY3VycmVudEluZGV4ID0gd3JhcHBlci5zdGF0ZTtcbiAgICAgICAgaW5kZXhQYXRoLnB1c2goY3VycmVudEluZGV4KTtcbiAgICAgICAgc3RhY2sucHVzaCh7IG5vZGU6IGNoaWxkcmVuW2N1cnJlbnRJbmRleF0gfSk7XG4gICAgICAgIHdyYXBwZXIuc3RhdGUgPSBjdXJyZW50SW5kZXggKyAxO1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IGxlYXZlUmVzdWx0ID0gb25MZWF2ZT8uKHdyYXBwZXIubm9kZSwgZ2V0SW5kZXhQYXRoKCkpO1xuICAgICAgaWYgKGxlYXZlUmVzdWx0ID09PSBcInN0b3BcIikgcmV0dXJuO1xuICAgIH1cbiAgICBpbmRleFBhdGgucG9wKCk7XG4gICAgc3RhY2sucG9wKCk7XG4gIH1cbn1cblxuLy8gc3JjL3RyZWUtY29sbGVjdGlvbi50c1xudmFyIFRyZWVDb2xsZWN0aW9uID0gY2xhc3MgX1RyZWVDb2xsZWN0aW9uIHtcbiAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInJvb3ROb2RlXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJpc0VxdWFsXCIsIChvdGhlcikgPT4ge1xuICAgICAgcmV0dXJuIGlzRXF1YWwodGhpcy5yb290Tm9kZSwgb3RoZXIucm9vdE5vZGUpO1xuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJnZXROb2RlQ2hpbGRyZW5cIiwgKG5vZGUpID0+IHtcbiAgICAgIHJldHVybiB0aGlzLm9wdGlvbnMubm9kZVRvQ2hpbGRyZW4/Lihub2RlKSA/PyBmYWxsYmFjazIubm9kZVRvQ2hpbGRyZW4obm9kZSkgPz8gW107XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImdldE5vZGVDaGlsZHJlbkNvdW50XCIsIChub2RlKSA9PiB7XG4gICAgICByZXR1cm4gdGhpcy5vcHRpb25zLm5vZGVUb0NoaWxkcmVuQ291bnQ/Lihub2RlKSA/PyBmYWxsYmFjazIubm9kZVRvQ2hpbGRyZW5Db3VudChub2RlKTtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZ2V0Tm9kZVZhbHVlXCIsIChub2RlKSA9PiB7XG4gICAgICByZXR1cm4gdGhpcy5vcHRpb25zLm5vZGVUb1ZhbHVlPy4obm9kZSkgPz8gZmFsbGJhY2syLm5vZGVUb1ZhbHVlKG5vZGUpO1xuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJnZXROb2RlRGlzYWJsZWRcIiwgKG5vZGUpID0+IHtcbiAgICAgIHJldHVybiB0aGlzLm9wdGlvbnMuaXNOb2RlRGlzYWJsZWQ/Lihub2RlKSA/PyBmYWxsYmFjazIuaXNOb2RlRGlzYWJsZWQobm9kZSk7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInN0cmluZ2lmeVwiLCAodmFsdWUpID0+IHtcbiAgICAgIGNvbnN0IG5vZGUgPSB0aGlzLmZpbmROb2RlKHZhbHVlKTtcbiAgICAgIGlmICghbm9kZSkgcmV0dXJuIG51bGw7XG4gICAgICByZXR1cm4gdGhpcy5zdHJpbmdpZnlOb2RlKG5vZGUpO1xuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJzdHJpbmdpZnlOb2RlXCIsIChub2RlKSA9PiB7XG4gICAgICByZXR1cm4gdGhpcy5vcHRpb25zLm5vZGVUb1N0cmluZz8uKG5vZGUpID8/IGZhbGxiYWNrMi5ub2RlVG9TdHJpbmcobm9kZSk7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImdldEZpcnN0Tm9kZVwiLCAocm9vdE5vZGUgPSB0aGlzLnJvb3ROb2RlKSA9PiB7XG4gICAgICBsZXQgZmlyc3RDaGlsZDtcbiAgICAgIHZpc2l0KHJvb3ROb2RlLCB7XG4gICAgICAgIGdldENoaWxkcmVuOiB0aGlzLmdldE5vZGVDaGlsZHJlbixcbiAgICAgICAgb25FbnRlcjogKG5vZGUsIGluZGV4UGF0aCkgPT4ge1xuICAgICAgICAgIGlmICghZmlyc3RDaGlsZCAmJiBpbmRleFBhdGgubGVuZ3RoID4gMCAmJiAhdGhpcy5nZXROb2RlRGlzYWJsZWQobm9kZSkpIHtcbiAgICAgICAgICAgIGZpcnN0Q2hpbGQgPSBub2RlO1xuICAgICAgICAgICAgcmV0dXJuIFwic3RvcFwiO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICByZXR1cm4gZmlyc3RDaGlsZDtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZ2V0TGFzdE5vZGVcIiwgKHJvb3ROb2RlID0gdGhpcy5yb290Tm9kZSwgb3B0cyA9IHt9KSA9PiB7XG4gICAgICBsZXQgbGFzdENoaWxkO1xuICAgICAgdmlzaXQocm9vdE5vZGUsIHtcbiAgICAgICAgZ2V0Q2hpbGRyZW46IHRoaXMuZ2V0Tm9kZUNoaWxkcmVuLFxuICAgICAgICBvbkVudGVyOiAobm9kZSwgaW5kZXhQYXRoKSA9PiB7XG4gICAgICAgICAgY29uc3Qgbm9kZVZhbHVlID0gdGhpcy5nZXROb2RlVmFsdWUobm9kZSk7XG4gICAgICAgICAgaWYgKG9wdHMuc2tpcD8uKHsgdmFsdWU6IG5vZGVWYWx1ZSwgbm9kZSwgaW5kZXhQYXRoIH0pKSByZXR1cm4gXCJza2lwXCI7XG4gICAgICAgICAgaWYgKGluZGV4UGF0aC5sZW5ndGggPiAxKSByZXR1cm4gXCJza2lwXCI7XG4gICAgICAgICAgaWYgKCF0aGlzLmdldE5vZGVEaXNhYmxlZChub2RlKSkge1xuICAgICAgICAgICAgbGFzdENoaWxkID0gbm9kZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIGxhc3RDaGlsZDtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiYXRcIiwgKGluZGV4UGF0aCkgPT4ge1xuICAgICAgcmV0dXJuIGFjY2Vzcyh0aGlzLnJvb3ROb2RlLCBpbmRleFBhdGgsIHtcbiAgICAgICAgZ2V0Q2hpbGRyZW46IHRoaXMuZ2V0Tm9kZUNoaWxkcmVuXG4gICAgICB9KTtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZmluZE5vZGVcIiwgKHZhbHVlLCByb290Tm9kZSA9IHRoaXMucm9vdE5vZGUpID0+IHtcbiAgICAgIHJldHVybiBmaW5kKHJvb3ROb2RlLCB7XG4gICAgICAgIGdldENoaWxkcmVuOiB0aGlzLmdldE5vZGVDaGlsZHJlbixcbiAgICAgICAgcHJlZGljYXRlOiAobm9kZSkgPT4gdGhpcy5nZXROb2RlVmFsdWUobm9kZSkgPT09IHZhbHVlXG4gICAgICB9KTtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwic29ydFwiLCAodmFsdWVzKSA9PiB7XG4gICAgICByZXR1cm4gdmFsdWVzLnJlZHVjZShcbiAgICAgICAgKGFjYywgdmFsdWUpID0+IHtcbiAgICAgICAgICBjb25zdCBpbmRleFBhdGggPSB0aGlzLmdldEluZGV4UGF0aCh2YWx1ZSk7XG4gICAgICAgICAgaWYgKGluZGV4UGF0aCAhPSBudWxsKSBhY2MucHVzaCh7IHZhbHVlLCBpbmRleFBhdGggfSk7XG4gICAgICAgICAgcmV0dXJuIGFjYztcbiAgICAgICAgfSxcbiAgICAgICAgW11cbiAgICAgICkuc29ydCgoYSwgYikgPT4gY29tcGFyZUluZGV4UGF0aHMoYS5pbmRleFBhdGgsIGIuaW5kZXhQYXRoKSkubWFwKCh7IHZhbHVlIH0pID0+IHZhbHVlKTtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZ2V0SW5kZXhQYXRoXCIsICh2YWx1ZSkgPT4ge1xuICAgICAgcmV0dXJuIGZpbmRJbmRleFBhdGgodGhpcy5yb290Tm9kZSwge1xuICAgICAgICBnZXRDaGlsZHJlbjogdGhpcy5nZXROb2RlQ2hpbGRyZW4sXG4gICAgICAgIHByZWRpY2F0ZTogKG5vZGUpID0+IHRoaXMuZ2V0Tm9kZVZhbHVlKG5vZGUpID09PSB2YWx1ZVxuICAgICAgfSk7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImdldFZhbHVlXCIsIChpbmRleFBhdGgpID0+IHtcbiAgICAgIGNvbnN0IG5vZGUgPSB0aGlzLmF0KGluZGV4UGF0aCk7XG4gICAgICByZXR1cm4gbm9kZSA/IHRoaXMuZ2V0Tm9kZVZhbHVlKG5vZGUpIDogdm9pZCAwO1xuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJnZXRWYWx1ZVBhdGhcIiwgKGluZGV4UGF0aCkgPT4ge1xuICAgICAgaWYgKCFpbmRleFBhdGgpIHJldHVybiBbXTtcbiAgICAgIGNvbnN0IHZhbHVlUGF0aCA9IFtdO1xuICAgICAgbGV0IGN1cnJlbnRQYXRoID0gWy4uLmluZGV4UGF0aF07XG4gICAgICB3aGlsZSAoY3VycmVudFBhdGgubGVuZ3RoID4gMCkge1xuICAgICAgICBjb25zdCBub2RlID0gdGhpcy5hdChjdXJyZW50UGF0aCk7XG4gICAgICAgIGlmIChub2RlKSB2YWx1ZVBhdGgudW5zaGlmdCh0aGlzLmdldE5vZGVWYWx1ZShub2RlKSk7XG4gICAgICAgIGN1cnJlbnRQYXRoLnBvcCgpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHZhbHVlUGF0aDtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZ2V0RGVwdGhcIiwgKHZhbHVlKSA9PiB7XG4gICAgICBjb25zdCBpbmRleFBhdGggPSBmaW5kSW5kZXhQYXRoKHRoaXMucm9vdE5vZGUsIHtcbiAgICAgICAgZ2V0Q2hpbGRyZW46IHRoaXMuZ2V0Tm9kZUNoaWxkcmVuLFxuICAgICAgICBwcmVkaWNhdGU6IChub2RlKSA9PiB0aGlzLmdldE5vZGVWYWx1ZShub2RlKSA9PT0gdmFsdWVcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIGluZGV4UGF0aD8ubGVuZ3RoID8/IDA7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImlzUm9vdE5vZGVcIiwgKG5vZGUpID0+IHtcbiAgICAgIHJldHVybiB0aGlzLmdldE5vZGVWYWx1ZShub2RlKSA9PT0gdGhpcy5nZXROb2RlVmFsdWUodGhpcy5yb290Tm9kZSk7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImNvbnRhaW5zXCIsIChwYXJlbnRJbmRleFBhdGgsIHZhbHVlSW5kZXhQYXRoKSA9PiB7XG4gICAgICBpZiAoIXBhcmVudEluZGV4UGF0aCB8fCAhdmFsdWVJbmRleFBhdGgpIHJldHVybiBmYWxzZTtcbiAgICAgIHJldHVybiB2YWx1ZUluZGV4UGF0aC5zbGljZSgwLCBwYXJlbnRJbmRleFBhdGgubGVuZ3RoKS5ldmVyeSgoXywgaSkgPT4gcGFyZW50SW5kZXhQYXRoW2ldID09PSB2YWx1ZUluZGV4UGF0aFtpXSk7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImdldE5leHROb2RlXCIsICh2YWx1ZSwgb3B0cyA9IHt9KSA9PiB7XG4gICAgICBsZXQgZm91bmQgPSBmYWxzZTtcbiAgICAgIGxldCBuZXh0Tm9kZTtcbiAgICAgIHZpc2l0KHRoaXMucm9vdE5vZGUsIHtcbiAgICAgICAgZ2V0Q2hpbGRyZW46IHRoaXMuZ2V0Tm9kZUNoaWxkcmVuLFxuICAgICAgICBvbkVudGVyOiAobm9kZSwgaW5kZXhQYXRoKSA9PiB7XG4gICAgICAgICAgaWYgKHRoaXMuaXNSb290Tm9kZShub2RlKSkgcmV0dXJuO1xuICAgICAgICAgIGNvbnN0IG5vZGVWYWx1ZSA9IHRoaXMuZ2V0Tm9kZVZhbHVlKG5vZGUpO1xuICAgICAgICAgIGlmIChvcHRzLnNraXA/Lih7IHZhbHVlOiBub2RlVmFsdWUsIG5vZGUsIGluZGV4UGF0aCB9KSkge1xuICAgICAgICAgICAgaWYgKG5vZGVWYWx1ZSA9PT0gdmFsdWUpIHtcbiAgICAgICAgICAgICAgZm91bmQgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIFwic2tpcFwiO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoZm91bmQgJiYgIXRoaXMuZ2V0Tm9kZURpc2FibGVkKG5vZGUpKSB7XG4gICAgICAgICAgICBuZXh0Tm9kZSA9IG5vZGU7XG4gICAgICAgICAgICByZXR1cm4gXCJzdG9wXCI7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChub2RlVmFsdWUgPT09IHZhbHVlKSB7XG4gICAgICAgICAgICBmb3VuZCA9IHRydWU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBuZXh0Tm9kZTtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZ2V0UHJldmlvdXNOb2RlXCIsICh2YWx1ZSwgb3B0cyA9IHt9KSA9PiB7XG4gICAgICBsZXQgcHJldmlvdXNOb2RlO1xuICAgICAgbGV0IGZvdW5kID0gZmFsc2U7XG4gICAgICB2aXNpdCh0aGlzLnJvb3ROb2RlLCB7XG4gICAgICAgIGdldENoaWxkcmVuOiB0aGlzLmdldE5vZGVDaGlsZHJlbixcbiAgICAgICAgb25FbnRlcjogKG5vZGUsIGluZGV4UGF0aCkgPT4ge1xuICAgICAgICAgIGlmICh0aGlzLmlzUm9vdE5vZGUobm9kZSkpIHJldHVybjtcbiAgICAgICAgICBjb25zdCBub2RlVmFsdWUgPSB0aGlzLmdldE5vZGVWYWx1ZShub2RlKTtcbiAgICAgICAgICBpZiAob3B0cy5za2lwPy4oeyB2YWx1ZTogbm9kZVZhbHVlLCBub2RlLCBpbmRleFBhdGggfSkpIHtcbiAgICAgICAgICAgIHJldHVybiBcInNraXBcIjtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKG5vZGVWYWx1ZSA9PT0gdmFsdWUpIHtcbiAgICAgICAgICAgIGZvdW5kID0gdHJ1ZTtcbiAgICAgICAgICAgIHJldHVybiBcInN0b3BcIjtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKCF0aGlzLmdldE5vZGVEaXNhYmxlZChub2RlKSkge1xuICAgICAgICAgICAgcHJldmlvdXNOb2RlID0gbm9kZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIGZvdW5kID8gcHJldmlvdXNOb2RlIDogdm9pZCAwO1xuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJnZXRQYXJlbnROb2Rlc1wiLCAodmFsdWVzKSA9PiB7XG4gICAgICBjb25zdCByZXN1bHQgPSBbXTtcbiAgICAgIGxldCBpbmRleFBhdGggPSB0aGlzLmdldEluZGV4UGF0aCh2YWx1ZXMpO1xuICAgICAgd2hpbGUgKGluZGV4UGF0aCAmJiBpbmRleFBhdGgubGVuZ3RoID4gMCkge1xuICAgICAgICBpbmRleFBhdGgucG9wKCk7XG4gICAgICAgIGNvbnN0IHBhcmVudE5vZGUgPSB0aGlzLmF0KGluZGV4UGF0aCk7XG4gICAgICAgIGlmIChwYXJlbnROb2RlICYmICF0aGlzLmlzUm9vdE5vZGUocGFyZW50Tm9kZSkpIHtcbiAgICAgICAgICByZXN1bHQudW5zaGlmdChwYXJlbnROb2RlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZ2V0UGFyZW50SW5kZXhQYXRoXCIsIChpbmRleFBhdGgpID0+IHtcbiAgICAgIHJldHVybiBpbmRleFBhdGguc2xpY2UoMCwgLTEpO1xuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJnZXRQYXJlbnROb2RlXCIsICh2YWx1ZU9ySW5kZXhQYXRoKSA9PiB7XG4gICAgICBjb25zdCBpbmRleFBhdGggPSB0eXBlb2YgdmFsdWVPckluZGV4UGF0aCA9PT0gXCJzdHJpbmdcIiA/IHRoaXMuZ2V0SW5kZXhQYXRoKHZhbHVlT3JJbmRleFBhdGgpIDogdmFsdWVPckluZGV4UGF0aDtcbiAgICAgIHJldHVybiBpbmRleFBhdGggPyB0aGlzLmF0KHRoaXMuZ2V0UGFyZW50SW5kZXhQYXRoKGluZGV4UGF0aCkpIDogdm9pZCAwO1xuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJ2aXNpdFwiLCAob3B0cykgPT4ge1xuICAgICAgY29uc3QgeyBza2lwLCAuLi5yZXN0IH0gPSBvcHRzO1xuICAgICAgdmlzaXQodGhpcy5yb290Tm9kZSwge1xuICAgICAgICAuLi5yZXN0LFxuICAgICAgICBnZXRDaGlsZHJlbjogdGhpcy5nZXROb2RlQ2hpbGRyZW4sXG4gICAgICAgIG9uRW50ZXI6IChub2RlLCBpbmRleFBhdGgpID0+IHtcbiAgICAgICAgICBpZiAodGhpcy5pc1Jvb3ROb2RlKG5vZGUpKSByZXR1cm47XG4gICAgICAgICAgaWYgKHNraXA/Lih7IHZhbHVlOiB0aGlzLmdldE5vZGVWYWx1ZShub2RlKSwgbm9kZSwgaW5kZXhQYXRoIH0pKSByZXR1cm4gXCJza2lwXCI7XG4gICAgICAgICAgcmV0dXJuIHJlc3Qub25FbnRlcj8uKG5vZGUsIGluZGV4UGF0aCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJnZXRQcmV2aW91c1NpYmxpbmdcIiwgKGluZGV4UGF0aCkgPT4ge1xuICAgICAgY29uc3QgcGFyZW50Tm9kZSA9IHRoaXMuZ2V0UGFyZW50Tm9kZShpbmRleFBhdGgpO1xuICAgICAgaWYgKCFwYXJlbnROb2RlKSByZXR1cm47XG4gICAgICBjb25zdCBzaWJsaW5ncyA9IHRoaXMuZ2V0Tm9kZUNoaWxkcmVuKHBhcmVudE5vZGUpO1xuICAgICAgbGV0IGlkeCA9IHNpYmxpbmdzLmZpbmRJbmRleCgoc2libGluZykgPT4gdGhpcy5nZXRWYWx1ZShpbmRleFBhdGgpID09PSB0aGlzLmdldE5vZGVWYWx1ZShzaWJsaW5nKSk7XG4gICAgICB3aGlsZSAoLS1pZHggPj0gMCkge1xuICAgICAgICBjb25zdCBzaWJsaW5nID0gc2libGluZ3NbaWR4XTtcbiAgICAgICAgaWYgKCF0aGlzLmdldE5vZGVEaXNhYmxlZChzaWJsaW5nKSkgcmV0dXJuIHNpYmxpbmc7XG4gICAgICB9XG4gICAgICByZXR1cm47XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImdldE5leHRTaWJsaW5nXCIsIChpbmRleFBhdGgpID0+IHtcbiAgICAgIGNvbnN0IHBhcmVudE5vZGUgPSB0aGlzLmdldFBhcmVudE5vZGUoaW5kZXhQYXRoKTtcbiAgICAgIGlmICghcGFyZW50Tm9kZSkgcmV0dXJuO1xuICAgICAgY29uc3Qgc2libGluZ3MgPSB0aGlzLmdldE5vZGVDaGlsZHJlbihwYXJlbnROb2RlKTtcbiAgICAgIGxldCBpZHggPSBzaWJsaW5ncy5maW5kSW5kZXgoKHNpYmxpbmcpID0+IHRoaXMuZ2V0VmFsdWUoaW5kZXhQYXRoKSA9PT0gdGhpcy5nZXROb2RlVmFsdWUoc2libGluZykpO1xuICAgICAgd2hpbGUgKCsraWR4IDwgc2libGluZ3MubGVuZ3RoKSB7XG4gICAgICAgIGNvbnN0IHNpYmxpbmcgPSBzaWJsaW5nc1tpZHhdO1xuICAgICAgICBpZiAoIXRoaXMuZ2V0Tm9kZURpc2FibGVkKHNpYmxpbmcpKSByZXR1cm4gc2libGluZztcbiAgICAgIH1cbiAgICAgIHJldHVybjtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZ2V0U2libGluZ05vZGVzXCIsIChpbmRleFBhdGgpID0+IHtcbiAgICAgIGNvbnN0IHBhcmVudE5vZGUgPSB0aGlzLmdldFBhcmVudE5vZGUoaW5kZXhQYXRoKTtcbiAgICAgIHJldHVybiBwYXJlbnROb2RlID8gdGhpcy5nZXROb2RlQ2hpbGRyZW4ocGFyZW50Tm9kZSkgOiBbXTtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZ2V0VmFsdWVzXCIsIChyb290Tm9kZSA9IHRoaXMucm9vdE5vZGUpID0+IHtcbiAgICAgIGNvbnN0IHZhbHVlcyA9IGZsYXRNYXAocm9vdE5vZGUsIHtcbiAgICAgICAgZ2V0Q2hpbGRyZW46IHRoaXMuZ2V0Tm9kZUNoaWxkcmVuLFxuICAgICAgICB0cmFuc2Zvcm06IChub2RlKSA9PiBbdGhpcy5nZXROb2RlVmFsdWUobm9kZSldXG4gICAgICB9KTtcbiAgICAgIHJldHVybiB2YWx1ZXMuc2xpY2UoMSk7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImlzU2FtZURlcHRoXCIsIChpbmRleFBhdGgsIGRlcHRoKSA9PiB7XG4gICAgICBpZiAoZGVwdGggPT0gbnVsbCkgcmV0dXJuIHRydWU7XG4gICAgICByZXR1cm4gaW5kZXhQYXRoLmxlbmd0aCA9PT0gZGVwdGg7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImlzQnJhbmNoTm9kZVwiLCAobm9kZSkgPT4ge1xuICAgICAgcmV0dXJuIHRoaXMuZ2V0Tm9kZUNoaWxkcmVuKG5vZGUpLmxlbmd0aCA+IDAgfHwgdGhpcy5nZXROb2RlQ2hpbGRyZW5Db3VudChub2RlKSAhPSBudWxsO1xuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJnZXRCcmFuY2hWYWx1ZXNcIiwgKHJvb3ROb2RlID0gdGhpcy5yb290Tm9kZSwgb3B0cyA9IHt9KSA9PiB7XG4gICAgICBsZXQgdmFsdWVzID0gW107XG4gICAgICB2aXNpdChyb290Tm9kZSwge1xuICAgICAgICBnZXRDaGlsZHJlbjogdGhpcy5nZXROb2RlQ2hpbGRyZW4sXG4gICAgICAgIG9uRW50ZXI6IChub2RlLCBpbmRleFBhdGgpID0+IHtcbiAgICAgICAgICBjb25zdCBub2RlVmFsdWUgPSB0aGlzLmdldE5vZGVWYWx1ZShub2RlKTtcbiAgICAgICAgICBpZiAob3B0cy5za2lwPy4oeyB2YWx1ZTogbm9kZVZhbHVlLCBub2RlLCBpbmRleFBhdGggfSkpIHJldHVybiBcInNraXBcIjtcbiAgICAgICAgICBpZiAodGhpcy5pc0JyYW5jaE5vZGUobm9kZSkgJiYgdGhpcy5pc1NhbWVEZXB0aChpbmRleFBhdGgsIG9wdHMuZGVwdGgpKSB7XG4gICAgICAgICAgICB2YWx1ZXMucHVzaCh0aGlzLmdldE5vZGVWYWx1ZShub2RlKSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHJldHVybiB2YWx1ZXMuc2xpY2UoMSk7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImZsYXR0ZW5cIiwgKHJvb3ROb2RlID0gdGhpcy5yb290Tm9kZSkgPT4ge1xuICAgICAgY29uc3Qgbm9kZXMgPSBmbGF0TWFwKHJvb3ROb2RlLCB7XG4gICAgICAgIGdldENoaWxkcmVuOiB0aGlzLmdldE5vZGVDaGlsZHJlbixcbiAgICAgICAgdHJhbnNmb3JtOiAobm9kZSwgaW5kZXhQYXRoKSA9PiB7XG4gICAgICAgICAgY29uc3QgY2hpbGRyZW4gPSB0aGlzLmdldE5vZGVDaGlsZHJlbihub2RlKS5tYXAoKGNoaWxkKSA9PiB0aGlzLmdldE5vZGVWYWx1ZShjaGlsZCkpO1xuICAgICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBjb21wYWN0KHtcbiAgICAgICAgICAgICAgbGFiZWw6IHRoaXMuc3RyaW5naWZ5Tm9kZShub2RlKSxcbiAgICAgICAgICAgICAgdmFsdWU6IHRoaXMuZ2V0Tm9kZVZhbHVlKG5vZGUpLFxuICAgICAgICAgICAgICBpbmRleFBhdGgsXG4gICAgICAgICAgICAgIGNoaWxkcmVuOiBjaGlsZHJlbi5sZW5ndGggPiAwID8gY2hpbGRyZW4gOiB2b2lkIDBcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgXTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICByZXR1cm4gbm9kZXMuc2xpY2UoMSk7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcIl9jcmVhdGVcIiwgKG5vZGUsIGNoaWxkcmVuKSA9PiB7XG4gICAgICByZXR1cm4gY29tcGFjdCh7IC4uLm5vZGUsIGNoaWxkcmVuIH0pO1xuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJfaW5zZXJ0XCIsIChyb290Tm9kZSwgaW5kZXhQYXRoLCBub2RlcykgPT4ge1xuICAgICAgcmV0dXJuIHRoaXMuX3NldChcbiAgICAgICAgaW5zZXJ0Mihyb290Tm9kZSwgeyBhdDogaW5kZXhQYXRoLCBub2RlcywgZ2V0Q2hpbGRyZW46IHRoaXMuZ2V0Tm9kZUNoaWxkcmVuLCBjcmVhdGU6IHRoaXMuX2NyZWF0ZSB9KVxuICAgICAgKTtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiX3NldFwiLCAocm9vdE5vZGUpID0+IHtcbiAgICAgIHJldHVybiBuZXcgX1RyZWVDb2xsZWN0aW9uKHsgLi4udGhpcy5vcHRpb25zLCByb290Tm9kZSB9KTtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiX3JlcGxhY2VcIiwgKHJvb3ROb2RlLCBpbmRleFBhdGgsIG5vZGUpID0+IHtcbiAgICAgIHJldHVybiB0aGlzLl9zZXQoXG4gICAgICAgIHJlcGxhY2Uocm9vdE5vZGUsIHsgYXQ6IGluZGV4UGF0aCwgbm9kZSwgZ2V0Q2hpbGRyZW46IHRoaXMuZ2V0Tm9kZUNoaWxkcmVuLCBjcmVhdGU6IHRoaXMuX2NyZWF0ZSB9KVxuICAgICAgKTtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiX21vdmVcIiwgKHJvb3ROb2RlLCBpbmRleFBhdGhzLCB0bykgPT4ge1xuICAgICAgcmV0dXJuIHRoaXMuX3NldChtb3ZlMihyb290Tm9kZSwgeyBpbmRleFBhdGhzLCB0bywgZ2V0Q2hpbGRyZW46IHRoaXMuZ2V0Tm9kZUNoaWxkcmVuLCBjcmVhdGU6IHRoaXMuX2NyZWF0ZSB9KSk7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcIl9yZW1vdmVcIiwgKHJvb3ROb2RlLCBpbmRleFBhdGhzKSA9PiB7XG4gICAgICByZXR1cm4gdGhpcy5fc2V0KHJlbW92ZShyb290Tm9kZSwgeyBpbmRleFBhdGhzLCBnZXRDaGlsZHJlbjogdGhpcy5nZXROb2RlQ2hpbGRyZW4sIGNyZWF0ZTogdGhpcy5fY3JlYXRlIH0pKTtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwicmVwbGFjZVwiLCAoaW5kZXhQYXRoLCBub2RlKSA9PiB7XG4gICAgICByZXR1cm4gdGhpcy5fcmVwbGFjZSh0aGlzLnJvb3ROb2RlLCBpbmRleFBhdGgsIG5vZGUpO1xuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJyZW1vdmVcIiwgKGluZGV4UGF0aHMpID0+IHtcbiAgICAgIHJldHVybiB0aGlzLl9yZW1vdmUodGhpcy5yb290Tm9kZSwgaW5kZXhQYXRocyk7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImluc2VydEJlZm9yZVwiLCAoaW5kZXhQYXRoLCBub2RlcykgPT4ge1xuICAgICAgY29uc3QgcGFyZW50Tm9kZSA9IHRoaXMuZ2V0UGFyZW50Tm9kZShpbmRleFBhdGgpO1xuICAgICAgcmV0dXJuIHBhcmVudE5vZGUgPyB0aGlzLl9pbnNlcnQodGhpcy5yb290Tm9kZSwgaW5kZXhQYXRoLCBub2RlcykgOiB2b2lkIDA7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImluc2VydEFmdGVyXCIsIChpbmRleFBhdGgsIG5vZGVzKSA9PiB7XG4gICAgICBjb25zdCBwYXJlbnROb2RlID0gdGhpcy5nZXRQYXJlbnROb2RlKGluZGV4UGF0aCk7XG4gICAgICBpZiAoIXBhcmVudE5vZGUpIHJldHVybjtcbiAgICAgIGNvbnN0IG5leHRJbmRleDIgPSBbLi4uaW5kZXhQYXRoLnNsaWNlKDAsIC0xKSwgaW5kZXhQYXRoW2luZGV4UGF0aC5sZW5ndGggLSAxXSArIDFdO1xuICAgICAgcmV0dXJuIHRoaXMuX2luc2VydCh0aGlzLnJvb3ROb2RlLCBuZXh0SW5kZXgyLCBub2Rlcyk7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcIm1vdmVcIiwgKGZyb21JbmRleFBhdGhzLCB0b0luZGV4UGF0aCkgPT4ge1xuICAgICAgcmV0dXJuIHRoaXMuX21vdmUodGhpcy5yb290Tm9kZSwgZnJvbUluZGV4UGF0aHMsIHRvSW5kZXhQYXRoKTtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwidG9KU09OXCIsICgpID0+IHtcbiAgICAgIHJldHVybiB0aGlzLmdldFZhbHVlcyh0aGlzLnJvb3ROb2RlKTtcbiAgICB9KTtcbiAgICB0aGlzLnJvb3ROb2RlID0gb3B0aW9ucy5yb290Tm9kZTtcbiAgfVxufTtcbmZ1bmN0aW9uIGZsYXR0ZW5lZFRvVHJlZShub2Rlcykge1xuICBsZXQgcm9vdE5vZGUgPSB7XG4gICAgdmFsdWU6IFwiUk9PVFwiXG4gIH07XG4gIG5vZGVzLm1hcCgobm9kZSkgPT4ge1xuICAgIGNvbnN0IHsgaW5kZXhQYXRoLCBsYWJlbCwgdmFsdWUgfSA9IG5vZGU7XG4gICAgaWYgKCFpbmRleFBhdGgubGVuZ3RoKSB7XG4gICAgICBPYmplY3QuYXNzaWduKHJvb3ROb2RlLCB7IGxhYmVsLCB2YWx1ZSwgY2hpbGRyZW46IFtdIH0pO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICByb290Tm9kZSA9IGluc2VydDIocm9vdE5vZGUsIHtcbiAgICAgIGF0OiBpbmRleFBhdGgsXG4gICAgICBub2RlczogW2NvbXBhY3QoeyBsYWJlbCwgdmFsdWUgfSldLFxuICAgICAgZ2V0Q2hpbGRyZW46IChub2RlMikgPT4gbm9kZTIuY2hpbGRyZW4gPz8gW10sXG4gICAgICBjcmVhdGU6IChub2RlMiwgY2hpbGRyZW4pID0+IHtcbiAgICAgICAgcmV0dXJuIGNvbXBhY3QoeyAuLi5ub2RlMiwgY2hpbGRyZW4gfSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH0pO1xuICByZXR1cm4gbmV3IFRyZWVDb2xsZWN0aW9uKHsgcm9vdE5vZGUgfSk7XG59XG5mdW5jdGlvbiBmaWxlUGF0aFRvVHJlZShwYXRocykge1xuICBjb25zdCByb290Tm9kZSA9IHtcbiAgICBsYWJlbDogXCJcIixcbiAgICB2YWx1ZTogXCJST09UXCIsXG4gICAgY2hpbGRyZW46IFtdXG4gIH07XG4gIHBhdGhzLmZvckVhY2goKHBhdGgpID0+IHtcbiAgICBjb25zdCBwYXJ0cyA9IHBhdGguc3BsaXQoXCIvXCIpO1xuICAgIGxldCBjdXJyZW50Tm9kZSA9IHJvb3ROb2RlO1xuICAgIHBhcnRzLmZvckVhY2goKHBhcnQpID0+IHtcbiAgICAgIGxldCBjaGlsZE5vZGUgPSBjdXJyZW50Tm9kZS5jaGlsZHJlbj8uZmluZCgoY2hpbGQpID0+IGNoaWxkLmxhYmVsID09PSBwYXJ0KTtcbiAgICAgIGlmICghY2hpbGROb2RlKSB7XG4gICAgICAgIGNoaWxkTm9kZSA9IHtcbiAgICAgICAgICB2YWx1ZTogcGFydHMuc2xpY2UoMCwgcGFydHMuaW5kZXhPZihwYXJ0KSArIDEpLmpvaW4oXCIvXCIpLFxuICAgICAgICAgIGxhYmVsOiBwYXJ0XG4gICAgICAgIH07XG4gICAgICAgIGN1cnJlbnROb2RlLmNoaWxkcmVuIHx8IChjdXJyZW50Tm9kZS5jaGlsZHJlbiA9IFtdKTtcbiAgICAgICAgY3VycmVudE5vZGUuY2hpbGRyZW4ucHVzaChjaGlsZE5vZGUpO1xuICAgICAgfVxuICAgICAgY3VycmVudE5vZGUgPSBjaGlsZE5vZGU7XG4gICAgfSk7XG4gIH0pO1xuICByZXR1cm4gbmV3IFRyZWVDb2xsZWN0aW9uKHsgcm9vdE5vZGUgfSk7XG59XG52YXIgZmFsbGJhY2syID0ge1xuICBub2RlVG9WYWx1ZShub2RlKSB7XG4gICAgaWYgKHR5cGVvZiBub2RlID09PSBcInN0cmluZ1wiKSByZXR1cm4gbm9kZTtcbiAgICBpZiAoaXNPYmplY3Qobm9kZSkgJiYgaGFzUHJvcChub2RlLCBcInZhbHVlXCIpKSByZXR1cm4gbm9kZS52YWx1ZTtcbiAgICByZXR1cm4gXCJcIjtcbiAgfSxcbiAgbm9kZVRvU3RyaW5nKG5vZGUpIHtcbiAgICBpZiAodHlwZW9mIG5vZGUgPT09IFwic3RyaW5nXCIpIHJldHVybiBub2RlO1xuICAgIGlmIChpc09iamVjdChub2RlKSAmJiBoYXNQcm9wKG5vZGUsIFwibGFiZWxcIikpIHJldHVybiBub2RlLmxhYmVsO1xuICAgIHJldHVybiBmYWxsYmFjazIubm9kZVRvVmFsdWUobm9kZSk7XG4gIH0sXG4gIGlzTm9kZURpc2FibGVkKG5vZGUpIHtcbiAgICBpZiAoaXNPYmplY3Qobm9kZSkgJiYgaGFzUHJvcChub2RlLCBcImRpc2FibGVkXCIpKSByZXR1cm4gISFub2RlLmRpc2FibGVkO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfSxcbiAgbm9kZVRvQ2hpbGRyZW4obm9kZSkge1xuICAgIHJldHVybiBub2RlLmNoaWxkcmVuO1xuICB9LFxuICBub2RlVG9DaGlsZHJlbkNvdW50KG5vZGUpIHtcbiAgICBpZiAoaXNPYmplY3Qobm9kZSkgJiYgaGFzUHJvcChub2RlLCBcImNoaWxkcmVuQ291bnRcIikpIHJldHVybiBub2RlLmNoaWxkcmVuQ291bnQ7XG4gIH1cbn07XG52YXIgU2VsZWN0aW9uID0gY2xhc3MgX1NlbGVjdGlvbiBleHRlbmRzIFNldCB7XG4gIGNvbnN0cnVjdG9yKHZhbHVlcyA9IFtdKSB7XG4gICAgc3VwZXIodmFsdWVzKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwic2VsZWN0aW9uTW9kZVwiLCBcInNpbmdsZVwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZGVzZWxlY3RhYmxlXCIsIHRydWUpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJjb3B5XCIsICgpID0+IHtcbiAgICAgIGNvbnN0IGNsb25lID0gbmV3IF9TZWxlY3Rpb24oWy4uLnRoaXNdKTtcbiAgICAgIHJldHVybiB0aGlzLnN5bmMoY2xvbmUpO1xuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJzeW5jXCIsIChvdGhlcikgPT4ge1xuICAgICAgb3RoZXIuc2VsZWN0aW9uTW9kZSA9IHRoaXMuc2VsZWN0aW9uTW9kZTtcbiAgICAgIG90aGVyLmRlc2VsZWN0YWJsZSA9IHRoaXMuZGVzZWxlY3RhYmxlO1xuICAgICAgcmV0dXJuIG90aGVyO1xuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJpc0VtcHR5XCIsICgpID0+IHtcbiAgICAgIHJldHVybiB0aGlzLnNpemUgPT09IDA7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImlzU2VsZWN0ZWRcIiwgKHZhbHVlKSA9PiB7XG4gICAgICBpZiAodGhpcy5zZWxlY3Rpb25Nb2RlID09PSBcIm5vbmVcIiB8fCB2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0aGlzLmhhcyh2YWx1ZSk7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImNhblNlbGVjdFwiLCAoY29sbGVjdGlvbiwgdmFsdWUpID0+IHtcbiAgICAgIHJldHVybiB0aGlzLnNlbGVjdGlvbk1vZGUgIT09IFwibm9uZVwiIHx8ICFjb2xsZWN0aW9uLmdldEl0ZW1EaXNhYmxlZChjb2xsZWN0aW9uLmZpbmQodmFsdWUpKTtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZmlyc3RTZWxlY3RlZFZhbHVlXCIsIChjb2xsZWN0aW9uKSA9PiB7XG4gICAgICBsZXQgZmlyc3RWYWx1ZSA9IG51bGw7XG4gICAgICBmb3IgKGxldCB2YWx1ZSBvZiB0aGlzKSB7XG4gICAgICAgIGlmICghZmlyc3RWYWx1ZSB8fCBjb2xsZWN0aW9uLmNvbXBhcmVWYWx1ZSh2YWx1ZSwgZmlyc3RWYWx1ZSkgPCAwKSB7XG4gICAgICAgICAgZmlyc3RWYWx1ZSA9IHZhbHVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gZmlyc3RWYWx1ZTtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwibGFzdFNlbGVjdGVkVmFsdWVcIiwgKGNvbGxlY3Rpb24pID0+IHtcbiAgICAgIGxldCBsYXN0VmFsdWUgPSBudWxsO1xuICAgICAgZm9yIChsZXQgdmFsdWUgb2YgdGhpcykge1xuICAgICAgICBpZiAoIWxhc3RWYWx1ZSB8fCBjb2xsZWN0aW9uLmNvbXBhcmVWYWx1ZSh2YWx1ZSwgbGFzdFZhbHVlKSA+IDApIHtcbiAgICAgICAgICBsYXN0VmFsdWUgPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIGxhc3RWYWx1ZTtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZXh0ZW5kU2VsZWN0aW9uXCIsIChjb2xsZWN0aW9uLCBhbmNob3JWYWx1ZSwgdGFyZ2V0VmFsdWUpID0+IHtcbiAgICAgIGlmICh0aGlzLnNlbGVjdGlvbk1vZGUgPT09IFwibm9uZVwiKSB7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgfVxuICAgICAgaWYgKHRoaXMuc2VsZWN0aW9uTW9kZSA9PT0gXCJzaW5nbGVcIikge1xuICAgICAgICByZXR1cm4gdGhpcy5yZXBsYWNlU2VsZWN0aW9uKGNvbGxlY3Rpb24sIHRhcmdldFZhbHVlKTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IHNlbGVjdGlvbiA9IHRoaXMuY29weSgpO1xuICAgICAgY29uc3QgbGFzdFNlbGVjdGVkID0gQXJyYXkuZnJvbSh0aGlzKS5wb3AoKTtcbiAgICAgIGZvciAobGV0IGtleSBvZiBjb2xsZWN0aW9uLmdldFZhbHVlUmFuZ2UoYW5jaG9yVmFsdWUsIGxhc3RTZWxlY3RlZCA/PyB0YXJnZXRWYWx1ZSkpIHtcbiAgICAgICAgc2VsZWN0aW9uLmRlbGV0ZShrZXkpO1xuICAgICAgfVxuICAgICAgZm9yIChsZXQga2V5IG9mIGNvbGxlY3Rpb24uZ2V0VmFsdWVSYW5nZSh0YXJnZXRWYWx1ZSwgYW5jaG9yVmFsdWUpKSB7XG4gICAgICAgIGlmICh0aGlzLmNhblNlbGVjdChjb2xsZWN0aW9uLCBrZXkpKSB7XG4gICAgICAgICAgc2VsZWN0aW9uLmFkZChrZXkpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gc2VsZWN0aW9uO1xuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJ0b2dnbGVTZWxlY3Rpb25cIiwgKGNvbGxlY3Rpb24sIHZhbHVlKSA9PiB7XG4gICAgICBpZiAodGhpcy5zZWxlY3Rpb25Nb2RlID09PSBcIm5vbmVcIikge1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgIH1cbiAgICAgIGlmICh0aGlzLnNlbGVjdGlvbk1vZGUgPT09IFwic2luZ2xlXCIgJiYgIXRoaXMuaXNTZWxlY3RlZCh2YWx1ZSkpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucmVwbGFjZVNlbGVjdGlvbihjb2xsZWN0aW9uLCB2YWx1ZSk7XG4gICAgICB9XG4gICAgICBjb25zdCBzZWxlY3Rpb24gPSB0aGlzLmNvcHkoKTtcbiAgICAgIGlmIChzZWxlY3Rpb24uaGFzKHZhbHVlKSkge1xuICAgICAgICBzZWxlY3Rpb24uZGVsZXRlKHZhbHVlKTtcbiAgICAgIH0gZWxzZSBpZiAoc2VsZWN0aW9uLmNhblNlbGVjdChjb2xsZWN0aW9uLCB2YWx1ZSkpIHtcbiAgICAgICAgc2VsZWN0aW9uLmFkZCh2YWx1ZSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gc2VsZWN0aW9uO1xuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJyZXBsYWNlU2VsZWN0aW9uXCIsIChjb2xsZWN0aW9uLCB2YWx1ZSkgPT4ge1xuICAgICAgaWYgKHRoaXMuc2VsZWN0aW9uTW9kZSA9PT0gXCJub25lXCIpIHtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICB9XG4gICAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgIH1cbiAgICAgIGlmICghdGhpcy5jYW5TZWxlY3QoY29sbGVjdGlvbiwgdmFsdWUpKSB7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgfVxuICAgICAgY29uc3Qgc2VsZWN0aW9uID0gbmV3IF9TZWxlY3Rpb24oW3ZhbHVlXSk7XG4gICAgICByZXR1cm4gdGhpcy5zeW5jKHNlbGVjdGlvbik7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInNldFNlbGVjdGlvblwiLCAodmFsdWVzKSA9PiB7XG4gICAgICBpZiAodGhpcy5zZWxlY3Rpb25Nb2RlID09PSBcIm5vbmVcIikge1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgIH1cbiAgICAgIGxldCBzZWxlY3Rpb24gPSBuZXcgX1NlbGVjdGlvbigpO1xuICAgICAgZm9yIChsZXQgdmFsdWUgb2YgdmFsdWVzKSB7XG4gICAgICAgIGlmICh2YWx1ZSAhPSBudWxsKSB7XG4gICAgICAgICAgc2VsZWN0aW9uLmFkZCh2YWx1ZSk7XG4gICAgICAgICAgaWYgKHRoaXMuc2VsZWN0aW9uTW9kZSA9PT0gXCJzaW5nbGVcIikge1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcy5zeW5jKHNlbGVjdGlvbik7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImNsZWFyU2VsZWN0aW9uXCIsICgpID0+IHtcbiAgICAgIGNvbnN0IHNlbGVjdGlvbiA9IHRoaXMuY29weSgpO1xuICAgICAgaWYgKHNlbGVjdGlvbi5kZXNlbGVjdGFibGUgJiYgc2VsZWN0aW9uLnNpemUgPiAwKSB7XG4gICAgICAgIHNlbGVjdGlvbi5jbGVhcigpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHNlbGVjdGlvbjtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwic2VsZWN0XCIsIChjb2xsZWN0aW9uLCB2YWx1ZSwgZm9yY2VUb2dnbGUpID0+IHtcbiAgICAgIGlmICh0aGlzLnNlbGVjdGlvbk1vZGUgPT09IFwibm9uZVwiKSB7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgfVxuICAgICAgaWYgKHRoaXMuc2VsZWN0aW9uTW9kZSA9PT0gXCJzaW5nbGVcIikge1xuICAgICAgICBpZiAodGhpcy5pc1NlbGVjdGVkKHZhbHVlKSAmJiB0aGlzLmRlc2VsZWN0YWJsZSkge1xuICAgICAgICAgIHJldHVybiB0aGlzLnRvZ2dsZVNlbGVjdGlvbihjb2xsZWN0aW9uLCB2YWx1ZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMucmVwbGFjZVNlbGVjdGlvbihjb2xsZWN0aW9uLCB2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAodGhpcy5zZWxlY3Rpb25Nb2RlID09PSBcIm11bHRpcGxlXCIgfHwgZm9yY2VUb2dnbGUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudG9nZ2xlU2VsZWN0aW9uKGNvbGxlY3Rpb24sIHZhbHVlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB0aGlzLnJlcGxhY2VTZWxlY3Rpb24oY29sbGVjdGlvbiwgdmFsdWUpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJkZXNlbGVjdFwiLCAodmFsdWUpID0+IHtcbiAgICAgIGNvbnN0IHNlbGVjdGlvbiA9IHRoaXMuY29weSgpO1xuICAgICAgc2VsZWN0aW9uLmRlbGV0ZSh2YWx1ZSk7XG4gICAgICByZXR1cm4gc2VsZWN0aW9uO1xuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJpc0VxdWFsXCIsIChvdGhlcikgPT4ge1xuICAgICAgcmV0dXJuIGlzRXF1YWwoQXJyYXkuZnJvbSh0aGlzKSwgQXJyYXkuZnJvbShvdGhlcikpO1xuICAgIH0pO1xuICB9XG59O1xuXG5leHBvcnQgeyBHcmlkQ29sbGVjdGlvbiwgTGlzdENvbGxlY3Rpb24sIFNlbGVjdGlvbiwgVHJlZUNvbGxlY3Rpb24sIGZpbGVQYXRoVG9UcmVlLCBmbGF0dGVuZWRUb1RyZWUsIGlzR3JpZENvbGxlY3Rpb24sIGlzTGlzdENvbGxlY3Rpb24gfTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/collection/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/color-picker/dist/index.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/@zag-js/color-picker/dist/index.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   areaProps: () => (/* binding */ areaProps),\n/* harmony export */   channelProps: () => (/* binding */ channelProps),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   parse: () => (/* binding */ parse),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitAreaProps: () => (/* binding */ splitAreaProps),\n/* harmony export */   splitChannelProps: () => (/* binding */ splitChannelProps),\n/* harmony export */   splitProps: () => (/* binding */ splitProps),\n/* harmony export */   splitSwatchProps: () => (/* binding */ splitSwatchProps),\n/* harmony export */   splitSwatchTriggerProps: () => (/* binding */ splitSwatchTriggerProps),\n/* harmony export */   splitTransparencyGridProps: () => (/* binding */ splitTransparencyGridProps),\n/* harmony export */   swatchProps: () => (/* binding */ swatchProps),\n/* harmony export */   swatchTriggerProps: () => (/* binding */ swatchTriggerProps),\n/* harmony export */   transparencyGridProps: () => (/* binding */ transparencyGridProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/color-utils */ \"(ssr)/./node_modules/@zag-js/color-utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_popper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/popper */ \"(ssr)/./node_modules/@zag-js/popper/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_dismissable__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/dismissable */ \"(ssr)/./node_modules/@zag-js/dismissable/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n\n\n// src/color-picker.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"color-picker\", [\n  \"root\",\n  \"label\",\n  \"control\",\n  \"trigger\",\n  \"positioner\",\n  \"content\",\n  \"area\",\n  \"areaThumb\",\n  \"valueText\",\n  \"areaBackground\",\n  \"channelSlider\",\n  \"channelSliderLabel\",\n  \"channelSliderTrack\",\n  \"channelSliderThumb\",\n  \"channelSliderValueText\",\n  \"channelInput\",\n  \"transparencyGrid\",\n  \"swatchGroup\",\n  \"swatchTrigger\",\n  \"swatchIndicator\",\n  \"swatch\",\n  \"eyeDropperTrigger\",\n  \"formatTrigger\",\n  \"formatSelect\"\n]);\nvar parts = anatomy.build();\nvar getRootId = (ctx) => ctx.ids?.root ?? `color-picker:${ctx.id}`;\nvar getLabelId = (ctx) => ctx.ids?.label ?? `color-picker:${ctx.id}:label`;\nvar getHiddenInputId = (ctx) => ctx.ids?.hiddenInput ?? `color-picker:${ctx.id}:hidden-input`;\nvar getControlId = (ctx) => ctx.ids?.control ?? `color-picker:${ctx.id}:control`;\nvar getTriggerId = (ctx) => ctx.ids?.trigger ?? `color-picker:${ctx.id}:trigger`;\nvar getContentId = (ctx) => ctx.ids?.content ?? `color-picker:${ctx.id}:content`;\nvar getPositionerId = (ctx) => ctx.ids?.positioner ?? `color-picker:${ctx.id}:positioner`;\nvar getFormatSelectId = (ctx) => ctx.ids?.formatSelect ?? `color-picker:${ctx.id}:format-select`;\nvar getAreaId = (ctx) => ctx.ids?.area ?? `color-picker:${ctx.id}:area`;\nvar getAreaGradientId = (ctx) => ctx.ids?.areaGradient ?? `color-picker:${ctx.id}:area-gradient`;\nvar getAreaThumbId = (ctx) => ctx.ids?.areaThumb ?? `color-picker:${ctx.id}:area-thumb`;\nvar getChannelSliderTrackId = (ctx, channel) => ctx.ids?.channelSliderTrack?.(channel) ?? `color-picker:${ctx.id}:slider-track:${channel}`;\nvar getChannelSliderThumbId = (ctx, channel) => ctx.ids?.channelSliderThumb?.(channel) ?? `color-picker:${ctx.id}:slider-thumb:${channel}`;\nvar getContentEl = (ctx) => ctx.getById(getContentId(ctx));\nvar getAreaThumbEl = (ctx) => ctx.getById(getAreaThumbId(ctx));\nvar getChannelSliderThumbEl = (ctx, channel) => ctx.getById(getChannelSliderThumbId(ctx, channel));\nvar getFormatSelectEl = (ctx) => ctx.getById(getFormatSelectId(ctx));\nvar getHiddenInputEl = (ctx) => ctx.getById(getHiddenInputId(ctx));\nvar getAreaEl = (ctx) => ctx.getById(getAreaId(ctx));\nvar getAreaValueFromPoint = (ctx, point) => {\n  const areaEl = getAreaEl(ctx);\n  if (!areaEl) return;\n  const { percent } = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getRelativePoint)(point, areaEl);\n  return percent;\n};\nvar getControlEl = (ctx) => ctx.getById(getControlId(ctx));\nvar getTriggerEl = (ctx) => ctx.getById(getTriggerId(ctx));\nvar getPositionerEl = (ctx) => ctx.getById(getPositionerId(ctx));\nvar getChannelSliderTrackEl = (ctx, channel) => ctx.getById(getChannelSliderTrackId(ctx, channel));\nvar getChannelSliderValueFromPoint = (ctx, point, channel) => {\n  const trackEl = getChannelSliderTrackEl(ctx, channel);\n  if (!trackEl) return;\n  const { percent } = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getRelativePoint)(point, trackEl);\n  return percent;\n};\nvar getChannelInputEls = (ctx) => {\n  return [\n    ...(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.queryAll)(getContentEl(ctx), \"input[data-channel]\"),\n    ...(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.queryAll)(getControlEl(ctx), \"input[data-channel]\")\n  ];\n};\nfunction getChannelDisplayColor(color, channel) {\n  switch (channel) {\n    case \"hue\":\n      return (0,_zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__.parseColor)(`hsl(${color.getChannelValue(\"hue\")}, 100%, 50%)`);\n    case \"lightness\":\n    case \"brightness\":\n    case \"saturation\":\n    case \"red\":\n    case \"green\":\n    case \"blue\":\n      return color.withChannelValue(\"alpha\", 1);\n    case \"alpha\": {\n      return color;\n    }\n    default:\n      throw new Error(\"Unknown color channel: \" + channel);\n  }\n}\nfunction getChannelValue(color, channel) {\n  if (channel == null) return \"\";\n  if (channel === \"hex\") {\n    return color.toString(\"hex\");\n  }\n  if (channel === \"css\") {\n    return color.toString(\"css\");\n  }\n  if (channel in color) {\n    return color.getChannelValue(channel).toString();\n  }\n  const isHSL = color.getFormat() === \"hsla\";\n  switch (channel) {\n    case \"hue\":\n      return isHSL ? color.toFormat(\"hsla\").getChannelValue(\"hue\").toString() : color.toFormat(\"hsba\").getChannelValue(\"hue\").toString();\n    case \"saturation\":\n      return isHSL ? color.toFormat(\"hsla\").getChannelValue(\"saturation\").toString() : color.toFormat(\"hsba\").getChannelValue(\"saturation\").toString();\n    case \"lightness\":\n      return color.toFormat(\"hsla\").getChannelValue(\"lightness\").toString();\n    case \"brightness\":\n      return color.toFormat(\"hsba\").getChannelValue(\"brightness\").toString();\n    case \"red\":\n    case \"green\":\n    case \"blue\":\n      return color.toFormat(\"rgba\").getChannelValue(channel).toString();\n    default:\n      return color.getChannelValue(channel).toString();\n  }\n}\nfunction getChannelRange(color, channel) {\n  switch (channel) {\n    case \"hex\":\n      const minColor = (0,_zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__.parseColor)(\"#000000\");\n      const maxColor = (0,_zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__.parseColor)(\"#FFFFFF\");\n      return {\n        minValue: minColor.toHexInt(),\n        maxValue: maxColor.toHexInt(),\n        pageSize: 10,\n        step: 1\n      };\n    case \"css\":\n      return void 0;\n    case \"hue\":\n    case \"saturation\":\n    case \"lightness\":\n      return color.toFormat(\"hsla\").getChannelRange(channel);\n    case \"brightness\":\n      return color.toFormat(\"hsba\").getChannelRange(channel);\n    case \"red\":\n    case \"green\":\n    case \"blue\":\n      return color.toFormat(\"rgba\").getChannelRange(channel);\n    default:\n      return color.getChannelRange(channel);\n  }\n}\n\n// src/utils/get-slider-background.ts\nfunction getSliderBackgroundDirection(orientation, dir) {\n  if (orientation === \"vertical\") {\n    return \"top\";\n  } else if (dir === \"ltr\") {\n    return \"right\";\n  } else {\n    return \"left\";\n  }\n}\nvar getSliderBackground = (props2) => {\n  const { channel, value, dir, orientation } = props2;\n  const bgDirection = getSliderBackgroundDirection(orientation, dir);\n  const { minValue, maxValue } = value.getChannelRange(channel);\n  switch (channel) {\n    case \"hue\":\n      return `linear-gradient(to ${bgDirection}, rgb(255, 0, 0) 0%, rgb(255, 255, 0) 17%, rgb(0, 255, 0) 33%, rgb(0, 255, 255) 50%, rgb(0, 0, 255) 67%, rgb(255, 0, 255) 83%, rgb(255, 0, 0) 100%)`;\n    case \"lightness\": {\n      let start = value.withChannelValue(channel, minValue).toString(\"css\");\n      let middle = value.withChannelValue(channel, (maxValue - minValue) / 2).toString(\"css\");\n      let end = value.withChannelValue(channel, maxValue).toString(\"css\");\n      return `linear-gradient(to ${bgDirection}, ${start}, ${middle}, ${end})`;\n    }\n    case \"saturation\":\n    case \"brightness\":\n    case \"red\":\n    case \"green\":\n    case \"blue\":\n    case \"alpha\": {\n      let start = value.withChannelValue(channel, minValue).toString(\"css\");\n      let end = value.withChannelValue(channel, maxValue).toString(\"css\");\n      return `linear-gradient(to ${bgDirection}, ${start}, ${end})`;\n    }\n    default:\n      throw new Error(\"Unknown color channel: \" + channel);\n  }\n};\n\n// src/color-picker.connect.ts\nfunction connect(service, normalize) {\n  const { context, send, prop, computed, state, scope } = service;\n  const value = context.get(\"value\");\n  const format = context.get(\"format\");\n  const areaValue = computed(\"areaValue\");\n  const valueAsString = computed(\"valueAsString\");\n  const disabled = computed(\"disabled\");\n  const interactive = computed(\"interactive\");\n  const dragging = state.hasTag(\"dragging\");\n  const open = state.hasTag(\"open\");\n  const focused = state.hasTag(\"focused\");\n  const getAreaChannels = (props2) => {\n    const channels = areaValue.getChannels();\n    return {\n      xChannel: props2.xChannel ?? channels[1],\n      yChannel: props2.yChannel ?? channels[2]\n    };\n  };\n  const currentPlacement = context.get(\"currentPlacement\");\n  const popperStyles = (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacementStyles)({\n    ...prop(\"positioning\"),\n    placement: currentPlacement\n  });\n  function getSwatchTriggerState(props2) {\n    const color = (0,_zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__.normalizeColor)(props2.value).toFormat(context.get(\"format\"));\n    return {\n      value: color,\n      valueAsString: color.toString(\"hex\"),\n      checked: color.isEqual(value),\n      disabled: props2.disabled || !interactive\n    };\n  }\n  return {\n    dragging,\n    open,\n    valueAsString,\n    value,\n    setOpen(nextOpen) {\n      const open2 = state.hasTag(\"open\");\n      if (open2 === nextOpen) return;\n      send({ type: nextOpen ? \"OPEN\" : \"CLOSE\" });\n    },\n    setValue(value2) {\n      send({ type: \"VALUE.SET\", value: (0,_zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__.normalizeColor)(value2), src: \"set-color\" });\n    },\n    getChannelValue(channel) {\n      return getChannelValue(value, channel);\n    },\n    getChannelValueText(channel, locale) {\n      return value.formatChannelValue(channel, locale);\n    },\n    setChannelValue(channel, channelValue) {\n      const color = value.withChannelValue(channel, channelValue);\n      send({ type: \"VALUE.SET\", value: color, src: \"set-channel\" });\n    },\n    format: context.get(\"format\"),\n    setFormat(format2) {\n      const formatValue = value.toFormat(format2);\n      send({ type: \"VALUE.SET\", value: formatValue, src: \"set-format\" });\n    },\n    alpha: value.getChannelValue(\"alpha\"),\n    setAlpha(alphaValue) {\n      const color = value.withChannelValue(\"alpha\", alphaValue);\n      send({ type: \"VALUE.SET\", value: color, src: \"set-alpha\" });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        dir: prop(\"dir\"),\n        id: getRootId(scope),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"readOnly\")),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"invalid\")),\n        style: {\n          \"--value\": value.toString(\"css\")\n        }\n      });\n    },\n    getLabelProps() {\n      return normalize.element({\n        ...parts.label.attrs,\n        dir: prop(\"dir\"),\n        id: getLabelId(scope),\n        htmlFor: getHiddenInputId(scope),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"readOnly\")),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"invalid\")),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n        onClick(event) {\n          event.preventDefault();\n          const inputEl = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.query)(getControlEl(scope), \"[data-channel=hex]\");\n          inputEl?.focus({ preventScroll: true });\n        }\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        id: getControlId(scope),\n        dir: prop(\"dir\"),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"readOnly\")),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"invalid\")),\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused)\n      });\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...parts.trigger.attrs,\n        id: getTriggerId(scope),\n        dir: prop(\"dir\"),\n        disabled,\n        \"aria-label\": `select color. current color is ${valueAsString}`,\n        \"aria-controls\": getContentId(scope),\n        \"aria-labelledby\": getLabelId(scope),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"readOnly\")),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"invalid\")),\n        \"data-placement\": currentPlacement,\n        \"aria-expanded\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(open),\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n        type: \"button\",\n        onClick() {\n          if (!interactive) return;\n          send({ type: \"TRIGGER.CLICK\" });\n        },\n        onBlur() {\n          if (!interactive) return;\n          send({ type: \"TRIGGER.BLUR\" });\n        },\n        style: {\n          position: \"relative\"\n        }\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        ...parts.positioner.attrs,\n        id: getPositionerId(scope),\n        dir: prop(\"dir\"),\n        style: popperStyles.floating\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        id: getContentId(scope),\n        dir: prop(\"dir\"),\n        tabIndex: -1,\n        \"data-placement\": currentPlacement,\n        \"data-state\": open ? \"open\" : \"closed\",\n        hidden: !open\n      });\n    },\n    getValueTextProps() {\n      return normalize.element({\n        ...parts.valueText.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused)\n      });\n    },\n    getAreaProps(props2 = {}) {\n      const { xChannel, yChannel } = getAreaChannels(props2);\n      const { areaStyles } = (0,_zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__.getColorAreaGradient)(areaValue, {\n        xChannel,\n        yChannel,\n        dir: prop(\"dir\")\n      });\n      return normalize.element({\n        ...parts.area.attrs,\n        id: getAreaId(scope),\n        role: \"group\",\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"invalid\")),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"readOnly\")),\n        onPointerDown(event) {\n          if (!interactive) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isLeftClick)(event)) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isModifierKey)(event)) return;\n          const point = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventPoint)(event);\n          const channel = { xChannel, yChannel };\n          send({ type: \"AREA.POINTER_DOWN\", point, channel, id: \"area\" });\n          event.preventDefault();\n        },\n        style: {\n          position: \"relative\",\n          touchAction: \"none\",\n          forcedColorAdjust: \"none\",\n          ...areaStyles\n        }\n      });\n    },\n    getAreaBackgroundProps(props2 = {}) {\n      const { xChannel, yChannel } = getAreaChannels(props2);\n      const { areaGradientStyles } = (0,_zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__.getColorAreaGradient)(areaValue, {\n        xChannel,\n        yChannel,\n        dir: prop(\"dir\")\n      });\n      return normalize.element({\n        ...parts.areaBackground.attrs,\n        id: getAreaGradientId(scope),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"invalid\")),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"readOnly\")),\n        style: {\n          position: \"relative\",\n          touchAction: \"none\",\n          forcedColorAdjust: \"none\",\n          ...areaGradientStyles\n        }\n      });\n    },\n    getAreaThumbProps(props2 = {}) {\n      const { xChannel, yChannel } = getAreaChannels(props2);\n      const channel = { xChannel, yChannel };\n      const xPercent = areaValue.getChannelValuePercent(xChannel);\n      const yPercent = 1 - areaValue.getChannelValuePercent(yChannel);\n      const xValue = areaValue.getChannelValue(xChannel);\n      const yValue = areaValue.getChannelValue(yChannel);\n      const color = areaValue.withChannelValue(\"alpha\", 1).toString(\"css\");\n      return normalize.element({\n        ...parts.areaThumb.attrs,\n        id: getAreaThumbId(scope),\n        dir: prop(\"dir\"),\n        tabIndex: disabled ? void 0 : 0,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"invalid\")),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"readOnly\")),\n        role: \"slider\",\n        \"aria-valuemin\": 0,\n        \"aria-valuemax\": 100,\n        \"aria-valuenow\": xValue,\n        \"aria-label\": `${xChannel} and ${yChannel}`,\n        \"aria-roledescription\": \"2d slider\",\n        \"aria-valuetext\": `${xChannel} ${xValue}, ${yChannel} ${yValue}`,\n        style: {\n          position: \"absolute\",\n          left: `${xPercent * 100}%`,\n          top: `${yPercent * 100}%`,\n          transform: \"translate(-50%, -50%)\",\n          touchAction: \"none\",\n          forcedColorAdjust: \"none\",\n          \"--color\": color,\n          background: color\n        },\n        onFocus() {\n          if (!interactive) return;\n          send({ type: \"AREA.FOCUS\", id: \"area\", channel });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          const step = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventStep)(event);\n          const keyMap = {\n            ArrowUp() {\n              send({ type: \"AREA.ARROW_UP\", channel, step });\n            },\n            ArrowDown() {\n              send({ type: \"AREA.ARROW_DOWN\", channel, step });\n            },\n            ArrowLeft() {\n              send({ type: \"AREA.ARROW_LEFT\", channel, step });\n            },\n            ArrowRight() {\n              send({ type: \"AREA.ARROW_RIGHT\", channel, step });\n            },\n            PageUp() {\n              send({ type: \"AREA.PAGE_UP\", channel, step });\n            },\n            PageDown() {\n              send({ type: \"AREA.PAGE_DOWN\", channel, step });\n            },\n            Escape(event2) {\n              event2.stopPropagation();\n            }\n          };\n          const exec = keyMap[(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventKey)(event, {\n            dir: prop(\"dir\")\n          })];\n          if (exec) {\n            exec(event);\n            event.preventDefault();\n          }\n        }\n      });\n    },\n    getTransparencyGridProps(props2 = {}) {\n      const { size = \"12px\" } = props2;\n      return normalize.element({\n        ...parts.transparencyGrid.attrs,\n        style: {\n          \"--size\": size,\n          width: \"100%\",\n          height: \"100%\",\n          position: \"absolute\",\n          backgroundColor: \"#fff\",\n          backgroundImage: \"conic-gradient(#eeeeee 0 25%, transparent 0 50%, #eeeeee 0 75%, transparent 0)\",\n          backgroundSize: \"var(--size) var(--size)\",\n          inset: \"0px\",\n          zIndex: \"auto\",\n          pointerEvents: \"none\"\n        }\n      });\n    },\n    getChannelSliderProps(props2) {\n      const { orientation = \"horizontal\", channel, format: format2 } = props2;\n      return normalize.element({\n        ...parts.channelSlider.attrs,\n        \"data-channel\": channel,\n        \"data-orientation\": orientation,\n        role: \"presentation\",\n        onPointerDown(event) {\n          if (!interactive) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isLeftClick)(event)) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isModifierKey)(event)) return;\n          const point = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventPoint)(event);\n          send({ type: \"CHANNEL_SLIDER.POINTER_DOWN\", channel, format: format2, point, id: channel, orientation });\n          event.preventDefault();\n        },\n        style: {\n          position: \"relative\",\n          touchAction: \"none\"\n        }\n      });\n    },\n    getChannelSliderTrackProps(props2) {\n      const { orientation = \"horizontal\", channel, format: format2 } = props2;\n      const normalizedValue = format2 ? value.toFormat(format2) : areaValue;\n      return normalize.element({\n        ...parts.channelSliderTrack.attrs,\n        id: getChannelSliderTrackId(scope, channel),\n        role: \"group\",\n        \"data-channel\": channel,\n        \"data-orientation\": orientation,\n        style: {\n          position: \"relative\",\n          forcedColorAdjust: \"none\",\n          backgroundImage: getSliderBackground({\n            orientation,\n            channel,\n            dir: prop(\"dir\"),\n            value: normalizedValue\n          })\n        }\n      });\n    },\n    getChannelSliderLabelProps(props2) {\n      const { channel } = props2;\n      return normalize.element({\n        ...parts.channelSliderLabel.attrs,\n        \"data-channel\": channel,\n        onClick(event) {\n          if (!interactive) return;\n          event.preventDefault();\n          const thumbId = getChannelSliderThumbId(scope, channel);\n          scope.getById(thumbId)?.focus({ preventScroll: true });\n        },\n        style: {\n          userSelect: \"none\",\n          WebkitUserSelect: \"none\"\n        }\n      });\n    },\n    getChannelSliderValueTextProps(props2) {\n      return normalize.element({\n        ...parts.channelSliderValueText.attrs,\n        \"data-channel\": props2.channel\n      });\n    },\n    getChannelSliderThumbProps(props2) {\n      const { orientation = \"horizontal\", channel, format: format2 } = props2;\n      const normalizedValue = format2 ? value.toFormat(format2) : areaValue;\n      const channelRange = normalizedValue.getChannelRange(channel);\n      const channelValue = normalizedValue.getChannelValue(channel);\n      const offset = (channelValue - channelRange.minValue) / (channelRange.maxValue - channelRange.minValue);\n      const placementStyles = orientation === \"horizontal\" ? { left: `${offset * 100}%`, top: \"50%\" } : { top: `${offset * 100}%`, left: \"50%\" };\n      return normalize.element({\n        ...parts.channelSliderThumb.attrs,\n        id: getChannelSliderThumbId(scope, channel),\n        role: \"slider\",\n        \"aria-label\": channel,\n        tabIndex: disabled ? void 0 : 0,\n        \"data-channel\": channel,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-orientation\": orientation,\n        \"aria-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"aria-orientation\": orientation,\n        \"aria-valuemax\": channelRange.maxValue,\n        \"aria-valuemin\": channelRange.minValue,\n        \"aria-valuenow\": channelValue,\n        \"aria-valuetext\": `${channel} ${channelValue}`,\n        style: {\n          forcedColorAdjust: \"none\",\n          position: \"absolute\",\n          background: getChannelDisplayColor(areaValue, channel).toString(\"css\"),\n          ...placementStyles\n        },\n        onFocus() {\n          if (!interactive) return;\n          send({ type: \"CHANNEL_SLIDER.FOCUS\", channel });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          const step = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventStep)(event) * channelRange.step;\n          const keyMap = {\n            ArrowUp() {\n              send({ type: \"CHANNEL_SLIDER.ARROW_UP\", channel, step });\n            },\n            ArrowDown() {\n              send({ type: \"CHANNEL_SLIDER.ARROW_DOWN\", channel, step });\n            },\n            ArrowLeft() {\n              send({ type: \"CHANNEL_SLIDER.ARROW_LEFT\", channel, step });\n            },\n            ArrowRight() {\n              send({ type: \"CHANNEL_SLIDER.ARROW_RIGHT\", channel, step });\n            },\n            PageUp() {\n              send({ type: \"CHANNEL_SLIDER.PAGE_UP\", channel });\n            },\n            PageDown() {\n              send({ type: \"CHANNEL_SLIDER.PAGE_DOWN\", channel });\n            },\n            Home() {\n              send({ type: \"CHANNEL_SLIDER.HOME\", channel });\n            },\n            End() {\n              send({ type: \"CHANNEL_SLIDER.END\", channel });\n            },\n            Escape(event2) {\n              event2.stopPropagation();\n            }\n          };\n          const exec = keyMap[(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventKey)(event, {\n            dir: prop(\"dir\")\n          })];\n          if (exec) {\n            exec(event);\n            event.preventDefault();\n          }\n        }\n      });\n    },\n    getChannelInputProps(props2) {\n      const { channel } = props2;\n      const isTextField = channel === \"hex\" || channel === \"css\";\n      const channelRange = getChannelRange(value, channel);\n      return normalize.input({\n        ...parts.channelInput.attrs,\n        dir: prop(\"dir\"),\n        type: isTextField ? \"text\" : \"number\",\n        \"data-channel\": channel,\n        \"aria-label\": channel,\n        spellCheck: false,\n        autoComplete: \"off\",\n        disabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"invalid\")),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"readOnly\")),\n        readOnly: prop(\"readOnly\"),\n        defaultValue: getChannelValue(value, channel),\n        min: channelRange?.minValue,\n        max: channelRange?.maxValue,\n        step: channelRange?.step,\n        onBeforeInput(event) {\n          if (isTextField || !interactive) return;\n          const value2 = event.currentTarget.value;\n          if (value2.match(/[^0-9.]/g)) {\n            event.preventDefault();\n          }\n        },\n        onFocus(event) {\n          if (!interactive) return;\n          send({ type: \"CHANNEL_INPUT.FOCUS\", channel });\n          event.currentTarget.select();\n        },\n        onBlur(event) {\n          if (!interactive) return;\n          const value2 = isTextField ? event.currentTarget.value : event.currentTarget.valueAsNumber;\n          send({ type: \"CHANNEL_INPUT.BLUR\", channel, value: value2, isTextField });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          if (event.key === \"Enter\") {\n            const value2 = isTextField ? event.currentTarget.value : event.currentTarget.valueAsNumber;\n            send({ type: \"CHANNEL_INPUT.CHANGE\", channel, value: value2, isTextField });\n            event.preventDefault();\n          }\n        },\n        style: {\n          appearance: \"none\",\n          WebkitAppearance: \"none\",\n          MozAppearance: \"textfield\"\n        }\n      });\n    },\n    getHiddenInputProps() {\n      return normalize.input({\n        type: \"text\",\n        disabled,\n        name: prop(\"name\"),\n        tabIndex: -1,\n        readOnly: prop(\"readOnly\"),\n        required: prop(\"required\"),\n        id: getHiddenInputId(scope),\n        style: _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.visuallyHiddenStyle,\n        defaultValue: valueAsString\n      });\n    },\n    getEyeDropperTriggerProps() {\n      return normalize.button({\n        ...parts.eyeDropperTrigger.attrs,\n        type: \"button\",\n        dir: prop(\"dir\"),\n        disabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"invalid\")),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"readOnly\")),\n        \"aria-label\": \"Pick a color from the screen\",\n        onClick() {\n          if (!interactive) return;\n          send({ type: \"EYEDROPPER.CLICK\" });\n        }\n      });\n    },\n    getSwatchGroupProps() {\n      return normalize.element({\n        ...parts.swatchGroup.attrs,\n        role: \"group\"\n      });\n    },\n    getSwatchTriggerState,\n    getSwatchTriggerProps(props2) {\n      const swatchState = getSwatchTriggerState(props2);\n      return normalize.button({\n        ...parts.swatchTrigger.attrs,\n        disabled: swatchState.disabled,\n        dir: prop(\"dir\"),\n        type: \"button\",\n        \"aria-label\": `select ${swatchState.valueAsString} as the color`,\n        \"data-state\": swatchState.checked ? \"checked\" : \"unchecked\",\n        \"data-value\": swatchState.valueAsString,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(swatchState.disabled),\n        onClick() {\n          if (swatchState.disabled) return;\n          send({ type: \"SWATCH_TRIGGER.CLICK\", value: swatchState.value });\n        },\n        style: {\n          \"--color\": swatchState.valueAsString,\n          position: \"relative\"\n        }\n      });\n    },\n    getSwatchIndicatorProps(props2) {\n      const swatchState = getSwatchTriggerState(props2);\n      return normalize.element({\n        ...parts.swatchIndicator.attrs,\n        dir: prop(\"dir\"),\n        hidden: !swatchState.checked\n      });\n    },\n    getSwatchProps(props2) {\n      const { respectAlpha = true } = props2;\n      const swatchState = getSwatchTriggerState(props2);\n      const color = swatchState.value.toString(respectAlpha ? \"css\" : \"hex\");\n      return normalize.element({\n        ...parts.swatch.attrs,\n        dir: prop(\"dir\"),\n        \"data-state\": swatchState.checked ? \"checked\" : \"unchecked\",\n        \"data-value\": swatchState.valueAsString,\n        style: {\n          \"--color\": color,\n          position: \"relative\",\n          background: color\n        }\n      });\n    },\n    getFormatTriggerProps() {\n      return normalize.button({\n        ...parts.formatTrigger.attrs,\n        dir: prop(\"dir\"),\n        type: \"button\",\n        \"aria-label\": `change color format to ${getNextFormat(format)}`,\n        onClick(event) {\n          if (event.currentTarget.disabled) return;\n          const nextFormat = getNextFormat(format);\n          send({ type: \"FORMAT.SET\", format: nextFormat, src: \"format-trigger\" });\n        }\n      });\n    },\n    getFormatSelectProps() {\n      return normalize.select({\n        ...parts.formatSelect.attrs,\n        \"aria-label\": \"change color format\",\n        dir: prop(\"dir\"),\n        defaultValue: prop(\"format\"),\n        disabled,\n        onChange(event) {\n          const format2 = assertFormat(event.currentTarget.value);\n          send({ type: \"FORMAT.SET\", format: format2, src: \"format-select\" });\n        }\n      });\n    }\n  };\n}\nvar formats = [\"hsba\", \"hsla\", \"rgba\"];\nvar formatRegex = new RegExp(`^(${formats.join(\"|\")})$`);\nfunction getNextFormat(format) {\n  const index = formats.indexOf(format);\n  return formats[index + 1] ?? formats[0];\n}\nfunction assertFormat(format) {\n  if (formatRegex.test(format)) return format;\n  throw new Error(`Unsupported color format: ${format}`);\n}\nvar parse = (colorString) => {\n  return (0,_zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__.parseColor)(colorString);\n};\n\n// src/color-picker.machine.ts\nvar { and } = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_4__.createGuards)();\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_4__.createMachine)({\n  props({ props: props2 }) {\n    return {\n      dir: \"ltr\",\n      defaultValue: parse(\"#000000\"),\n      defaultFormat: \"rgba\",\n      openAutoFocus: true,\n      ...props2,\n      positioning: {\n        placement: \"bottom\",\n        ...props2.positioning\n      }\n    };\n  },\n  initialState({ prop }) {\n    const open = prop(\"open\") || prop(\"defaultOpen\");\n    return open ? \"open\" : \"idle\";\n  },\n  context({ prop, bindable, getContext }) {\n    return {\n      value: bindable(() => ({\n        defaultValue: prop(\"defaultValue\"),\n        value: prop(\"value\"),\n        isEqual(a, b) {\n          return a.toString(\"css\") === b?.toString(\"css\");\n        },\n        hash(a) {\n          return a.toString(\"css\");\n        },\n        onChange(value) {\n          const ctx = getContext();\n          const valueAsString = value.toString(ctx.get(\"format\"));\n          prop(\"onValueChange\")?.({ value, valueAsString });\n        }\n      })),\n      format: bindable(() => ({\n        defaultValue: prop(\"defaultFormat\"),\n        value: prop(\"format\"),\n        onChange(format) {\n          prop(\"onFormatChange\")?.({ format });\n        }\n      })),\n      activeId: bindable(() => ({ defaultValue: null })),\n      activeChannel: bindable(() => ({ defaultValue: null })),\n      activeOrientation: bindable(() => ({ defaultValue: null })),\n      fieldsetDisabled: bindable(() => ({ defaultValue: false })),\n      restoreFocus: bindable(() => ({ defaultValue: true })),\n      currentPlacement: bindable(() => ({\n        defaultValue: void 0\n      }))\n    };\n  },\n  computed: {\n    rtl: ({ prop }) => prop(\"dir\") === \"rtl\",\n    disabled: ({ prop, context }) => !!prop(\"disabled\") || context.get(\"fieldsetDisabled\"),\n    interactive: ({ prop }) => !(prop(\"disabled\") || prop(\"readOnly\")),\n    valueAsString: ({ context }) => context.get(\"value\").toString(context.get(\"format\")),\n    areaValue: ({ context }) => {\n      const format = context.get(\"format\").startsWith(\"hsl\") ? \"hsla\" : \"hsba\";\n      return context.get(\"value\").toFormat(format);\n    }\n  },\n  effects: [\"trackFormControl\"],\n  watch({ prop, context, action, track }) {\n    track([() => context.hash(\"value\")], () => {\n      action([\"syncInputElements\", \"dispatchChangeEvent\"]);\n    });\n    track([() => context.get(\"format\")], () => {\n      action([\"syncFormatSelectElement\"]);\n    });\n    track([() => prop(\"open\")], () => {\n      action([\"toggleVisibility\"]);\n    });\n  },\n  on: {\n    \"VALUE.SET\": {\n      actions: [\"setValue\"]\n    },\n    \"FORMAT.SET\": {\n      actions: [\"setFormat\"]\n    },\n    \"CHANNEL_INPUT.CHANGE\": {\n      actions: [\"setChannelColorFromInput\"]\n    },\n    \"EYEDROPPER.CLICK\": {\n      actions: [\"openEyeDropper\"]\n    },\n    \"SWATCH_TRIGGER.CLICK\": {\n      actions: [\"setValue\"]\n    }\n  },\n  states: {\n    idle: {\n      tags: [\"closed\"],\n      on: {\n        \"CONTROLLED.OPEN\": {\n          target: \"open\",\n          actions: [\"setInitialFocus\"]\n        },\n        OPEN: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"invokeOnOpen\", \"setInitialFocus\"]\n          }\n        ],\n        \"TRIGGER.CLICK\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"invokeOnOpen\", \"setInitialFocus\"]\n          }\n        ],\n        \"CHANNEL_INPUT.FOCUS\": {\n          target: \"focused\",\n          actions: [\"setActiveChannel\"]\n        }\n      }\n    },\n    focused: {\n      tags: [\"closed\", \"focused\"],\n      on: {\n        \"CONTROLLED.OPEN\": {\n          target: \"open\",\n          actions: [\"setInitialFocus\"]\n        },\n        OPEN: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"invokeOnOpen\", \"setInitialFocus\"]\n          }\n        ],\n        \"TRIGGER.CLICK\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"invokeOnOpen\", \"setInitialFocus\"]\n          }\n        ],\n        \"CHANNEL_INPUT.FOCUS\": {\n          actions: [\"setActiveChannel\"]\n        },\n        \"CHANNEL_INPUT.BLUR\": {\n          target: \"idle\",\n          actions: [\"setChannelColorFromInput\"]\n        },\n        \"TRIGGER.BLUR\": {\n          target: \"idle\"\n        }\n      }\n    },\n    open: {\n      tags: [\"open\"],\n      effects: [\"trackPositioning\", \"trackDismissableElement\"],\n      on: {\n        \"CONTROLLED.CLOSE\": [\n          {\n            guard: \"shouldRestoreFocus\",\n            target: \"focused\",\n            actions: [\"setReturnFocus\"]\n          },\n          {\n            target: \"idle\"\n          }\n        ],\n        \"TRIGGER.CLICK\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"idle\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        \"AREA.POINTER_DOWN\": {\n          target: \"open:dragging\",\n          actions: [\"setActiveChannel\", \"setAreaColorFromPoint\", \"focusAreaThumb\"]\n        },\n        \"AREA.FOCUS\": {\n          actions: [\"setActiveChannel\"]\n        },\n        \"CHANNEL_SLIDER.POINTER_DOWN\": {\n          target: \"open:dragging\",\n          actions: [\"setActiveChannel\", \"setChannelColorFromPoint\", \"focusChannelThumb\"]\n        },\n        \"CHANNEL_SLIDER.FOCUS\": {\n          actions: [\"setActiveChannel\"]\n        },\n        \"AREA.ARROW_LEFT\": {\n          actions: [\"decrementAreaXChannel\"]\n        },\n        \"AREA.ARROW_RIGHT\": {\n          actions: [\"incrementAreaXChannel\"]\n        },\n        \"AREA.ARROW_UP\": {\n          actions: [\"incrementAreaYChannel\"]\n        },\n        \"AREA.ARROW_DOWN\": {\n          actions: [\"decrementAreaYChannel\"]\n        },\n        \"AREA.PAGE_UP\": {\n          actions: [\"incrementAreaXChannel\"]\n        },\n        \"AREA.PAGE_DOWN\": {\n          actions: [\"decrementAreaXChannel\"]\n        },\n        \"CHANNEL_SLIDER.ARROW_LEFT\": {\n          actions: [\"decrementChannel\"]\n        },\n        \"CHANNEL_SLIDER.ARROW_RIGHT\": {\n          actions: [\"incrementChannel\"]\n        },\n        \"CHANNEL_SLIDER.ARROW_UP\": {\n          actions: [\"incrementChannel\"]\n        },\n        \"CHANNEL_SLIDER.ARROW_DOWN\": {\n          actions: [\"decrementChannel\"]\n        },\n        \"CHANNEL_SLIDER.PAGE_UP\": {\n          actions: [\"incrementChannel\"]\n        },\n        \"CHANNEL_SLIDER.PAGE_DOWN\": {\n          actions: [\"decrementChannel\"]\n        },\n        \"CHANNEL_SLIDER.HOME\": {\n          actions: [\"setChannelToMin\"]\n        },\n        \"CHANNEL_SLIDER.END\": {\n          actions: [\"setChannelToMax\"]\n        },\n        \"CHANNEL_INPUT.BLUR\": {\n          actions: [\"setChannelColorFromInput\"]\n        },\n        INTERACT_OUTSIDE: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            guard: \"shouldRestoreFocus\",\n            target: \"focused\",\n            actions: [\"invokeOnClose\", \"setReturnFocus\"]\n          },\n          {\n            target: \"idle\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        CLOSE: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"idle\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        \"SWATCH_TRIGGER.CLICK\": [\n          {\n            guard: and(\"isOpenControlled\", \"closeOnSelect\"),\n            actions: [\"setValue\", \"invokeOnClose\"]\n          },\n          {\n            guard: \"closeOnSelect\",\n            target: \"focused\",\n            actions: [\"setValue\", \"invokeOnClose\", \"setReturnFocus\"]\n          },\n          {\n            actions: [\"setValue\"]\n          }\n        ]\n      }\n    },\n    \"open:dragging\": {\n      tags: [\"open\"],\n      exit: [\"clearActiveChannel\"],\n      effects: [\"trackPointerMove\", \"disableTextSelection\", \"trackPositioning\", \"trackDismissableElement\"],\n      on: {\n        \"CONTROLLED.CLOSE\": [\n          {\n            guard: \"shouldRestoreFocus\",\n            target: \"focused\",\n            actions: [\"setReturnFocus\"]\n          },\n          {\n            target: \"idle\"\n          }\n        ],\n        \"AREA.POINTER_MOVE\": {\n          actions: [\"setAreaColorFromPoint\", \"focusAreaThumb\"]\n        },\n        \"AREA.POINTER_UP\": {\n          target: \"open\",\n          actions: [\"invokeOnChangeEnd\"]\n        },\n        \"CHANNEL_SLIDER.POINTER_MOVE\": {\n          actions: [\"setChannelColorFromPoint\", \"focusChannelThumb\"]\n        },\n        \"CHANNEL_SLIDER.POINTER_UP\": {\n          target: \"open\",\n          actions: [\"invokeOnChangeEnd\"]\n        },\n        INTERACT_OUTSIDE: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            guard: \"shouldRestoreFocus\",\n            target: \"focused\",\n            actions: [\"invokeOnClose\", \"setReturnFocus\"]\n          },\n          {\n            target: \"idle\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        CLOSE: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"idle\",\n            actions: [\"invokeOnClose\"]\n          }\n        ]\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      closeOnSelect: ({ prop }) => !!prop(\"closeOnSelect\"),\n      isOpenControlled: ({ prop }) => prop(\"open\") != null,\n      shouldRestoreFocus: ({ context }) => !!context.get(\"restoreFocus\")\n    },\n    effects: {\n      trackPositioning({ context, prop, scope }) {\n        if (!context.get(\"currentPlacement\")) {\n          context.set(\"currentPlacement\", prop(\"positioning\")?.placement);\n        }\n        const anchorEl = getTriggerEl(scope);\n        const getPositionerEl2 = () => getPositionerEl(scope);\n        return (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacement)(anchorEl, getPositionerEl2, {\n          ...prop(\"positioning\"),\n          defer: true,\n          onComplete(data) {\n            context.set(\"currentPlacement\", data.placement);\n          }\n        });\n      },\n      trackDismissableElement({ context, scope, prop, send }) {\n        const getContentEl2 = () => getContentEl(scope);\n        return (0,_zag_js_dismissable__WEBPACK_IMPORTED_MODULE_5__.trackDismissableElement)(getContentEl2, {\n          exclude: getTriggerEl(scope),\n          defer: true,\n          onInteractOutside(event) {\n            prop(\"onInteractOutside\")?.(event);\n            if (event.defaultPrevented) return;\n            context.set(\"restoreFocus\", !(event.detail.focusable || event.detail.contextmenu));\n          },\n          onPointerDownOutside: prop(\"onPointerDownOutside\"),\n          onFocusOutside: prop(\"onFocusOutside\"),\n          onDismiss() {\n            send({ type: \"INTERACT_OUTSIDE\" });\n          }\n        });\n      },\n      trackFormControl({ context, scope, send }) {\n        const inputEl = getHiddenInputEl(scope);\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackFormControl)(inputEl, {\n          onFieldsetDisabledChange(disabled) {\n            context.set(\"fieldsetDisabled\", disabled);\n          },\n          onFormReset() {\n            send({ type: \"VALUE.SET\", value: context.initial(\"value\"), src: \"form.reset\" });\n          }\n        });\n      },\n      trackPointerMove({ context, scope, event, send }) {\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackPointerMove)(scope.getDoc(), {\n          onPointerMove({ point }) {\n            const type = context.get(\"activeId\") === \"area\" ? \"AREA.POINTER_MOVE\" : \"CHANNEL_SLIDER.POINTER_MOVE\";\n            send({ type, point, format: event.format });\n          },\n          onPointerUp() {\n            const type = context.get(\"activeId\") === \"area\" ? \"AREA.POINTER_UP\" : \"CHANNEL_SLIDER.POINTER_UP\";\n            send({ type });\n          }\n        });\n      },\n      disableTextSelection({ scope }) {\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.disableTextSelection)({\n          doc: scope.getDoc(),\n          target: getContentEl(scope)\n        });\n      }\n    },\n    actions: {\n      openEyeDropper({ scope, context }) {\n        const win = scope.getWin();\n        const isSupported = \"EyeDropper\" in win;\n        if (!isSupported) return;\n        const picker = new win.EyeDropper();\n        picker.open().then(({ sRGBHex }) => {\n          const format = context.get(\"value\").getFormat();\n          const color = (0,_zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__.parseColor)(sRGBHex).toFormat(format);\n          context.set(\"value\", color);\n        }).catch(() => void 0);\n      },\n      setActiveChannel({ context, event }) {\n        context.set(\"activeId\", event.id);\n        if (event.channel) context.set(\"activeChannel\", event.channel);\n        if (event.orientation) context.set(\"activeOrientation\", event.orientation);\n      },\n      clearActiveChannel({ context }) {\n        context.set(\"activeChannel\", null);\n        context.set(\"activeId\", null);\n        context.set(\"activeOrientation\", null);\n      },\n      setAreaColorFromPoint({ context, event, computed, scope }) {\n        const v = event.format ? context.get(\"value\").toFormat(event.format) : computed(\"areaValue\");\n        const { xChannel, yChannel } = event.channel || context.get(\"activeChannel\");\n        const percent = getAreaValueFromPoint(scope, event.point);\n        if (!percent) return;\n        const xValue = v.getChannelPercentValue(xChannel, percent.x);\n        const yValue = v.getChannelPercentValue(yChannel, 1 - percent.y);\n        const color = v.withChannelValue(xChannel, xValue).withChannelValue(yChannel, yValue);\n        context.set(\"value\", color);\n      },\n      setChannelColorFromPoint({ context, event, computed, scope }) {\n        const channel = event.channel || context.get(\"activeId\");\n        const normalizedValue = event.format ? context.get(\"value\").toFormat(event.format) : computed(\"areaValue\");\n        const percent = getChannelSliderValueFromPoint(scope, event.point, channel);\n        if (!percent) return;\n        const orientation = context.get(\"activeOrientation\") || \"horizontal\";\n        const channelPercent = orientation === \"horizontal\" ? percent.x : percent.y;\n        const value = normalizedValue.getChannelPercentValue(channel, channelPercent);\n        const color = normalizedValue.withChannelValue(channel, value);\n        context.set(\"value\", color);\n      },\n      setValue({ context, event }) {\n        context.set(\"value\", event.value);\n      },\n      setFormat({ context, event }) {\n        context.set(\"format\", event.format);\n      },\n      dispatchChangeEvent({ scope, computed }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dispatchInputValueEvent)(getHiddenInputEl(scope), { value: computed(\"valueAsString\") });\n      },\n      syncInputElements({ context, scope }) {\n        syncChannelInputs(scope, context.get(\"value\"));\n      },\n      invokeOnChangeEnd({ context, prop, computed }) {\n        prop(\"onValueChangeEnd\")?.({\n          value: context.get(\"value\"),\n          valueAsString: computed(\"valueAsString\")\n        });\n      },\n      setChannelColorFromInput({ context, event, scope, prop }) {\n        const { channel, isTextField, value } = event;\n        const currentAlpha = context.get(\"value\").getChannelValue(\"alpha\");\n        let color;\n        if (channel === \"alpha\") {\n          let valueAsNumber = parseFloat(value);\n          valueAsNumber = Number.isNaN(valueAsNumber) ? currentAlpha : valueAsNumber;\n          color = context.get(\"value\").withChannelValue(\"alpha\", valueAsNumber);\n        } else if (isTextField) {\n          color = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_6__.tryCatch)(\n            () => parse(value).withChannelValue(\"alpha\", currentAlpha),\n            () => context.get(\"value\")\n          );\n        } else {\n          const current = context.get(\"value\").toFormat(context.get(\"format\"));\n          const valueAsNumber = Number.isNaN(value) ? current.getChannelValue(channel) : value;\n          color = current.withChannelValue(channel, valueAsNumber);\n        }\n        syncChannelInputs(scope, context.get(\"value\"), color);\n        context.set(\"value\", color);\n        prop(\"onValueChangeEnd\")?.({\n          value: color,\n          valueAsString: color.toString(context.get(\"format\"))\n        });\n      },\n      incrementChannel({ context, event }) {\n        const color = context.get(\"value\").incrementChannel(event.channel, event.step);\n        context.set(\"value\", color);\n      },\n      decrementChannel({ context, event }) {\n        const color = context.get(\"value\").decrementChannel(event.channel, event.step);\n        context.set(\"value\", color);\n      },\n      incrementAreaXChannel({ context, event, computed }) {\n        const { xChannel } = event.channel;\n        const color = computed(\"areaValue\").incrementChannel(xChannel, event.step);\n        context.set(\"value\", color);\n      },\n      decrementAreaXChannel({ context, event, computed }) {\n        const { xChannel } = event.channel;\n        const color = computed(\"areaValue\").decrementChannel(xChannel, event.step);\n        context.set(\"value\", color);\n      },\n      incrementAreaYChannel({ context, event, computed }) {\n        const { yChannel } = event.channel;\n        const color = computed(\"areaValue\").incrementChannel(yChannel, event.step);\n        context.set(\"value\", color);\n      },\n      decrementAreaYChannel({ context, event, computed }) {\n        const { yChannel } = event.channel;\n        const color = computed(\"areaValue\").decrementChannel(yChannel, event.step);\n        context.set(\"value\", color);\n      },\n      setChannelToMax({ context, event }) {\n        const value = context.get(\"value\");\n        const range = value.getChannelRange(event.channel);\n        const color = value.withChannelValue(event.channel, range.maxValue);\n        context.set(\"value\", color);\n      },\n      setChannelToMin({ context, event }) {\n        const value = context.get(\"value\");\n        const range = value.getChannelRange(event.channel);\n        const color = value.withChannelValue(event.channel, range.minValue);\n        context.set(\"value\", color);\n      },\n      focusAreaThumb({ scope }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          getAreaThumbEl(scope)?.focus({ preventScroll: true });\n        });\n      },\n      focusChannelThumb({ event, scope }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          getChannelSliderThumbEl(scope, event.channel)?.focus({ preventScroll: true });\n        });\n      },\n      setInitialFocus({ prop, scope }) {\n        if (!prop(\"openAutoFocus\")) return;\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          const element = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getInitialFocus)({\n            root: getContentEl(scope),\n            getInitialEl: prop(\"initialFocusEl\")\n          });\n          element?.focus({ preventScroll: true });\n        });\n      },\n      setReturnFocus({ scope }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          getTriggerEl(scope)?.focus({ preventScroll: true });\n        });\n      },\n      syncFormatSelectElement({ context, scope }) {\n        syncFormatSelect(scope, context.get(\"format\"));\n      },\n      invokeOnOpen({ prop }) {\n        prop(\"onOpenChange\")?.({ open: true });\n      },\n      invokeOnClose({ prop }) {\n        prop(\"onOpenChange\")?.({ open: false });\n      },\n      toggleVisibility({ prop, event, send }) {\n        send({ type: prop(\"open\") ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\", previousEvent: event });\n      }\n    }\n  }\n});\nfunction syncChannelInputs(scope, currentValue, nextValue) {\n  const channelInputEls = getChannelInputEls(scope);\n  (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n    channelInputEls.forEach((inputEl) => {\n      const channel = inputEl.dataset.channel;\n      (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.setElementValue)(inputEl, getChannelValue(nextValue || currentValue, channel));\n    });\n  });\n}\nfunction syncFormatSelect(scope, format) {\n  const selectEl = getFormatSelectEl(scope);\n  if (!selectEl) return;\n  (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.setElementValue)(selectEl, format));\n}\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\n  \"closeOnSelect\",\n  \"dir\",\n  \"disabled\",\n  \"format\",\n  \"defaultFormat\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"initialFocusEl\",\n  \"name\",\n  \"positioning\",\n  \"onFocusOutside\",\n  \"onFormatChange\",\n  \"onInteractOutside\",\n  \"onOpenChange\",\n  \"onPointerDownOutside\",\n  \"onValueChange\",\n  \"onValueChangeEnd\",\n  \"defaultOpen\",\n  \"open\",\n  \"positioning\",\n  \"required\",\n  \"readOnly\",\n  \"value\",\n  \"defaultValue\",\n  \"invalid\",\n  \"openAutoFocus\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_6__.createSplitProps)(props);\nvar areaProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\"xChannel\", \"yChannel\"]);\nvar splitAreaProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_6__.createSplitProps)(areaProps);\nvar channelProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\"channel\", \"orientation\"]);\nvar splitChannelProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_6__.createSplitProps)(channelProps);\nvar swatchTriggerProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\"value\", \"disabled\"]);\nvar splitSwatchTriggerProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_6__.createSplitProps)(swatchTriggerProps);\nvar swatchProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\"value\", \"respectAlpha\"]);\nvar splitSwatchProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_6__.createSplitProps)(swatchProps);\nvar transparencyGridProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\"size\"]);\nvar splitTransparencyGridProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_6__.createSplitProps)(transparencyGridProps);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/color-picker/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/color-utils/dist/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@zag-js/color-utils/dist/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Color: () => (/* binding */ Color),\n/* harmony export */   getColorAreaGradient: () => (/* binding */ getColorAreaGradient),\n/* harmony export */   normalizeColor: () => (/* binding */ normalizeColor),\n/* harmony export */   parseColor: () => (/* binding */ parseColor)\n/* harmony export */ });\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, key + \"\" , value);\n\n// src/color-format-gradient.ts\nvar generateRGB_R = (orientation, dir, zValue) => {\n  const maskImage = `linear-gradient(to ${orientation[Number(!dir)]}, transparent, #000)`;\n  const result = {\n    areaStyles: {\n      backgroundImage: `linear-gradient(to ${orientation[Number(dir)]},rgb(${zValue},0,0),rgb(${zValue},255,0))`\n    },\n    areaGradientStyles: {\n      backgroundImage: `linear-gradient(to ${orientation[Number(dir)]},rgb(${zValue},0,255),rgb(${zValue},255,255))`,\n      WebkitMaskImage: maskImage,\n      maskImage\n    }\n  };\n  return result;\n};\nvar generateRGB_G = (orientation, dir, zValue) => {\n  const maskImage = `linear-gradient(to ${orientation[Number(!dir)]}, transparent, #000)`;\n  const result = {\n    areaStyles: {\n      backgroundImage: `linear-gradient(to ${orientation[Number(dir)]},rgb(0,${zValue},0),rgb(255,${zValue},0))`\n    },\n    areaGradientStyles: {\n      backgroundImage: `linear-gradient(to ${orientation[Number(dir)]},rgb(0,${zValue},255),rgb(255,${zValue},255))`,\n      WebkitMaskImage: maskImage,\n      maskImage\n    }\n  };\n  return result;\n};\nvar generateRGB_B = (orientation, dir, zValue) => {\n  const maskImage = `linear-gradient(to ${orientation[Number(!dir)]}, transparent, #000)`;\n  const result = {\n    areaStyles: {\n      backgroundImage: `linear-gradient(to ${orientation[Number(dir)]},rgb(0,0,${zValue}),rgb(255,0,${zValue}))`\n    },\n    areaGradientStyles: {\n      backgroundImage: `linear-gradient(to ${orientation[Number(dir)]},rgb(0,255,${zValue}),rgb(255,255,${zValue}))`,\n      WebkitMaskImage: maskImage,\n      maskImage\n    }\n  };\n  return result;\n};\nvar generateHSL_H = (orientation, dir, zValue) => {\n  const result = {\n    areaStyles: {},\n    areaGradientStyles: {\n      background: [\n        `linear-gradient(to ${orientation[Number(dir)]}, hsla(0,0%,0%,1) 0%, hsla(0,0%,0%,0) 50%, hsla(0,0%,100%,0) 50%, hsla(0,0%,100%,1) 100%)`,\n        `linear-gradient(to ${orientation[Number(!dir)]},hsl(0,0%,50%),hsla(0,0%,50%,0))`,\n        `hsl(${zValue}, 100%, 50%)`\n      ].join(\",\")\n    }\n  };\n  return result;\n};\nvar generateHSL_S = (orientation, dir, alphaValue) => {\n  const result = {\n    areaStyles: {},\n    areaGradientStyles: {\n      background: [\n        `linear-gradient(to ${orientation[Number(!dir)]}, hsla(0,0%,0%,${alphaValue}) 0%, hsla(0,0%,0%,0) 50%, hsla(0,0%,100%,0) 50%, hsla(0,0%,100%,${alphaValue}) 100%)`,\n        `linear-gradient(to ${orientation[Number(dir)]},hsla(0,100%,50%,${alphaValue}),hsla(60,100%,50%,${alphaValue}),hsla(120,100%,50%,${alphaValue}),hsla(180,100%,50%,${alphaValue}),hsla(240,100%,50%,${alphaValue}),hsla(300,100%,50%,${alphaValue}),hsla(359,100%,50%,${alphaValue}))`,\n        \"hsl(0, 0%, 50%)\"\n      ].join(\",\")\n    }\n  };\n  return result;\n};\nvar generateHSL_L = (orientation, dir, zValue) => {\n  const result = {\n    areaStyles: {},\n    areaGradientStyles: {\n      backgroundImage: [\n        `linear-gradient(to ${orientation[Number(!dir)]},hsl(0,0%,${zValue}%),hsla(0,0%,${zValue}%,0))`,\n        `linear-gradient(to ${orientation[Number(dir)]},hsl(0,100%,${zValue}%),hsl(60,100%,${zValue}%),hsl(120,100%,${zValue}%),hsl(180,100%,${zValue}%),hsl(240,100%,${zValue}%),hsl(300,100%,${zValue}%),hsl(360,100%,${zValue}%))`\n      ].join(\",\")\n    }\n  };\n  return result;\n};\nvar generateHSB_H = (orientation, dir, zValue) => {\n  const result = {\n    areaStyles: {},\n    areaGradientStyles: {\n      background: [\n        `linear-gradient(to ${orientation[Number(dir)]},hsl(0,0%,0%),hsla(0,0%,0%,0))`,\n        `linear-gradient(to ${orientation[Number(!dir)]},hsl(0,0%,100%),hsla(0,0%,100%,0))`,\n        `hsl(${zValue}, 100%, 50%)`\n      ].join(\",\")\n    }\n  };\n  return result;\n};\nvar generateHSB_S = (orientation, dir, alphaValue) => {\n  const result = {\n    areaStyles: {},\n    areaGradientStyles: {\n      background: [\n        `linear-gradient(to ${orientation[Number(!dir)]},hsla(0,0%,0%,${alphaValue}),hsla(0,0%,0%,0))`,\n        `linear-gradient(to ${orientation[Number(dir)]},hsla(0,100%,50%,${alphaValue}),hsla(60,100%,50%,${alphaValue}),hsla(120,100%,50%,${alphaValue}),hsla(180,100%,50%,${alphaValue}),hsla(240,100%,50%,${alphaValue}),hsla(300,100%,50%,${alphaValue}),hsla(359,100%,50%,${alphaValue}))`,\n        `linear-gradient(to ${orientation[Number(!dir)]},hsl(0,0%,0%),hsl(0,0%,100%))`\n      ].join(\",\")\n    }\n  };\n  return result;\n};\nvar generateHSB_B = (orientation, dir, alphaValue) => {\n  const result = {\n    areaStyles: {},\n    areaGradientStyles: {\n      background: [\n        `linear-gradient(to ${orientation[Number(!dir)]},hsla(0,0%,100%,${alphaValue}),hsla(0,0%,100%,0))`,\n        `linear-gradient(to ${orientation[Number(dir)]},hsla(0,100%,50%,${alphaValue}),hsla(60,100%,50%,${alphaValue}),hsla(120,100%,50%,${alphaValue}),hsla(180,100%,50%,${alphaValue}),hsla(240,100%,50%,${alphaValue}),hsla(300,100%,50%,${alphaValue}),hsla(359,100%,50%,${alphaValue}))`,\n        \"#000\"\n      ].join(\",\")\n    }\n  };\n  return result;\n};\n\n// src/area-gradient.ts\nfunction getColorAreaGradient(color, options) {\n  const { xChannel, yChannel, dir: dirProp = \"ltr\" } = options;\n  const { zChannel } = color.getColorAxes({ xChannel, yChannel });\n  const zValue = color.getChannelValue(zChannel);\n  const { minValue: zMin, maxValue: zMax } = color.getChannelRange(zChannel);\n  const orientation = [\"top\", dirProp === \"rtl\" ? \"left\" : \"right\"];\n  let dir = false;\n  let background = { areaStyles: {}, areaGradientStyles: {} };\n  let alphaValue = (zValue - zMin) / (zMax - zMin);\n  let isHSL = color.getFormat() === \"hsla\";\n  switch (zChannel) {\n    case \"red\": {\n      dir = xChannel === \"green\";\n      background = generateRGB_R(orientation, dir, zValue);\n      break;\n    }\n    case \"green\": {\n      dir = xChannel === \"red\";\n      background = generateRGB_G(orientation, dir, zValue);\n      break;\n    }\n    case \"blue\": {\n      dir = xChannel === \"red\";\n      background = generateRGB_B(orientation, dir, zValue);\n      break;\n    }\n    case \"hue\": {\n      dir = xChannel !== \"saturation\";\n      if (isHSL) {\n        background = generateHSL_H(orientation, dir, zValue);\n      } else {\n        background = generateHSB_H(orientation, dir, zValue);\n      }\n      break;\n    }\n    case \"saturation\": {\n      dir = xChannel === \"hue\";\n      if (isHSL) {\n        background = generateHSL_S(orientation, dir, alphaValue);\n      } else {\n        background = generateHSB_S(orientation, dir, alphaValue);\n      }\n      break;\n    }\n    case \"brightness\": {\n      dir = xChannel === \"hue\";\n      background = generateHSB_B(orientation, dir, alphaValue);\n      break;\n    }\n    case \"lightness\": {\n      dir = xChannel === \"hue\";\n      background = generateHSL_L(orientation, dir, zValue);\n      break;\n    }\n  }\n  return background;\n}\nvar isEqualObject = (a, b) => {\n  if (Object.keys(a).length !== Object.keys(b).length) return false;\n  for (let key in a) if (a[key] !== b[key]) return false;\n  return true;\n};\nvar Color = class {\n  toHexInt() {\n    return this.toFormat(\"rgba\").toHexInt();\n  }\n  getChannelValue(channel) {\n    if (channel in this) return this[channel];\n    throw new Error(\"Unsupported color channel: \" + channel);\n  }\n  getChannelValuePercent(channel, valueToCheck) {\n    const value = valueToCheck ?? this.getChannelValue(channel);\n    const { minValue, maxValue } = this.getChannelRange(channel);\n    return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.getValuePercent)(value, minValue, maxValue);\n  }\n  getChannelPercentValue(channel, percentToCheck) {\n    const { minValue, maxValue, step } = this.getChannelRange(channel);\n    const percentValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.getPercentValue)(percentToCheck, minValue, maxValue, step);\n    return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.snapValueToStep)(percentValue, minValue, maxValue, step);\n  }\n  withChannelValue(channel, value) {\n    const { minValue, maxValue } = this.getChannelRange(channel);\n    if (channel in this) {\n      let clone = this.clone();\n      clone[channel] = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.clampValue)(value, minValue, maxValue);\n      return clone;\n    }\n    throw new Error(\"Unsupported color channel: \" + channel);\n  }\n  getColorAxes(xyChannels) {\n    let { xChannel, yChannel } = xyChannels;\n    let xCh = xChannel || this.getChannels().find((c) => c !== yChannel);\n    let yCh = yChannel || this.getChannels().find((c) => c !== xCh);\n    let zCh = this.getChannels().find((c) => c !== xCh && c !== yCh);\n    return { xChannel: xCh, yChannel: yCh, zChannel: zCh };\n  }\n  incrementChannel(channel, stepSize) {\n    const { minValue, maxValue, step } = this.getChannelRange(channel);\n    const value = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.snapValueToStep)(\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.clampValue)(this.getChannelValue(channel) + stepSize, minValue, maxValue),\n      minValue,\n      maxValue,\n      step\n    );\n    return this.withChannelValue(channel, value);\n  }\n  decrementChannel(channel, stepSize) {\n    return this.incrementChannel(channel, -stepSize);\n  }\n  isEqual(color) {\n    const isSame = isEqualObject(this.toJSON(), color.toJSON());\n    return isSame && this.getChannelValue(\"alpha\") === color.getChannelValue(\"alpha\");\n  }\n};\nvar _RGBColor = class _RGBColor extends Color {\n  constructor(red, green, blue, alpha) {\n    super();\n    this.red = red;\n    this.green = green;\n    this.blue = blue;\n    this.alpha = alpha;\n  }\n  static parse(value) {\n    let colors = [];\n    if (/^#[\\da-f]+$/i.test(value) && [4, 5, 7, 9].includes(value.length)) {\n      const values = (value.length < 6 ? value.replace(/[^#]/gi, \"$&$&\") : value).slice(1).split(\"\");\n      while (values.length > 0) {\n        colors.push(parseInt(values.splice(0, 2).join(\"\"), 16));\n      }\n      colors[3] = colors[3] !== void 0 ? colors[3] / 255 : void 0;\n    }\n    const match = value.match(/^rgba?\\((.*)\\)$/);\n    if (match?.[1]) {\n      colors = match[1].split(\",\").map((value2) => Number(value2.trim())).map((num, i) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.clampValue)(num, 0, i < 3 ? 255 : 1));\n    }\n    return colors.length < 3 ? void 0 : new _RGBColor(colors[0], colors[1], colors[2], colors[3] ?? 1);\n  }\n  toString(format) {\n    switch (format) {\n      case \"hex\":\n        return \"#\" + (this.red.toString(16).padStart(2, \"0\") + this.green.toString(16).padStart(2, \"0\") + this.blue.toString(16).padStart(2, \"0\")).toUpperCase();\n      case \"hexa\":\n        return \"#\" + (this.red.toString(16).padStart(2, \"0\") + this.green.toString(16).padStart(2, \"0\") + this.blue.toString(16).padStart(2, \"0\") + Math.round(this.alpha * 255).toString(16).padStart(2, \"0\")).toUpperCase();\n      case \"rgb\":\n        return `rgb(${this.red}, ${this.green}, ${this.blue})`;\n      case \"css\":\n      case \"rgba\":\n        return `rgba(${this.red}, ${this.green}, ${this.blue}, ${this.alpha})`;\n      case \"hsl\":\n        return this.toHSL().toString(\"hsl\");\n      case \"hsb\":\n        return this.toHSB().toString(\"hsb\");\n      default:\n        return this.toFormat(format).toString(format);\n    }\n  }\n  toFormat(format) {\n    switch (format) {\n      case \"rgba\":\n        return this;\n      case \"hsba\":\n        return this.toHSB();\n      case \"hsla\":\n        return this.toHSL();\n      default:\n        throw new Error(\"Unsupported color conversion: rgb -> \" + format);\n    }\n  }\n  toHexInt() {\n    return this.red << 16 | this.green << 8 | this.blue;\n  }\n  /**\n   * Converts an RGB color value to HSB.\n   * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#From_RGB.\n   * @returns An HSBColor object.\n   */\n  toHSB() {\n    const red = this.red / 255;\n    const green = this.green / 255;\n    const blue = this.blue / 255;\n    const min = Math.min(red, green, blue);\n    const brightness = Math.max(red, green, blue);\n    const chroma = brightness - min;\n    const saturation = brightness === 0 ? 0 : chroma / brightness;\n    let hue = 0;\n    if (chroma !== 0) {\n      switch (brightness) {\n        case red:\n          hue = (green - blue) / chroma + (green < blue ? 6 : 0);\n          break;\n        case green:\n          hue = (blue - red) / chroma + 2;\n          break;\n        case blue:\n          hue = (red - green) / chroma + 4;\n          break;\n      }\n      hue /= 6;\n    }\n    return new HSBColor(\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(hue * 360, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(saturation * 100, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(brightness * 100, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.alpha, 2)\n    );\n  }\n  /**\n   * Converts an RGB color value to HSL.\n   * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#From_RGB.\n   * @returns An HSLColor object.\n   */\n  toHSL() {\n    const red = this.red / 255;\n    const green = this.green / 255;\n    const blue = this.blue / 255;\n    const min = Math.min(red, green, blue);\n    const max = Math.max(red, green, blue);\n    const lightness = (max + min) / 2;\n    const chroma = max - min;\n    let hue = -1;\n    let saturation = -1;\n    if (chroma === 0) {\n      hue = saturation = 0;\n    } else {\n      saturation = chroma / (lightness < 0.5 ? max + min : 2 - max - min);\n      switch (max) {\n        case red:\n          hue = (green - blue) / chroma + (green < blue ? 6 : 0);\n          break;\n        case green:\n          hue = (blue - red) / chroma + 2;\n          break;\n        case blue:\n          hue = (red - green) / chroma + 4;\n          break;\n      }\n      hue /= 6;\n    }\n    return new HSLColor(\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(hue * 360, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(saturation * 100, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(lightness * 100, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.alpha, 2)\n    );\n  }\n  clone() {\n    return new _RGBColor(this.red, this.green, this.blue, this.alpha);\n  }\n  getChannelFormatOptions(channel) {\n    switch (channel) {\n      case \"red\":\n      case \"green\":\n      case \"blue\":\n        return { style: \"decimal\" };\n      case \"alpha\":\n        return { style: \"percent\" };\n      default:\n        throw new Error(\"Unknown color channel: \" + channel);\n    }\n  }\n  formatChannelValue(channel, locale) {\n    let options = this.getChannelFormatOptions(channel);\n    let value = this.getChannelValue(channel);\n    return new Intl.NumberFormat(locale, options).format(value);\n  }\n  getChannelRange(channel) {\n    switch (channel) {\n      case \"red\":\n      case \"green\":\n      case \"blue\":\n        return { minValue: 0, maxValue: 255, step: 1, pageSize: 17 };\n      case \"alpha\":\n        return { minValue: 0, maxValue: 1, step: 0.01, pageSize: 0.1 };\n      default:\n        throw new Error(\"Unknown color channel: \" + channel);\n    }\n  }\n  toJSON() {\n    return { r: this.red, g: this.green, b: this.blue, a: this.alpha };\n  }\n  getFormat() {\n    return \"rgba\";\n  }\n  getChannels() {\n    return _RGBColor.colorChannels;\n  }\n};\n__publicField(_RGBColor, \"colorChannels\", [\"red\", \"green\", \"blue\"]);\nvar RGBColor = _RGBColor;\n\n// src/hsl-color.ts\nvar HSL_REGEX = /hsl\\(([-+]?\\d+(?:.\\d+)?\\s*,\\s*[-+]?\\d+(?:.\\d+)?%\\s*,\\s*[-+]?\\d+(?:.\\d+)?%)\\)|hsla\\(([-+]?\\d+(?:.\\d+)?\\s*,\\s*[-+]?\\d+(?:.\\d+)?%\\s*,\\s*[-+]?\\d+(?:.\\d+)?%\\s*,\\s*[-+]?\\d(.\\d+)?)\\)/;\nvar _HSLColor = class _HSLColor extends Color {\n  constructor(hue, saturation, lightness, alpha) {\n    super();\n    this.hue = hue;\n    this.saturation = saturation;\n    this.lightness = lightness;\n    this.alpha = alpha;\n  }\n  static parse(value) {\n    let m;\n    if (m = value.match(HSL_REGEX)) {\n      const [h, s, l, a] = (m[1] ?? m[2]).split(\",\").map((n) => Number(n.trim().replace(\"%\", \"\")));\n      return new _HSLColor((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.mod)(h, 360), (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.clampValue)(s, 0, 100), (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.clampValue)(l, 0, 100), (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.clampValue)(a ?? 1, 0, 1));\n    }\n  }\n  toString(format) {\n    switch (format) {\n      case \"hex\":\n        return this.toRGB().toString(\"hex\");\n      case \"hexa\":\n        return this.toRGB().toString(\"hexa\");\n      case \"hsl\":\n        return `hsl(${this.hue}, ${(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.saturation, 2)}%, ${(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.lightness, 2)}%)`;\n      case \"css\":\n      case \"hsla\":\n        return `hsla(${this.hue}, ${(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.saturation, 2)}%, ${(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.lightness, 2)}%, ${this.alpha})`;\n      case \"hsb\":\n        return this.toHSB().toString(\"hsb\");\n      case \"rgb\":\n        return this.toRGB().toString(\"rgb\");\n      default:\n        return this.toFormat(format).toString(format);\n    }\n  }\n  toFormat(format) {\n    switch (format) {\n      case \"hsla\":\n        return this;\n      case \"hsba\":\n        return this.toHSB();\n      case \"rgba\":\n        return this.toRGB();\n      default:\n        throw new Error(\"Unsupported color conversion: hsl -> \" + format);\n    }\n  }\n  /**\n   * Converts a HSL color to HSB.\n   * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#HSL_to_HSV.\n   * @returns An HSBColor object.\n   */\n  toHSB() {\n    let saturation = this.saturation / 100;\n    let lightness = this.lightness / 100;\n    let brightness = lightness + saturation * Math.min(lightness, 1 - lightness);\n    saturation = brightness === 0 ? 0 : 2 * (1 - lightness / brightness);\n    return new HSBColor(\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.hue, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(saturation * 100, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(brightness * 100, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.alpha, 2)\n    );\n  }\n  /**\n   * Converts a HSL color to RGB.\n   * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#HSL_to_RGB_alternative.\n   * @returns An RGBColor object.\n   */\n  toRGB() {\n    let hue = this.hue;\n    let saturation = this.saturation / 100;\n    let lightness = this.lightness / 100;\n    let a = saturation * Math.min(lightness, 1 - lightness);\n    let fn = (n, k = (n + hue / 30) % 12) => lightness - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n    return new RGBColor(\n      Math.round(fn(0) * 255),\n      Math.round(fn(8) * 255),\n      Math.round(fn(4) * 255),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.alpha, 2)\n    );\n  }\n  clone() {\n    return new _HSLColor(this.hue, this.saturation, this.lightness, this.alpha);\n  }\n  getChannelFormatOptions(channel) {\n    switch (channel) {\n      case \"hue\":\n        return { style: \"unit\", unit: \"degree\", unitDisplay: \"narrow\" };\n      case \"saturation\":\n      case \"lightness\":\n      case \"alpha\":\n        return { style: \"percent\" };\n      default:\n        throw new Error(\"Unknown color channel: \" + channel);\n    }\n  }\n  formatChannelValue(channel, locale) {\n    let options = this.getChannelFormatOptions(channel);\n    let value = this.getChannelValue(channel);\n    if (channel === \"saturation\" || channel === \"lightness\") {\n      value /= 100;\n    }\n    return new Intl.NumberFormat(locale, options).format(value);\n  }\n  getChannelRange(channel) {\n    switch (channel) {\n      case \"hue\":\n        return { minValue: 0, maxValue: 360, step: 1, pageSize: 15 };\n      case \"saturation\":\n      case \"lightness\":\n        return { minValue: 0, maxValue: 100, step: 1, pageSize: 10 };\n      case \"alpha\":\n        return { minValue: 0, maxValue: 1, step: 0.01, pageSize: 0.1 };\n      default:\n        throw new Error(\"Unknown color channel: \" + channel);\n    }\n  }\n  toJSON() {\n    return { h: this.hue, s: this.saturation, l: this.lightness, a: this.alpha };\n  }\n  getFormat() {\n    return \"hsla\";\n  }\n  getChannels() {\n    return _HSLColor.colorChannels;\n  }\n};\n__publicField(_HSLColor, \"colorChannels\", [\"hue\", \"saturation\", \"lightness\"]);\nvar HSLColor = _HSLColor;\n\n// src/hsb-color.ts\nvar HSB_REGEX = /hsb\\(([-+]?\\d+(?:.\\d+)?\\s*,\\s*[-+]?\\d+(?:.\\d+)?%\\s*,\\s*[-+]?\\d+(?:.\\d+)?%)\\)|hsba\\(([-+]?\\d+(?:.\\d+)?\\s*,\\s*[-+]?\\d+(?:.\\d+)?%\\s*,\\s*[-+]?\\d+(?:.\\d+)?%\\s*,\\s*[-+]?\\d(.\\d+)?)\\)/;\nvar _HSBColor = class _HSBColor extends Color {\n  constructor(hue, saturation, brightness, alpha) {\n    super();\n    this.hue = hue;\n    this.saturation = saturation;\n    this.brightness = brightness;\n    this.alpha = alpha;\n  }\n  static parse(value) {\n    let m;\n    if (m = value.match(HSB_REGEX)) {\n      const [h, s, b, a] = (m[1] ?? m[2]).split(\",\").map((n) => Number(n.trim().replace(\"%\", \"\")));\n      return new _HSBColor((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.mod)(h, 360), (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.clampValue)(s, 0, 100), (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.clampValue)(b, 0, 100), (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.clampValue)(a ?? 1, 0, 1));\n    }\n  }\n  toString(format) {\n    switch (format) {\n      case \"css\":\n        return this.toHSL().toString(\"css\");\n      case \"hex\":\n        return this.toRGB().toString(\"hex\");\n      case \"hexa\":\n        return this.toRGB().toString(\"hexa\");\n      case \"hsb\":\n        return `hsb(${this.hue}, ${(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.saturation, 2)}%, ${(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.brightness, 2)}%)`;\n      case \"hsba\":\n        return `hsba(${this.hue}, ${(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.saturation, 2)}%, ${(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.brightness, 2)}%, ${this.alpha})`;\n      case \"hsl\":\n        return this.toHSL().toString(\"hsl\");\n      case \"rgb\":\n        return this.toRGB().toString(\"rgb\");\n      default:\n        return this.toFormat(format).toString(format);\n    }\n  }\n  toFormat(format) {\n    switch (format) {\n      case \"hsba\":\n        return this;\n      case \"hsla\":\n        return this.toHSL();\n      case \"rgba\":\n        return this.toRGB();\n      default:\n        throw new Error(\"Unsupported color conversion: hsb -> \" + format);\n    }\n  }\n  /**\n   * Converts a HSB color to HSL.\n   * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#HSV_to_HSL.\n   * @returns An HSLColor object.\n   */\n  toHSL() {\n    let saturation = this.saturation / 100;\n    let brightness = this.brightness / 100;\n    let lightness = brightness * (1 - saturation / 2);\n    saturation = lightness === 0 || lightness === 1 ? 0 : (brightness - lightness) / Math.min(lightness, 1 - lightness);\n    return new HSLColor(\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.hue, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(saturation * 100, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(lightness * 100, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.alpha, 2)\n    );\n  }\n  /**\n   * Converts a HSV color value to RGB.\n   * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#HSV_to_RGB_alternative.\n   * @returns An RGBColor object.\n   */\n  toRGB() {\n    let hue = this.hue;\n    let saturation = this.saturation / 100;\n    let brightness = this.brightness / 100;\n    let fn = (n, k = (n + hue / 60) % 6) => brightness - saturation * brightness * Math.max(Math.min(k, 4 - k, 1), 0);\n    return new RGBColor(\n      Math.round(fn(5) * 255),\n      Math.round(fn(3) * 255),\n      Math.round(fn(1) * 255),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.alpha, 2)\n    );\n  }\n  clone() {\n    return new _HSBColor(this.hue, this.saturation, this.brightness, this.alpha);\n  }\n  getChannelFormatOptions(channel) {\n    switch (channel) {\n      case \"hue\":\n        return { style: \"unit\", unit: \"degree\", unitDisplay: \"narrow\" };\n      case \"saturation\":\n      case \"brightness\":\n      case \"alpha\":\n        return { style: \"percent\" };\n      default:\n        throw new Error(\"Unknown color channel: \" + channel);\n    }\n  }\n  formatChannelValue(channel, locale) {\n    let options = this.getChannelFormatOptions(channel);\n    let value = this.getChannelValue(channel);\n    if (channel === \"saturation\" || channel === \"brightness\") {\n      value /= 100;\n    }\n    return new Intl.NumberFormat(locale, options).format(value);\n  }\n  getChannelRange(channel) {\n    switch (channel) {\n      case \"hue\":\n        return { minValue: 0, maxValue: 360, step: 1, pageSize: 15 };\n      case \"saturation\":\n      case \"brightness\":\n        return { minValue: 0, maxValue: 100, step: 1, pageSize: 10 };\n      case \"alpha\":\n        return { minValue: 0, maxValue: 1, step: 0.01, pageSize: 0.1 };\n      default:\n        throw new Error(\"Unknown color channel: \" + channel);\n    }\n  }\n  toJSON() {\n    return { h: this.hue, s: this.saturation, b: this.brightness, a: this.alpha };\n  }\n  getFormat() {\n    return \"hsba\";\n  }\n  getChannels() {\n    return _HSBColor.colorChannels;\n  }\n};\n__publicField(_HSBColor, \"colorChannels\", [\"hue\", \"saturation\", \"brightness\"]);\nvar HSBColor = _HSBColor;\n\n// src/native-color.ts\nvar nativeColors = \"aliceblue:f0f8ff,antiquewhite:faebd7,aqua:00ffff,aquamarine:7fffd4,azure:f0ffff,beige:f5f5dc,bisque:ffe4c4,black:000000,blanchedalmond:ffebcd,blue:0000ff,blueviolet:8a2be2,brown:a52a2a,burlywood:deb887,cadetblue:5f9ea0,chartreuse:7fff00,chocolate:d2691e,coral:ff7f50,cornflowerblue:6495ed,cornsilk:fff8dc,crimson:dc143c,cyan:00ffff,darkblue:00008b,darkcyan:008b8b,darkgoldenrod:b8860b,darkgray:a9a9a9,darkgreen:006400,darkkhaki:bdb76b,darkmagenta:8b008b,darkolivegreen:556b2f,darkorange:ff8c00,darkorchid:9932cc,darkred:8b0000,darksalmon:e9967a,darkseagreen:8fbc8f,darkslateblue:483d8b,darkslategray:2f4f4f,darkturquoise:00ced1,darkviolet:9400d3,deeppink:ff1493,deepskyblue:00bfff,dimgray:696969,dodgerblue:1e90ff,firebrick:b22222,floralwhite:fffaf0,forestgreen:228b22,fuchsia:ff00ff,gainsboro:dcdcdc,ghostwhite:f8f8ff,gold:ffd700,goldenrod:daa520,gray:808080,green:008000,greenyellow:adff2f,honeydew:f0fff0,hotpink:ff69b4,indianred:cd5c5c,indigo:4b0082,ivory:fffff0,khaki:f0e68c,lavender:e6e6fa,lavenderblush:fff0f5,lawngreen:7cfc00,lemonchiffon:fffacd,lightblue:add8e6,lightcoral:f08080,lightcyan:e0ffff,lightgoldenrodyellow:fafad2,lightgrey:d3d3d3,lightgreen:90ee90,lightpink:ffb6c1,lightsalmon:ffa07a,lightseagreen:20b2aa,lightskyblue:87cefa,lightslategray:778899,lightsteelblue:b0c4de,lightyellow:ffffe0,lime:00ff00,limegreen:32cd32,linen:faf0e6,magenta:ff00ff,maroon:800000,mediumaquamarine:66cdaa,mediumblue:0000cd,mediumorchid:ba55d3,mediumpurple:9370d8,mediumseagreen:3cb371,mediumslateblue:7b68ee,mediumspringgreen:00fa9a,mediumturquoise:48d1cc,mediumvioletred:c71585,midnightblue:191970,mintcream:f5fffa,mistyrose:ffe4e1,moccasin:ffe4b5,navajowhite:ffdead,navy:000080,oldlace:fdf5e6,olive:808000,olivedrab:6b8e23,orange:ffa500,orangered:ff4500,orchid:da70d6,palegoldenrod:eee8aa,palegreen:98fb98,paleturquoise:afeeee,palevioletred:d87093,papayawhip:ffefd5,peachpuff:ffdab9,peru:cd853f,pink:ffc0cb,plum:dda0dd,powderblue:b0e0e6,purple:800080,rebeccapurple:663399,red:ff0000,rosybrown:bc8f8f,royalblue:4169e1,saddlebrown:8b4513,salmon:fa8072,sandybrown:f4a460,seagreen:2e8b57,seashell:fff5ee,sienna:a0522d,silver:c0c0c0,skyblue:87ceeb,slateblue:6a5acd,slategray:708090,snow:fffafa,springgreen:00ff7f,steelblue:4682b4,tan:d2b48c,teal:008080,thistle:d8bfd8,tomato:ff6347,turquoise:40e0d0,violet:ee82ee,wheat:f5deb3,white:ffffff,whitesmoke:f5f5f5,yellow:ffff00,yellowgreen:9acd32\";\nvar makeMap = (str) => {\n  const map = /* @__PURE__ */ new Map();\n  const list = str.split(\",\");\n  for (let i = 0; i < list.length; i++) {\n    const [key, val] = list[i].split(\":\");\n    map.set(key, `#${val}`);\n    if (key.includes(\"gray\")) map.set(key.replace(\"gray\", \"grey\"), `#${val}`);\n  }\n  return map;\n};\nvar nativeColorMap = makeMap(nativeColors);\n\n// src/parse-color.ts\nvar parseColor = (value) => {\n  if (nativeColorMap.has(value)) {\n    return parseColor(nativeColorMap.get(value));\n  }\n  const result = RGBColor.parse(value) || HSBColor.parse(value) || HSLColor.parse(value);\n  if (!result) {\n    const error = new Error(\"Invalid color value: \" + value);\n    Error.captureStackTrace?.(error, parseColor);\n    throw error;\n  }\n  return result;\n};\nvar normalizeColor = (v) => {\n  return typeof v === \"string\" ? parseColor(v) : v;\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/color-utils/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/combobox/dist/index.mjs":
/*!******************************************************!*\
  !*** ./node_modules/@zag-js/combobox/dist/index.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   collection: () => (/* binding */ collection),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   itemGroupLabelProps: () => (/* binding */ itemGroupLabelProps),\n/* harmony export */   itemGroupProps: () => (/* binding */ itemGroupProps),\n/* harmony export */   itemProps: () => (/* binding */ itemProps),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitItemGroupLabelProps: () => (/* binding */ splitItemGroupLabelProps),\n/* harmony export */   splitItemGroupProps: () => (/* binding */ splitItemGroupProps),\n/* harmony export */   splitItemProps: () => (/* binding */ splitItemProps),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/collection */ \"(ssr)/./node_modules/@zag-js/collection/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_popper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/popper */ \"(ssr)/./node_modules/@zag-js/popper/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_aria_hidden__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @zag-js/aria-hidden */ \"(ssr)/./node_modules/@zag-js/aria-hidden/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_dismissable__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/dismissable */ \"(ssr)/./node_modules/@zag-js/dismissable/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n\n\n\n// src/combobox.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"combobox\").parts(\n  \"root\",\n  \"clearTrigger\",\n  \"content\",\n  \"control\",\n  \"input\",\n  \"item\",\n  \"itemGroup\",\n  \"itemGroupLabel\",\n  \"itemIndicator\",\n  \"itemText\",\n  \"label\",\n  \"list\",\n  \"positioner\",\n  \"trigger\"\n);\nvar parts = anatomy.build();\nvar collection = (options) => {\n  return new _zag_js_collection__WEBPACK_IMPORTED_MODULE_1__.ListCollection(options);\n};\ncollection.empty = () => {\n  return new _zag_js_collection__WEBPACK_IMPORTED_MODULE_1__.ListCollection({ items: [] });\n};\nvar getRootId = (ctx) => ctx.ids?.root ?? `combobox:${ctx.id}`;\nvar getLabelId = (ctx) => ctx.ids?.label ?? `combobox:${ctx.id}:label`;\nvar getControlId = (ctx) => ctx.ids?.control ?? `combobox:${ctx.id}:control`;\nvar getInputId = (ctx) => ctx.ids?.input ?? `combobox:${ctx.id}:input`;\nvar getContentId = (ctx) => ctx.ids?.content ?? `combobox:${ctx.id}:content`;\nvar getPositionerId = (ctx) => ctx.ids?.positioner ?? `combobox:${ctx.id}:popper`;\nvar getTriggerId = (ctx) => ctx.ids?.trigger ?? `combobox:${ctx.id}:toggle-btn`;\nvar getClearTriggerId = (ctx) => ctx.ids?.clearTrigger ?? `combobox:${ctx.id}:clear-btn`;\nvar getItemGroupId = (ctx, id) => ctx.ids?.itemGroup?.(id) ?? `combobox:${ctx.id}:optgroup:${id}`;\nvar getItemGroupLabelId = (ctx, id) => ctx.ids?.itemGroupLabel?.(id) ?? `combobox:${ctx.id}:optgroup-label:${id}`;\nvar getItemId = (ctx, id) => ctx.ids?.item?.(id) ?? `combobox:${ctx.id}:option:${id}`;\nvar getContentEl = (ctx) => ctx.getById(getContentId(ctx));\nvar getInputEl = (ctx) => ctx.getById(getInputId(ctx));\nvar getPositionerEl = (ctx) => ctx.getById(getPositionerId(ctx));\nvar getControlEl = (ctx) => ctx.getById(getControlId(ctx));\nvar getTriggerEl = (ctx) => ctx.getById(getTriggerId(ctx));\nvar getClearTriggerEl = (ctx) => ctx.getById(getClearTriggerId(ctx));\nvar getItemEl = (ctx, value) => {\n  if (value == null) return;\n  const selector = `[role=option][data-value=\"${CSS.escape(value)}\"]`;\n  return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.query)(getContentEl(ctx), selector);\n};\nvar focusInputEl = (ctx) => {\n  const inputEl = getInputEl(ctx);\n  if (ctx.isActiveElement(inputEl)) return;\n  inputEl?.focus({ preventScroll: true });\n};\nvar focusTriggerEl = (ctx) => {\n  const triggerEl = getTriggerEl(ctx);\n  if (ctx.isActiveElement(triggerEl)) return;\n  triggerEl?.focus({ preventScroll: true });\n};\n\n// src/combobox.connect.ts\nfunction connect(service, normalize) {\n  const { context, prop, state, send, scope, computed, event } = service;\n  const translations = prop(\"translations\");\n  const collection2 = prop(\"collection\");\n  const disabled = prop(\"disabled\");\n  const interactive = computed(\"isInteractive\");\n  const invalid = prop(\"invalid\");\n  const readOnly = prop(\"readOnly\");\n  const open = state.hasTag(\"open\");\n  const focused = state.hasTag(\"focused\");\n  const composite = prop(\"composite\");\n  const highlightedValue = context.get(\"highlightedValue\");\n  const popperStyles = (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacementStyles)({\n    ...prop(\"positioning\"),\n    placement: context.get(\"currentPlacement\")\n  });\n  function getItemState(props2) {\n    const disabled2 = collection2.getItemDisabled(props2.item);\n    const value = collection2.getItemValue(props2.item);\n    (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.ensure)(value, () => `[zag-js] No value found for item ${JSON.stringify(props2.item)}`);\n    return {\n      value,\n      disabled: Boolean(disabled2 || disabled2),\n      highlighted: highlightedValue === value,\n      selected: context.get(\"value\").includes(value)\n    };\n  }\n  return {\n    focused,\n    open,\n    inputValue: context.get(\"inputValue\"),\n    highlightedValue,\n    highlightedItem: context.get(\"highlightedItem\"),\n    value: context.get(\"value\"),\n    valueAsString: context.get(\"valueAsString\"),\n    hasSelectedItems: computed(\"hasSelectedItems\"),\n    selectedItems: context.get(\"selectedItems\"),\n    collection: prop(\"collection\"),\n    multiple: !!prop(\"multiple\"),\n    disabled: !!disabled,\n    syncSelectedItems() {\n      send({ type: \"SELECTED_ITEMS.SYNC\" });\n    },\n    reposition(options = {}) {\n      send({ type: \"POSITIONING.SET\", options });\n    },\n    setHighlightValue(value) {\n      send({ type: \"HIGHLIGHTED_VALUE.SET\", value });\n    },\n    selectValue(value) {\n      send({ type: \"ITEM.SELECT\", value });\n    },\n    setValue(value) {\n      send({ type: \"VALUE.SET\", value });\n    },\n    setInputValue(value) {\n      send({ type: \"INPUT_VALUE.SET\", value });\n    },\n    clearValue(value) {\n      if (value != null) {\n        send({ type: \"ITEM.CLEAR\", value });\n      } else {\n        send({ type: \"VALUE.CLEAR\" });\n      }\n    },\n    focus() {\n      getInputEl(scope)?.focus();\n    },\n    setOpen(nextOpen) {\n      const open2 = state.hasTag(\"open\");\n      if (open2 === nextOpen) return;\n      send({ type: nextOpen ? \"OPEN\" : \"CLOSE\" });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        dir: prop(\"dir\"),\n        id: getRootId(scope),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(invalid),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(readOnly)\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        dir: prop(\"dir\"),\n        htmlFor: getInputId(scope),\n        id: getLabelId(scope),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(readOnly),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(invalid),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(focused),\n        onClick(event2) {\n          if (composite) return;\n          event2.preventDefault();\n          getTriggerEl(scope)?.focus({ preventScroll: true });\n        }\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        dir: prop(\"dir\"),\n        id: getControlId(scope),\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(focused),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(invalid)\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        ...parts.positioner.attrs,\n        dir: prop(\"dir\"),\n        id: getPositionerId(scope),\n        style: popperStyles.floating\n      });\n    },\n    getInputProps() {\n      return normalize.input({\n        ...parts.input.attrs,\n        dir: prop(\"dir\"),\n        \"aria-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.ariaAttr)(invalid),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(invalid),\n        \"data-autofocus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(prop(\"autoFocus\")),\n        name: prop(\"name\"),\n        form: prop(\"form\"),\n        disabled,\n        required: prop(\"required\"),\n        autoComplete: \"off\",\n        autoCorrect: \"off\",\n        autoCapitalize: \"none\",\n        spellCheck: \"false\",\n        readOnly,\n        placeholder: prop(\"placeholder\"),\n        id: getInputId(scope),\n        type: \"text\",\n        role: \"combobox\",\n        defaultValue: context.get(\"inputValue\"),\n        \"aria-autocomplete\": computed(\"autoComplete\") ? \"both\" : \"list\",\n        \"aria-controls\": getContentId(scope),\n        \"aria-expanded\": open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-activedescendant\": highlightedValue ? getItemId(scope, highlightedValue) : void 0,\n        onClick(event2) {\n          if (event2.defaultPrevented) return;\n          if (!prop(\"openOnClick\")) return;\n          if (!interactive) return;\n          send({ type: \"INPUT.CLICK\" });\n        },\n        onFocus() {\n          if (disabled) return;\n          send({ type: \"INPUT.FOCUS\" });\n        },\n        onBlur() {\n          if (disabled) return;\n          send({ type: \"INPUT.BLUR\" });\n        },\n        onChange(event2) {\n          send({ type: \"INPUT.CHANGE\", value: event2.currentTarget.value });\n        },\n        onKeyDown(event2) {\n          if (event2.defaultPrevented) return;\n          if (!interactive) return;\n          if (event2.ctrlKey || event2.shiftKey || (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.isComposingEvent)(event2)) return;\n          const openOnKeyPress = prop(\"openOnKeyPress\");\n          const isModifierKey = event2.ctrlKey || event2.metaKey || event2.shiftKey;\n          const keypress = true;\n          const keymap = {\n            ArrowDown(event3) {\n              if (!openOnKeyPress && !open) return;\n              send({ type: event3.altKey ? \"OPEN\" : \"INPUT.ARROW_DOWN\", keypress });\n              event3.preventDefault();\n            },\n            ArrowUp() {\n              if (!openOnKeyPress && !open) return;\n              send({ type: event2.altKey ? \"CLOSE\" : \"INPUT.ARROW_UP\", keypress });\n              event2.preventDefault();\n            },\n            Home(event3) {\n              if (isModifierKey) return;\n              send({ type: \"INPUT.HOME\", keypress });\n              if (open) {\n                event3.preventDefault();\n              }\n            },\n            End(event3) {\n              if (isModifierKey) return;\n              send({ type: \"INPUT.END\", keypress });\n              if (open) {\n                event3.preventDefault();\n              }\n            },\n            Enter(event3) {\n              send({ type: \"INPUT.ENTER\", keypress });\n              if (open) {\n                event3.preventDefault();\n              }\n              if (highlightedValue == null) return;\n              const itemEl = getItemEl(scope, highlightedValue);\n              if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.isAnchorElement)(itemEl)) {\n                prop(\"navigate\")?.({ value: highlightedValue, node: itemEl, href: itemEl.href });\n              }\n            },\n            Escape() {\n              send({ type: \"INPUT.ESCAPE\", keypress });\n              event2.preventDefault();\n            }\n          };\n          const key = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.getEventKey)(event2, { dir: prop(\"dir\") });\n          const exec = keymap[key];\n          exec?.(event2);\n        }\n      });\n    },\n    getTriggerProps(props2 = {}) {\n      return normalize.button({\n        ...parts.trigger.attrs,\n        dir: prop(\"dir\"),\n        id: getTriggerId(scope),\n        \"aria-haspopup\": composite ? \"listbox\" : \"dialog\",\n        type: \"button\",\n        tabIndex: props2.focusable ? void 0 : -1,\n        \"aria-label\": translations.triggerLabel,\n        \"aria-expanded\": open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-controls\": open ? getContentId(scope) : void 0,\n        disabled,\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(invalid),\n        \"data-focusable\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(props2.focusable),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(readOnly),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(disabled),\n        onFocus() {\n          if (!props2.focusable) return;\n          send({ type: \"INPUT.FOCUS\", src: \"trigger\" });\n        },\n        onClick(event2) {\n          if (event2.defaultPrevented) return;\n          if (!interactive) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.isLeftClick)(event2)) return;\n          send({ type: \"TRIGGER.CLICK\" });\n        },\n        onPointerDown(event2) {\n          if (!interactive) return;\n          if (event2.pointerType === \"touch\") return;\n          event2.preventDefault();\n          queueMicrotask(() => {\n            getInputEl(scope)?.focus({ preventScroll: true });\n          });\n        },\n        onKeyDown(event2) {\n          if (event2.defaultPrevented) return;\n          if (composite) return;\n          const keyMap = {\n            ArrowDown() {\n              send({ type: \"INPUT.ARROW_DOWN\", src: \"trigger\" });\n            },\n            ArrowUp() {\n              send({ type: \"INPUT.ARROW_UP\", src: \"trigger\" });\n            }\n          };\n          const key = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.getEventKey)(event2, { dir: prop(\"dir\") });\n          const exec = keyMap[key];\n          if (exec) {\n            exec(event2);\n            event2.preventDefault();\n          }\n        }\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        dir: prop(\"dir\"),\n        id: getContentId(scope),\n        role: !composite ? \"dialog\" : \"listbox\",\n        tabIndex: -1,\n        hidden: !open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-placement\": context.get(\"currentPlacement\"),\n        \"aria-labelledby\": getLabelId(scope),\n        \"aria-multiselectable\": prop(\"multiple\") && composite ? true : void 0,\n        \"data-empty\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(collection2.size === 0),\n        onPointerDown(event2) {\n          event2.preventDefault();\n        }\n      });\n    },\n    getListProps() {\n      return normalize.element({\n        ...parts.list.attrs,\n        role: !composite ? \"listbox\" : void 0,\n        \"data-empty\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(collection2.size === 0),\n        \"aria-labelledby\": getLabelId(scope),\n        \"aria-multiselectable\": prop(\"multiple\") && !composite ? true : void 0\n      });\n    },\n    getClearTriggerProps() {\n      return normalize.button({\n        ...parts.clearTrigger.attrs,\n        dir: prop(\"dir\"),\n        id: getClearTriggerId(scope),\n        type: \"button\",\n        tabIndex: -1,\n        disabled,\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(invalid),\n        \"aria-label\": translations.clearTriggerLabel,\n        \"aria-controls\": getInputId(scope),\n        hidden: !context.get(\"value\").length,\n        onPointerDown(event2) {\n          event2.preventDefault();\n        },\n        onClick(event2) {\n          if (event2.defaultPrevented) return;\n          if (!interactive) return;\n          send({ type: \"VALUE.CLEAR\", src: \"clear-trigger\" });\n        }\n      });\n    },\n    getItemState,\n    getItemProps(props2) {\n      const itemState = getItemState(props2);\n      const value = itemState.value;\n      return normalize.element({\n        ...parts.item.attrs,\n        dir: prop(\"dir\"),\n        id: getItemId(scope, value),\n        role: \"option\",\n        tabIndex: -1,\n        \"data-highlighted\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(itemState.highlighted),\n        \"data-state\": itemState.selected ? \"checked\" : \"unchecked\",\n        \"aria-selected\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.ariaAttr)(itemState.highlighted),\n        \"aria-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.ariaAttr)(itemState.disabled),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(itemState.disabled),\n        \"data-value\": itemState.value,\n        onPointerMove() {\n          if (itemState.disabled) return;\n          if (itemState.highlighted) return;\n          send({ type: \"ITEM.POINTER_MOVE\", value });\n        },\n        onPointerLeave() {\n          if (props2.persistFocus) return;\n          if (itemState.disabled) return;\n          const prev = event.previous();\n          const mouseMoved = prev?.type.includes(\"POINTER\");\n          if (!mouseMoved) return;\n          send({ type: \"ITEM.POINTER_LEAVE\", value });\n        },\n        onClick(event2) {\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.isDownloadingEvent)(event2)) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.isOpeningInNewTab)(event2)) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.isContextMenuEvent)(event2)) return;\n          if (itemState.disabled) return;\n          send({ type: \"ITEM.CLICK\", src: \"click\", value });\n        }\n      });\n    },\n    getItemTextProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        ...parts.itemText.attrs,\n        dir: prop(\"dir\"),\n        \"data-state\": itemState.selected ? \"checked\" : \"unchecked\",\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(itemState.disabled),\n        \"data-highlighted\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(itemState.highlighted)\n      });\n    },\n    getItemIndicatorProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        \"aria-hidden\": true,\n        ...parts.itemIndicator.attrs,\n        dir: prop(\"dir\"),\n        \"data-state\": itemState.selected ? \"checked\" : \"unchecked\",\n        hidden: !itemState.selected\n      });\n    },\n    getItemGroupProps(props2) {\n      const { id } = props2;\n      return normalize.element({\n        ...parts.itemGroup.attrs,\n        dir: prop(\"dir\"),\n        id: getItemGroupId(scope, id),\n        \"aria-labelledby\": getItemGroupLabelId(scope, id),\n        \"data-empty\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(collection2.size === 0),\n        role: \"group\"\n      });\n    },\n    getItemGroupLabelProps(props2) {\n      const { htmlFor } = props2;\n      return normalize.element({\n        ...parts.itemGroupLabel.attrs,\n        dir: prop(\"dir\"),\n        id: getItemGroupLabelId(scope, htmlFor),\n        role: \"presentation\"\n      });\n    }\n  };\n}\nvar { guards, createMachine, choose } = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_5__.setup)();\nvar { and, not } = guards;\nvar machine = createMachine({\n  props({ props: props2 }) {\n    return {\n      loopFocus: true,\n      openOnClick: false,\n      defaultValue: [],\n      closeOnSelect: !props2.multiple,\n      allowCustomValue: false,\n      inputBehavior: \"none\",\n      selectionBehavior: props2.multiple ? \"clear\" : \"replace\",\n      openOnKeyPress: true,\n      openOnChange: true,\n      composite: true,\n      navigate({ node }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.clickIfLink)(node);\n      },\n      collection: collection.empty(),\n      ...props2,\n      positioning: {\n        placement: \"bottom\",\n        sameWidth: true,\n        ...props2.positioning\n      },\n      translations: {\n        triggerLabel: \"Toggle suggestions\",\n        clearTriggerLabel: \"Clear value\",\n        ...props2.translations\n      }\n    };\n  },\n  initialState({ prop }) {\n    const open = prop(\"open\") || prop(\"defaultOpen\");\n    return open ? \"suggesting\" : \"idle\";\n  },\n  context({ prop, bindable, getContext }) {\n    return {\n      currentPlacement: bindable(() => ({\n        defaultValue: void 0\n      })),\n      value: bindable(() => ({\n        defaultValue: prop(\"defaultValue\"),\n        value: prop(\"value\"),\n        isEqual: _zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.isEqual,\n        hash(value) {\n          return value.join(\",\");\n        },\n        onChange(value) {\n          const context = getContext();\n          const prevSelectedItems = context.get(\"selectedItems\");\n          const collection2 = prop(\"collection\");\n          const nextItems = value.map((v) => {\n            const item = prevSelectedItems.find((item2) => collection2.getItemValue(item2) === v);\n            return item || collection2.find(v);\n          });\n          context.set(\"selectedItems\", nextItems);\n          context.set(\"valueAsString\", collection2.stringifyItems(nextItems));\n          prop(\"onValueChange\")?.({ value, items: nextItems });\n        }\n      })),\n      highlightedValue: bindable(() => ({\n        defaultValue: prop(\"defaultHighlightedValue\") || null,\n        value: prop(\"highlightedValue\"),\n        onChange(value) {\n          const item = prop(\"collection\").find(value);\n          prop(\"onHighlightChange\")?.({ highlightedValue: value, highlightedItem: item });\n        }\n      })),\n      inputValue: bindable(() => {\n        let inputValue = prop(\"inputValue\") || prop(\"defaultInputValue\") || \"\";\n        const value = prop(\"defaultValue\") || prop(\"value\") || [];\n        if (!inputValue.trim() && !prop(\"multiple\")) {\n          const valueAsString = prop(\"collection\").stringifyMany(value);\n          inputValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.match)(prop(\"selectionBehavior\"), {\n            preserve: inputValue || valueAsString,\n            replace: valueAsString,\n            clear: \"\"\n          });\n        }\n        return {\n          defaultValue: inputValue,\n          value: prop(\"inputValue\"),\n          onChange(value2) {\n            prop(\"onInputValueChange\")?.({ inputValue: value2 });\n          }\n        };\n      }),\n      highlightedItem: bindable(() => {\n        const highlightedValue = prop(\"highlightedValue\");\n        const highlightedItem = prop(\"collection\").find(highlightedValue);\n        return { defaultValue: highlightedItem };\n      }),\n      selectedItems: bindable(() => {\n        const value = prop(\"value\") || prop(\"defaultValue\") || [];\n        const selectedItems = prop(\"collection\").findMany(value);\n        return { defaultValue: selectedItems };\n      }),\n      valueAsString: bindable(() => {\n        const value = prop(\"value\") || prop(\"defaultValue\") || [];\n        const valueAsString = prop(\"collection\").stringifyMany(value);\n        return { sync: true, defaultValue: valueAsString };\n      })\n    };\n  },\n  computed: {\n    isInputValueEmpty: ({ context }) => context.get(\"inputValue\").length === 0,\n    isInteractive: ({ prop }) => !(prop(\"readOnly\") || prop(\"disabled\")),\n    autoComplete: ({ prop }) => prop(\"inputBehavior\") === \"autocomplete\",\n    autoHighlight: ({ prop }) => prop(\"inputBehavior\") === \"autohighlight\",\n    hasSelectedItems: ({ context }) => context.get(\"value\").length > 0\n  },\n  watch({ context, prop, track, action }) {\n    track([() => context.hash(\"value\")], () => {\n      action([\"syncSelectedItems\"]);\n    });\n    track([() => context.get(\"inputValue\")], () => {\n      action([\"syncInputValue\"]);\n    });\n    track([() => context.get(\"highlightedValue\")], () => {\n      action([\"syncHighlightedItem\", \"autofillInputValue\"]);\n    });\n    track([() => prop(\"open\")], () => {\n      action([\"toggleVisibility\"]);\n    });\n  },\n  on: {\n    \"SELECTED_ITEMS.SYNC\": {\n      actions: [\"syncSelectedItems\"]\n    },\n    \"HIGHLIGHTED_VALUE.SET\": {\n      actions: [\"setHighlightedItem\"]\n    },\n    \"ITEM.SELECT\": {\n      actions: [\"selectItem\"]\n    },\n    \"ITEM.CLEAR\": {\n      actions: [\"clearItem\"]\n    },\n    \"VALUE.SET\": {\n      actions: [\"setValue\"]\n    },\n    \"INPUT_VALUE.SET\": {\n      actions: [\"setInputValue\"]\n    },\n    \"POSITIONING.SET\": {\n      actions: [\"reposition\"]\n    }\n  },\n  entry: choose([\n    {\n      guard: \"autoFocus\",\n      actions: [\"setInitialFocus\"]\n    }\n  ]),\n  states: {\n    idle: {\n      tags: [\"idle\", \"closed\"],\n      entry: [\"scrollContentToTop\", \"clearHighlightedItem\"],\n      on: {\n        \"CONTROLLED.OPEN\": {\n          target: \"interacting\"\n        },\n        \"TRIGGER.CLICK\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"setInitialFocus\", \"highlightFirstSelectedItem\", \"invokeOnOpen\"]\n          },\n          {\n            target: \"interacting\",\n            actions: [\"setInitialFocus\", \"highlightFirstSelectedItem\", \"invokeOnOpen\"]\n          }\n        ],\n        \"INPUT.CLICK\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"highlightFirstSelectedItem\", \"invokeOnOpen\"]\n          },\n          {\n            target: \"interacting\",\n            actions: [\"highlightFirstSelectedItem\", \"invokeOnOpen\"]\n          }\n        ],\n        \"INPUT.FOCUS\": {\n          target: \"focused\"\n        },\n        OPEN: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"interacting\",\n            actions: [\"invokeOnOpen\"]\n          }\n        ],\n        \"VALUE.CLEAR\": {\n          target: \"focused\",\n          actions: [\"clearInputValue\", \"clearSelectedItems\", \"setInitialFocus\"]\n        }\n      }\n    },\n    focused: {\n      tags: [\"focused\", \"closed\"],\n      entry: [\"scrollContentToTop\", \"clearHighlightedItem\"],\n      on: {\n        \"CONTROLLED.OPEN\": [\n          {\n            guard: \"isChangeEvent\",\n            target: \"suggesting\"\n          },\n          {\n            target: \"interacting\"\n          }\n        ],\n        \"INPUT.CHANGE\": [\n          {\n            guard: and(\"isOpenControlled\", \"openOnChange\"),\n            actions: [\"setInputValue\", \"invokeOnOpen\", \"highlightFirstItemIfNeeded\"]\n          },\n          {\n            guard: \"openOnChange\",\n            target: \"suggesting\",\n            actions: [\"setInputValue\", \"invokeOnOpen\", \"highlightFirstItemIfNeeded\"]\n          },\n          {\n            actions: [\"setInputValue\"]\n          }\n        ],\n        \"LAYER.INTERACT_OUTSIDE\": {\n          target: \"idle\"\n        },\n        \"INPUT.ESCAPE\": {\n          guard: and(\"isCustomValue\", not(\"allowCustomValue\")),\n          actions: [\"revertInputValue\"]\n        },\n        \"INPUT.BLUR\": {\n          target: \"idle\"\n        },\n        \"INPUT.CLICK\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"highlightFirstSelectedItem\", \"invokeOnOpen\"]\n          },\n          {\n            target: \"interacting\",\n            actions: [\"highlightFirstSelectedItem\", \"invokeOnOpen\"]\n          }\n        ],\n        \"TRIGGER.CLICK\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"setInitialFocus\", \"highlightFirstSelectedItem\", \"invokeOnOpen\"]\n          },\n          {\n            target: \"interacting\",\n            actions: [\"setInitialFocus\", \"highlightFirstSelectedItem\", \"invokeOnOpen\"]\n          }\n        ],\n        \"INPUT.ARROW_DOWN\": [\n          // == group 1 ==\n          {\n            guard: and(\"isOpenControlled\", \"autoComplete\"),\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            guard: \"autoComplete\",\n            target: \"interacting\",\n            actions: [\"invokeOnOpen\"]\n          },\n          // == group 2 ==\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"highlightFirstOrSelectedItem\", \"invokeOnOpen\"]\n          },\n          {\n            target: \"interacting\",\n            actions: [\"highlightFirstOrSelectedItem\", \"invokeOnOpen\"]\n          }\n        ],\n        \"INPUT.ARROW_UP\": [\n          // == group 1 ==\n          {\n            guard: \"autoComplete\",\n            target: \"interacting\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            guard: \"autoComplete\",\n            target: \"interacting\",\n            actions: [\"invokeOnOpen\"]\n          },\n          // == group 2 ==\n          {\n            target: \"interacting\",\n            actions: [\"highlightLastOrSelectedItem\", \"invokeOnOpen\"]\n          },\n          {\n            target: \"interacting\",\n            actions: [\"highlightLastOrSelectedItem\", \"invokeOnOpen\"]\n          }\n        ],\n        OPEN: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"interacting\",\n            actions: [\"invokeOnOpen\"]\n          }\n        ],\n        \"VALUE.CLEAR\": {\n          actions: [\"clearInputValue\", \"clearSelectedItems\"]\n        }\n      }\n    },\n    interacting: {\n      tags: [\"open\", \"focused\"],\n      entry: [\"setInitialFocus\"],\n      effects: [\"scrollToHighlightedItem\", \"trackDismissableLayer\", \"trackPlacement\", \"hideOtherElements\"],\n      on: {\n        \"CONTROLLED.CLOSE\": [\n          {\n            guard: \"restoreFocus\",\n            target: \"focused\",\n            actions: [\"setFinalFocus\"]\n          },\n          {\n            target: \"idle\"\n          }\n        ],\n        \"INPUT.HOME\": {\n          actions: [\"highlightFirstItem\"]\n        },\n        \"INPUT.END\": {\n          actions: [\"highlightLastItem\"]\n        },\n        \"INPUT.ARROW_DOWN\": [\n          {\n            guard: and(\"autoComplete\", \"isLastItemHighlighted\"),\n            actions: [\"clearHighlightedItem\", \"scrollContentToTop\"]\n          },\n          {\n            actions: [\"highlightNextItem\"]\n          }\n        ],\n        \"INPUT.ARROW_UP\": [\n          {\n            guard: and(\"autoComplete\", \"isFirstItemHighlighted\"),\n            actions: [\"clearHighlightedItem\"]\n          },\n          {\n            actions: [\"highlightPrevItem\"]\n          }\n        ],\n        \"INPUT.ENTER\": [\n          // == group 1 ==\n          {\n            guard: and(\"isOpenControlled\", \"isCustomValue\", not(\"hasHighlightedItem\"), not(\"allowCustomValue\")),\n            actions: [\"revertInputValue\", \"invokeOnClose\"]\n          },\n          {\n            guard: and(\"isCustomValue\", not(\"hasHighlightedItem\"), not(\"allowCustomValue\")),\n            target: \"focused\",\n            actions: [\"revertInputValue\", \"invokeOnClose\"]\n          },\n          // == group 2 ==\n          {\n            guard: and(\"isOpenControlled\", \"closeOnSelect\"),\n            actions: [\"selectHighlightedItem\", \"invokeOnClose\"]\n          },\n          {\n            guard: \"closeOnSelect\",\n            target: \"focused\",\n            actions: [\"selectHighlightedItem\", \"invokeOnClose\", \"setFinalFocus\"]\n          },\n          {\n            actions: [\"selectHighlightedItem\"]\n          }\n        ],\n        \"INPUT.CHANGE\": [\n          {\n            guard: \"autoComplete\",\n            target: \"suggesting\",\n            actions: [\"setInputValue\"]\n          },\n          {\n            target: \"suggesting\",\n            actions: [\"clearHighlightedItem\", \"setInputValue\"]\n          }\n        ],\n        \"ITEM.POINTER_MOVE\": {\n          actions: [\"setHighlightedItem\"]\n        },\n        \"ITEM.POINTER_LEAVE\": {\n          actions: [\"clearHighlightedItem\"]\n        },\n        \"ITEM.CLICK\": [\n          {\n            guard: and(\"isOpenControlled\", \"closeOnSelect\"),\n            actions: [\"selectItem\", \"invokeOnClose\"]\n          },\n          {\n            guard: \"closeOnSelect\",\n            target: \"focused\",\n            actions: [\"selectItem\", \"invokeOnClose\", \"setFinalFocus\"]\n          },\n          {\n            actions: [\"selectItem\"]\n          }\n        ],\n        \"LAYER.ESCAPE\": [\n          {\n            guard: and(\"isOpenControlled\", \"autoComplete\"),\n            actions: [\"syncInputValue\", \"invokeOnClose\"]\n          },\n          {\n            guard: \"autoComplete\",\n            target: \"focused\",\n            actions: [\"syncInputValue\", \"invokeOnClose\"]\n          },\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"focused\",\n            actions: [\"invokeOnClose\", \"setFinalFocus\"]\n          }\n        ],\n        \"TRIGGER.CLICK\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"focused\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        \"LAYER.INTERACT_OUTSIDE\": [\n          // == group 1 ==\n          {\n            guard: and(\"isOpenControlled\", \"isCustomValue\", not(\"allowCustomValue\")),\n            actions: [\"revertInputValue\", \"invokeOnClose\"]\n          },\n          {\n            guard: and(\"isCustomValue\", not(\"allowCustomValue\")),\n            target: \"idle\",\n            actions: [\"revertInputValue\", \"invokeOnClose\"]\n          },\n          // == group 2 ==\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"idle\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        CLOSE: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"focused\",\n            actions: [\"invokeOnClose\", \"setFinalFocus\"]\n          }\n        ],\n        \"VALUE.CLEAR\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"clearInputValue\", \"clearSelectedItems\", \"invokeOnClose\"]\n          },\n          {\n            target: \"focused\",\n            actions: [\"clearInputValue\", \"clearSelectedItems\", \"invokeOnClose\", \"setFinalFocus\"]\n          }\n        ]\n      }\n    },\n    suggesting: {\n      tags: [\"open\", \"focused\"],\n      effects: [\n        \"trackDismissableLayer\",\n        \"scrollToHighlightedItem\",\n        \"trackPlacement\",\n        \"trackChildNodes\",\n        \"hideOtherElements\"\n      ],\n      entry: [\"setInitialFocus\"],\n      on: {\n        \"CONTROLLED.CLOSE\": [\n          {\n            guard: \"restoreFocus\",\n            target: \"focused\",\n            actions: [\"setFinalFocus\"]\n          },\n          {\n            target: \"idle\"\n          }\n        ],\n        CHILDREN_CHANGE: {\n          guard: \"autoHighlight\",\n          actions: [\"highlightFirstItem\"]\n        },\n        \"INPUT.ARROW_DOWN\": {\n          target: \"interacting\",\n          actions: [\"highlightNextItem\"]\n        },\n        \"INPUT.ARROW_UP\": {\n          target: \"interacting\",\n          actions: [\"highlightPrevItem\"]\n        },\n        \"INPUT.HOME\": {\n          target: \"interacting\",\n          actions: [\"highlightFirstItem\"]\n        },\n        \"INPUT.END\": {\n          target: \"interacting\",\n          actions: [\"highlightLastItem\"]\n        },\n        \"INPUT.ENTER\": [\n          // == group 1 ==\n          {\n            guard: and(\"isOpenControlled\", \"isCustomValue\", not(\"hasHighlightedItem\"), not(\"allowCustomValue\")),\n            actions: [\"revertInputValue\", \"invokeOnClose\"]\n          },\n          {\n            guard: and(\"isCustomValue\", not(\"hasHighlightedItem\"), not(\"allowCustomValue\")),\n            target: \"focused\",\n            actions: [\"revertInputValue\", \"invokeOnClose\"]\n          },\n          // == group 2 ==\n          {\n            guard: and(\"isOpenControlled\", \"closeOnSelect\"),\n            actions: [\"selectHighlightedItem\", \"invokeOnClose\"]\n          },\n          {\n            guard: \"closeOnSelect\",\n            target: \"focused\",\n            actions: [\"selectHighlightedItem\", \"invokeOnClose\", \"setFinalFocus\"]\n          },\n          {\n            actions: [\"selectHighlightedItem\"]\n          }\n        ],\n        \"INPUT.CHANGE\": {\n          actions: [\"setInputValue\"]\n        },\n        \"LAYER.ESCAPE\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"focused\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        \"ITEM.POINTER_MOVE\": {\n          target: \"interacting\",\n          actions: [\"setHighlightedItem\"]\n        },\n        \"ITEM.POINTER_LEAVE\": {\n          actions: [\"clearHighlightedItem\"]\n        },\n        \"LAYER.INTERACT_OUTSIDE\": [\n          // == group 1 ==\n          {\n            guard: and(\"isOpenControlled\", \"isCustomValue\", not(\"allowCustomValue\")),\n            actions: [\"revertInputValue\", \"invokeOnClose\"]\n          },\n          {\n            guard: and(\"isCustomValue\", not(\"allowCustomValue\")),\n            target: \"idle\",\n            actions: [\"revertInputValue\", \"invokeOnClose\"]\n          },\n          // == group 2 ==\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"idle\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        \"TRIGGER.CLICK\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"focused\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        \"ITEM.CLICK\": [\n          {\n            guard: and(\"isOpenControlled\", \"closeOnSelect\"),\n            actions: [\"selectItem\", \"invokeOnClose\"]\n          },\n          {\n            guard: \"closeOnSelect\",\n            target: \"focused\",\n            actions: [\"selectItem\", \"invokeOnClose\", \"setFinalFocus\"]\n          },\n          {\n            actions: [\"selectItem\"]\n          }\n        ],\n        CLOSE: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"focused\",\n            actions: [\"invokeOnClose\", \"setFinalFocus\"]\n          }\n        ],\n        \"VALUE.CLEAR\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"clearInputValue\", \"clearSelectedItems\", \"invokeOnClose\"]\n          },\n          {\n            target: \"focused\",\n            actions: [\"clearInputValue\", \"clearSelectedItems\", \"invokeOnClose\", \"setFinalFocus\"]\n          }\n        ]\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      isInputValueEmpty: ({ computed }) => computed(\"isInputValueEmpty\"),\n      autoComplete: ({ computed, prop }) => computed(\"autoComplete\") && !prop(\"multiple\"),\n      autoHighlight: ({ computed }) => computed(\"autoHighlight\"),\n      isFirstItemHighlighted: ({ prop, context }) => prop(\"collection\").firstValue === context.get(\"highlightedValue\"),\n      isLastItemHighlighted: ({ prop, context }) => prop(\"collection\").lastValue === context.get(\"highlightedValue\"),\n      isCustomValue: ({ context }) => context.get(\"inputValue\") !== context.get(\"valueAsString\"),\n      allowCustomValue: ({ prop }) => !!prop(\"allowCustomValue\"),\n      hasHighlightedItem: ({ context }) => context.get(\"highlightedValue\") != null,\n      closeOnSelect: ({ prop }) => !!prop(\"closeOnSelect\"),\n      isOpenControlled: ({ prop }) => prop(\"open\") != null,\n      openOnChange: ({ prop, context }) => {\n        const openOnChange = prop(\"openOnChange\");\n        if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.isBoolean)(openOnChange)) return openOnChange;\n        return !!openOnChange?.({ inputValue: context.get(\"inputValue\") });\n      },\n      restoreFocus: ({ event }) => event.restoreFocus == null ? true : !!event.restoreFocus,\n      isChangeEvent: ({ event }) => event.previousEvent?.type === \"INPUT.CHANGE\",\n      autoFocus: ({ prop }) => !!prop(\"autoFocus\")\n    },\n    effects: {\n      trackDismissableLayer({ send, prop, scope }) {\n        if (prop(\"disableLayer\")) return;\n        const contentEl = () => getContentEl(scope);\n        return (0,_zag_js_dismissable__WEBPACK_IMPORTED_MODULE_6__.trackDismissableElement)(contentEl, {\n          defer: true,\n          exclude: () => [getInputEl(scope), getTriggerEl(scope), getClearTriggerEl(scope)],\n          onFocusOutside: prop(\"onFocusOutside\"),\n          onPointerDownOutside: prop(\"onPointerDownOutside\"),\n          onInteractOutside: prop(\"onInteractOutside\"),\n          onEscapeKeyDown(event) {\n            event.preventDefault();\n            event.stopPropagation();\n            send({ type: \"LAYER.ESCAPE\" });\n          },\n          onDismiss() {\n            send({ type: \"LAYER.INTERACT_OUTSIDE\", restoreFocus: false });\n          }\n        });\n      },\n      hideOtherElements({ scope }) {\n        return (0,_zag_js_aria_hidden__WEBPACK_IMPORTED_MODULE_7__.ariaHidden)([\n          getInputEl(scope),\n          getContentEl(scope),\n          getTriggerEl(scope),\n          getClearTriggerEl(scope)\n        ]);\n      },\n      trackPlacement({ context, prop, scope }) {\n        const anchorEl = () => getControlEl(scope) || getTriggerEl(scope);\n        const positionerEl = () => getPositionerEl(scope);\n        context.set(\"currentPlacement\", prop(\"positioning\").placement);\n        return (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacement)(anchorEl, positionerEl, {\n          ...prop(\"positioning\"),\n          defer: true,\n          onComplete(data) {\n            context.set(\"currentPlacement\", data.placement);\n          }\n        });\n      },\n      // in event the options are fetched (async), we still want to auto-highlight the first option\n      trackChildNodes({ scope, computed, send }) {\n        if (!computed(\"autoHighlight\")) return;\n        const exec = () => send({ type: \"CHILDREN_CHANGE\" });\n        const contentEl = () => getContentEl(scope);\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.observeChildren)(contentEl, {\n          callback: exec,\n          defer: true\n        });\n      },\n      scrollToHighlightedItem({ context, prop, scope, event }) {\n        const inputEl = getInputEl(scope);\n        let cleanups = [];\n        const exec = (immediate) => {\n          const pointer = event.current().type.includes(\"POINTER\");\n          const highlightedValue = context.get(\"highlightedValue\");\n          if (pointer || !highlightedValue) return;\n          const itemEl = getItemEl(scope, highlightedValue);\n          const contentEl = getContentEl(scope);\n          const scrollToIndexFn = prop(\"scrollToIndexFn\");\n          if (scrollToIndexFn) {\n            const highlightedIndex = prop(\"collection\").indexOf(highlightedValue);\n            scrollToIndexFn({ index: highlightedIndex, immediate });\n            return;\n          }\n          const raf_cleanup = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.raf)(() => {\n            (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.scrollIntoView)(itemEl, { rootEl: contentEl, block: \"nearest\" });\n          });\n          cleanups.push(raf_cleanup);\n        };\n        const rafCleanup = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.raf)(() => exec(true));\n        cleanups.push(rafCleanup);\n        const observerCleanup = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.observeAttributes)(inputEl, {\n          attributes: [\"aria-activedescendant\"],\n          callback: () => exec(false)\n        });\n        cleanups.push(observerCleanup);\n        return () => {\n          cleanups.forEach((cleanup) => cleanup());\n        };\n      }\n    },\n    actions: {\n      reposition({ context, prop, scope, event }) {\n        const controlEl = () => getControlEl(scope);\n        const positionerEl = () => getPositionerEl(scope);\n        (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacement)(controlEl, positionerEl, {\n          ...prop(\"positioning\"),\n          ...event.options,\n          defer: true,\n          listeners: false,\n          onComplete(data) {\n            context.set(\"currentPlacement\", data.placement);\n          }\n        });\n      },\n      setHighlightedItem(params) {\n        const { context, event } = params;\n        if (event.value == null) return;\n        context.set(\"highlightedValue\", event.value);\n      },\n      clearHighlightedItem(params) {\n        const { context } = params;\n        context.set(\"highlightedValue\", null);\n      },\n      selectHighlightedItem(params) {\n        const { context, prop } = params;\n        const highlightedValue = context.get(\"highlightedValue\");\n        if (!highlightedValue) return;\n        const nextValue = prop(\"multiple\") ? (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.addOrRemove)(context.get(\"value\"), highlightedValue) : [highlightedValue];\n        prop(\"onSelect\")?.({ value: nextValue, itemValue: highlightedValue });\n        context.set(\"value\", nextValue);\n        context.set(\"inputValue\", getInputValue(params));\n      },\n      selectItem(params) {\n        const { context, event, flush, prop } = params;\n        if (event.value == null) return;\n        flush(() => {\n          const nextValue = prop(\"multiple\") ? (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.addOrRemove)(context.get(\"value\"), event.value) : [event.value];\n          prop(\"onSelect\")?.({ value: nextValue, itemValue: event.value });\n          context.set(\"value\", nextValue);\n          context.set(\"inputValue\", getInputValue(params));\n        });\n      },\n      clearItem(params) {\n        const { context, event, flush } = params;\n        if (event.value == null) return;\n        flush(() => {\n          const nextValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.remove)(context.get(\"value\"), event.value);\n          context.set(\"value\", nextValue);\n          context.set(\"inputValue\", getInputValue(params));\n        });\n      },\n      setInitialFocus({ scope }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.raf)(() => {\n          focusInputEl(scope);\n        });\n      },\n      setFinalFocus({ scope }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.raf)(() => {\n          const triggerEl = getTriggerEl(scope);\n          if (triggerEl?.dataset.focusable == null) {\n            focusInputEl(scope);\n          } else {\n            focusTriggerEl(scope);\n          }\n        });\n      },\n      syncInputValue({ context, scope, event }) {\n        const inputEl = getInputEl(scope);\n        if (!inputEl) return;\n        inputEl.value = context.get(\"inputValue\");\n        queueMicrotask(() => {\n          if (event.current().type === \"INPUT.CHANGE\") return;\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.setCaretToEnd)(inputEl);\n        });\n      },\n      setInputValue({ context, event }) {\n        context.set(\"inputValue\", event.value);\n      },\n      clearInputValue({ context }) {\n        context.set(\"inputValue\", \"\");\n      },\n      revertInputValue({ context, prop, computed }) {\n        const selectionBehavior = prop(\"selectionBehavior\");\n        const inputValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.match)(selectionBehavior, {\n          replace: computed(\"hasSelectedItems\") ? context.get(\"valueAsString\") : \"\",\n          preserve: context.get(\"inputValue\"),\n          clear: \"\"\n        });\n        context.set(\"inputValue\", inputValue);\n      },\n      setValue(params) {\n        const { context, flush, event } = params;\n        flush(() => {\n          context.set(\"value\", event.value);\n          context.set(\"inputValue\", getInputValue(params));\n        });\n      },\n      clearSelectedItems(params) {\n        const { context, flush } = params;\n        flush(() => {\n          context.set(\"value\", []);\n          context.set(\"inputValue\", getInputValue(params));\n        });\n      },\n      scrollContentToTop({ prop, scope }) {\n        const scrollToIndexFn = prop(\"scrollToIndexFn\");\n        if (scrollToIndexFn) {\n          scrollToIndexFn({ index: 0, immediate: true });\n        } else {\n          const contentEl = getContentEl(scope);\n          if (!contentEl) return;\n          contentEl.scrollTop = 0;\n        }\n      },\n      invokeOnOpen({ prop }) {\n        prop(\"onOpenChange\")?.({ open: true });\n      },\n      invokeOnClose({ prop }) {\n        prop(\"onOpenChange\")?.({ open: false });\n      },\n      highlightFirstItem({ context, prop, scope }) {\n        const exec = getContentEl(scope) ? queueMicrotask : _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.raf;\n        exec(() => {\n          const value = prop(\"collection\").firstValue;\n          if (value) context.set(\"highlightedValue\", value);\n        });\n      },\n      highlightFirstItemIfNeeded({ computed, action }) {\n        if (!computed(\"autoHighlight\")) return;\n        action([\"highlightFirstItem\"]);\n      },\n      highlightLastItem({ context, prop, scope }) {\n        const exec = getContentEl(scope) ? queueMicrotask : _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.raf;\n        exec(() => {\n          const value = prop(\"collection\").lastValue;\n          if (value) context.set(\"highlightedValue\", value);\n        });\n      },\n      highlightNextItem({ context, prop }) {\n        let value = null;\n        const highlightedValue = context.get(\"highlightedValue\");\n        const collection2 = prop(\"collection\");\n        if (highlightedValue) {\n          value = collection2.getNextValue(highlightedValue);\n          if (!value && prop(\"loopFocus\")) value = collection2.firstValue;\n        } else {\n          value = collection2.firstValue;\n        }\n        if (value) context.set(\"highlightedValue\", value);\n      },\n      highlightPrevItem({ context, prop }) {\n        let value = null;\n        const highlightedValue = context.get(\"highlightedValue\");\n        const collection2 = prop(\"collection\");\n        if (highlightedValue) {\n          value = collection2.getPreviousValue(highlightedValue);\n          if (!value && prop(\"loopFocus\")) value = collection2.lastValue;\n        } else {\n          value = collection2.lastValue;\n        }\n        if (value) context.set(\"highlightedValue\", value);\n      },\n      highlightFirstSelectedItem({ context, prop }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.raf)(() => {\n          const [value] = prop(\"collection\").sort(context.get(\"value\"));\n          if (value) context.set(\"highlightedValue\", value);\n        });\n      },\n      highlightFirstOrSelectedItem({ context, prop, computed }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.raf)(() => {\n          let value = null;\n          if (computed(\"hasSelectedItems\")) {\n            value = prop(\"collection\").sort(context.get(\"value\"))[0];\n          } else {\n            value = prop(\"collection\").firstValue;\n          }\n          if (value) context.set(\"highlightedValue\", value);\n        });\n      },\n      highlightLastOrSelectedItem({ context, prop, computed }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.raf)(() => {\n          const collection2 = prop(\"collection\");\n          let value = null;\n          if (computed(\"hasSelectedItems\")) {\n            value = collection2.sort(context.get(\"value\"))[0];\n          } else {\n            value = collection2.lastValue;\n          }\n          if (value) context.set(\"highlightedValue\", value);\n        });\n      },\n      autofillInputValue({ context, computed, prop, event, scope }) {\n        const inputEl = getInputEl(scope);\n        const collection2 = prop(\"collection\");\n        if (!computed(\"autoComplete\") || !inputEl || !event.keypress) return;\n        const valueText = collection2.stringify(context.get(\"highlightedValue\"));\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.raf)(() => {\n          inputEl.value = valueText || context.get(\"inputValue\");\n        });\n      },\n      syncSelectedItems(params) {\n        const { context, prop } = params;\n        const inputValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.match)(prop(\"selectionBehavior\"), {\n          preserve: context.get(\"inputValue\"),\n          replace: prop(\"collection\").stringifyMany(context.get(\"value\")),\n          clear: \"\"\n        });\n        context.set(\"selectedItems\", getSelectedItems(params));\n        context.set(\"inputValue\", inputValue);\n      },\n      syncHighlightedItem({ context, prop }) {\n        const item = prop(\"collection\").find(context.get(\"highlightedValue\"));\n        context.set(\"highlightedItem\", item);\n      },\n      toggleVisibility({ event, send, prop }) {\n        send({ type: prop(\"open\") ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\", previousEvent: event });\n      }\n    }\n  }\n});\nfunction getInputValue({ context, prop }) {\n  return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.match)(prop(\"selectionBehavior\"), {\n    preserve: context.get(\"inputValue\"),\n    replace: context.get(\"valueAsString\"),\n    clear: \"\"\n  });\n}\nfunction getSelectedItems({ context, prop }) {\n  const collection2 = prop(\"collection\");\n  return context.get(\"value\").map((v) => {\n    const foundItem = context.get(\"selectedItems\").find((item) => collection2.getItemValue(item) === v);\n    if (foundItem) return foundItem;\n    return collection2.find(v);\n  });\n}\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_8__.createProps)()([\n  \"allowCustomValue\",\n  \"autoFocus\",\n  \"closeOnSelect\",\n  \"collection\",\n  \"composite\",\n  \"defaultHighlightedValue\",\n  \"defaultInputValue\",\n  \"defaultOpen\",\n  \"defaultValue\",\n  \"dir\",\n  \"disabled\",\n  \"disableLayer\",\n  \"form\",\n  \"getRootNode\",\n  \"highlightedValue\",\n  \"id\",\n  \"ids\",\n  \"inputBehavior\",\n  \"inputValue\",\n  \"invalid\",\n  \"loopFocus\",\n  \"multiple\",\n  \"name\",\n  \"navigate\",\n  \"onFocusOutside\",\n  \"onHighlightChange\",\n  \"onInputValueChange\",\n  \"onInteractOutside\",\n  \"onOpenChange\",\n  \"onOpenChange\",\n  \"onPointerDownOutside\",\n  \"onSelect\",\n  \"onValueChange\",\n  \"open\",\n  \"openOnChange\",\n  \"openOnClick\",\n  \"openOnKeyPress\",\n  \"placeholder\",\n  \"positioning\",\n  \"readOnly\",\n  \"required\",\n  \"scrollToIndexFn\",\n  \"selectionBehavior\",\n  \"translations\",\n  \"value\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(props);\nvar itemGroupLabelProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_8__.createProps)()([\"htmlFor\"]);\nvar splitItemGroupLabelProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(itemGroupLabelProps);\nvar itemGroupProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_8__.createProps)()([\"id\"]);\nvar splitItemGroupProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(itemGroupProps);\nvar itemProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_8__.createProps)()([\"item\", \"persistFocus\"]);\nvar splitItemProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(itemProps);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/combobox/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/core/dist/index.mjs":
/*!**************************************************!*\
  !*** ./node_modules/@zag-js/core/dist/index.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   INIT_STATE: () => (/* binding */ INIT_STATE),\n/* harmony export */   MachineStatus: () => (/* binding */ MachineStatus),\n/* harmony export */   createGuards: () => (/* binding */ createGuards),\n/* harmony export */   createMachine: () => (/* binding */ createMachine),\n/* harmony export */   createScope: () => (/* binding */ createScope),\n/* harmony export */   memo: () => (/* binding */ memo),\n/* harmony export */   mergeProps: () => (/* binding */ mergeProps),\n/* harmony export */   setup: () => (/* binding */ setup)\n/* harmony export */ });\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n\n\n\n// src/merge-props.ts\nvar clsx = (...args) => args.map((str) => str?.trim?.()).filter(Boolean).join(\" \");\nvar CSS_REGEX = /((?:--)?(?:\\w+-?)+)\\s*:\\s*([^;]*)/g;\nvar serialize = (style) => {\n  const res = {};\n  let match;\n  while (match = CSS_REGEX.exec(style)) {\n    res[match[1]] = match[2];\n  }\n  return res;\n};\nvar css = (a, b) => {\n  if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isString)(a)) {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isString)(b)) return `${a};${b}`;\n    a = serialize(a);\n  } else if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isString)(b)) {\n    b = serialize(b);\n  }\n  return Object.assign({}, a ?? {}, b ?? {});\n};\nfunction mergeProps(...args) {\n  let result = {};\n  for (let props of args) {\n    for (let key in result) {\n      if (key.startsWith(\"on\") && typeof result[key] === \"function\" && typeof props[key] === \"function\") {\n        result[key] = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.callAll)(props[key], result[key]);\n        continue;\n      }\n      if (key === \"className\" || key === \"class\") {\n        result[key] = clsx(result[key], props[key]);\n        continue;\n      }\n      if (key === \"style\") {\n        result[key] = css(result[key], props[key]);\n        continue;\n      }\n      result[key] = props[key] !== void 0 ? props[key] : result[key];\n    }\n    for (let key in props) {\n      if (result[key] === void 0) {\n        result[key] = props[key];\n      }\n    }\n  }\n  return result;\n}\nfunction memo(getDeps, fn, opts) {\n  let deps = [];\n  let result;\n  return (depArgs) => {\n    const newDeps = getDeps(depArgs);\n    const depsChanged = newDeps.length !== deps.length || newDeps.some((dep, index) => !(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isEqual)(deps[index], dep));\n    if (!depsChanged) return result;\n    deps = newDeps;\n    result = fn(...newDeps);\n    opts?.onChange?.(result);\n    return result;\n  };\n}\n\n// src/create-machine.ts\nfunction createGuards() {\n  return {\n    and: (...guards) => {\n      return function andGuard(params) {\n        return guards.every((str) => params.guard(str));\n      };\n    },\n    or: (...guards) => {\n      return function orGuard(params) {\n        return guards.some((str) => params.guard(str));\n      };\n    },\n    not: (guard) => {\n      return function notGuard(params) {\n        return !params.guard(guard);\n      };\n    }\n  };\n}\nfunction createMachine(config) {\n  return config;\n}\nfunction setup() {\n  return {\n    guards: createGuards(),\n    createMachine: (config) => {\n      return createMachine(config);\n    },\n    choose: (transitions) => {\n      return function chooseFn({ choose }) {\n        return choose(transitions)?.actions;\n      };\n    }\n  };\n}\n\n// src/types.ts\nvar MachineStatus = /* @__PURE__ */ ((MachineStatus2) => {\n  MachineStatus2[\"NotStarted\"] = \"Not Started\";\n  MachineStatus2[\"Started\"] = \"Started\";\n  MachineStatus2[\"Stopped\"] = \"Stopped\";\n  return MachineStatus2;\n})(MachineStatus || {});\nvar INIT_STATE = \"__init__\";\nfunction createScope(props) {\n  const getRootNode = () => props.getRootNode?.() ?? document;\n  const getDoc = () => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getDocument)(getRootNode());\n  const getWin = () => getDoc().defaultView ?? window;\n  const getActiveElementFn = () => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getActiveElement)(getRootNode());\n  const isActiveElement = (elem) => elem === getActiveElementFn();\n  const getById = (id) => getRootNode().getElementById(id);\n  return {\n    ...props,\n    getRootNode,\n    getDoc,\n    getWin,\n    getActiveElement: getActiveElementFn,\n    isActiveElement,\n    getById\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9jb3JlL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBMkQ7QUFDTzs7QUFFbEU7QUFDQTtBQUNBLCtDQUErQztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLHVEQUFRO0FBQ2QsUUFBUSx1REFBUSxlQUFlLEdBQUcsRUFBRSxFQUFFO0FBQ3RDO0FBQ0EsSUFBSSxTQUFTLHVEQUFRO0FBQ3JCO0FBQ0E7QUFDQSx5QkFBeUIsU0FBUyxTQUFTO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixzREFBTztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdGQUF3RixzREFBTztBQUMvRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxpQ0FBaUMsUUFBUTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMscUJBQXFCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLHVCQUF1Qiw4REFBVztBQUNsQztBQUNBLG1DQUFtQyxtRUFBZ0I7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV3RyIsInNvdXJjZXMiOlsiL1VzZXJzL3JhdW5hcXBsYWhhL0Rlc2t0b3AvcGljay1hLWJvdC0yMDI1L25vZGVfbW9kdWxlcy9AemFnLWpzL2NvcmUvZGlzdC9pbmRleC5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY2FsbEFsbCwgaXNFcXVhbCwgaXNTdHJpbmcgfSBmcm9tICdAemFnLWpzL3V0aWxzJztcbmltcG9ydCB7IGdldEFjdGl2ZUVsZW1lbnQsIGdldERvY3VtZW50IH0gZnJvbSAnQHphZy1qcy9kb20tcXVlcnknO1xuXG4vLyBzcmMvbWVyZ2UtcHJvcHMudHNcbnZhciBjbHN4ID0gKC4uLmFyZ3MpID0+IGFyZ3MubWFwKChzdHIpID0+IHN0cj8udHJpbT8uKCkpLmZpbHRlcihCb29sZWFuKS5qb2luKFwiIFwiKTtcbnZhciBDU1NfUkVHRVggPSAvKCg/Oi0tKT8oPzpcXHcrLT8pKylcXHMqOlxccyooW147XSopL2c7XG52YXIgc2VyaWFsaXplID0gKHN0eWxlKSA9PiB7XG4gIGNvbnN0IHJlcyA9IHt9O1xuICBsZXQgbWF0Y2g7XG4gIHdoaWxlIChtYXRjaCA9IENTU19SRUdFWC5leGVjKHN0eWxlKSkge1xuICAgIHJlc1ttYXRjaFsxXV0gPSBtYXRjaFsyXTtcbiAgfVxuICByZXR1cm4gcmVzO1xufTtcbnZhciBjc3MgPSAoYSwgYikgPT4ge1xuICBpZiAoaXNTdHJpbmcoYSkpIHtcbiAgICBpZiAoaXNTdHJpbmcoYikpIHJldHVybiBgJHthfTske2J9YDtcbiAgICBhID0gc2VyaWFsaXplKGEpO1xuICB9IGVsc2UgaWYgKGlzU3RyaW5nKGIpKSB7XG4gICAgYiA9IHNlcmlhbGl6ZShiKTtcbiAgfVxuICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgYSA/PyB7fSwgYiA/PyB7fSk7XG59O1xuZnVuY3Rpb24gbWVyZ2VQcm9wcyguLi5hcmdzKSB7XG4gIGxldCByZXN1bHQgPSB7fTtcbiAgZm9yIChsZXQgcHJvcHMgb2YgYXJncykge1xuICAgIGZvciAobGV0IGtleSBpbiByZXN1bHQpIHtcbiAgICAgIGlmIChrZXkuc3RhcnRzV2l0aChcIm9uXCIpICYmIHR5cGVvZiByZXN1bHRba2V5XSA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBwcm9wc1trZXldID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgcmVzdWx0W2tleV0gPSBjYWxsQWxsKHByb3BzW2tleV0sIHJlc3VsdFtrZXldKTtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAoa2V5ID09PSBcImNsYXNzTmFtZVwiIHx8IGtleSA9PT0gXCJjbGFzc1wiKSB7XG4gICAgICAgIHJlc3VsdFtrZXldID0gY2xzeChyZXN1bHRba2V5XSwgcHJvcHNba2V5XSk7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKGtleSA9PT0gXCJzdHlsZVwiKSB7XG4gICAgICAgIHJlc3VsdFtrZXldID0gY3NzKHJlc3VsdFtrZXldLCBwcm9wc1trZXldKTtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICByZXN1bHRba2V5XSA9IHByb3BzW2tleV0gIT09IHZvaWQgMCA/IHByb3BzW2tleV0gOiByZXN1bHRba2V5XTtcbiAgICB9XG4gICAgZm9yIChsZXQga2V5IGluIHByb3BzKSB7XG4gICAgICBpZiAocmVzdWx0W2tleV0gPT09IHZvaWQgMCkge1xuICAgICAgICByZXN1bHRba2V5XSA9IHByb3BzW2tleV07XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBtZW1vKGdldERlcHMsIGZuLCBvcHRzKSB7XG4gIGxldCBkZXBzID0gW107XG4gIGxldCByZXN1bHQ7XG4gIHJldHVybiAoZGVwQXJncykgPT4ge1xuICAgIGNvbnN0IG5ld0RlcHMgPSBnZXREZXBzKGRlcEFyZ3MpO1xuICAgIGNvbnN0IGRlcHNDaGFuZ2VkID0gbmV3RGVwcy5sZW5ndGggIT09IGRlcHMubGVuZ3RoIHx8IG5ld0RlcHMuc29tZSgoZGVwLCBpbmRleCkgPT4gIWlzRXF1YWwoZGVwc1tpbmRleF0sIGRlcCkpO1xuICAgIGlmICghZGVwc0NoYW5nZWQpIHJldHVybiByZXN1bHQ7XG4gICAgZGVwcyA9IG5ld0RlcHM7XG4gICAgcmVzdWx0ID0gZm4oLi4ubmV3RGVwcyk7XG4gICAgb3B0cz8ub25DaGFuZ2U/LihyZXN1bHQpO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG59XG5cbi8vIHNyYy9jcmVhdGUtbWFjaGluZS50c1xuZnVuY3Rpb24gY3JlYXRlR3VhcmRzKCkge1xuICByZXR1cm4ge1xuICAgIGFuZDogKC4uLmd1YXJkcykgPT4ge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uIGFuZEd1YXJkKHBhcmFtcykge1xuICAgICAgICByZXR1cm4gZ3VhcmRzLmV2ZXJ5KChzdHIpID0+IHBhcmFtcy5ndWFyZChzdHIpKTtcbiAgICAgIH07XG4gICAgfSxcbiAgICBvcjogKC4uLmd1YXJkcykgPT4ge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uIG9yR3VhcmQocGFyYW1zKSB7XG4gICAgICAgIHJldHVybiBndWFyZHMuc29tZSgoc3RyKSA9PiBwYXJhbXMuZ3VhcmQoc3RyKSk7XG4gICAgICB9O1xuICAgIH0sXG4gICAgbm90OiAoZ3VhcmQpID0+IHtcbiAgICAgIHJldHVybiBmdW5jdGlvbiBub3RHdWFyZChwYXJhbXMpIHtcbiAgICAgICAgcmV0dXJuICFwYXJhbXMuZ3VhcmQoZ3VhcmQpO1xuICAgICAgfTtcbiAgICB9XG4gIH07XG59XG5mdW5jdGlvbiBjcmVhdGVNYWNoaW5lKGNvbmZpZykge1xuICByZXR1cm4gY29uZmlnO1xufVxuZnVuY3Rpb24gc2V0dXAoKSB7XG4gIHJldHVybiB7XG4gICAgZ3VhcmRzOiBjcmVhdGVHdWFyZHMoKSxcbiAgICBjcmVhdGVNYWNoaW5lOiAoY29uZmlnKSA9PiB7XG4gICAgICByZXR1cm4gY3JlYXRlTWFjaGluZShjb25maWcpO1xuICAgIH0sXG4gICAgY2hvb3NlOiAodHJhbnNpdGlvbnMpID0+IHtcbiAgICAgIHJldHVybiBmdW5jdGlvbiBjaG9vc2VGbih7IGNob29zZSB9KSB7XG4gICAgICAgIHJldHVybiBjaG9vc2UodHJhbnNpdGlvbnMpPy5hY3Rpb25zO1xuICAgICAgfTtcbiAgICB9XG4gIH07XG59XG5cbi8vIHNyYy90eXBlcy50c1xudmFyIE1hY2hpbmVTdGF0dXMgPSAvKiBAX19QVVJFX18gKi8gKChNYWNoaW5lU3RhdHVzMikgPT4ge1xuICBNYWNoaW5lU3RhdHVzMltcIk5vdFN0YXJ0ZWRcIl0gPSBcIk5vdCBTdGFydGVkXCI7XG4gIE1hY2hpbmVTdGF0dXMyW1wiU3RhcnRlZFwiXSA9IFwiU3RhcnRlZFwiO1xuICBNYWNoaW5lU3RhdHVzMltcIlN0b3BwZWRcIl0gPSBcIlN0b3BwZWRcIjtcbiAgcmV0dXJuIE1hY2hpbmVTdGF0dXMyO1xufSkoTWFjaGluZVN0YXR1cyB8fCB7fSk7XG52YXIgSU5JVF9TVEFURSA9IFwiX19pbml0X19cIjtcbmZ1bmN0aW9uIGNyZWF0ZVNjb3BlKHByb3BzKSB7XG4gIGNvbnN0IGdldFJvb3ROb2RlID0gKCkgPT4gcHJvcHMuZ2V0Um9vdE5vZGU/LigpID8/IGRvY3VtZW50O1xuICBjb25zdCBnZXREb2MgPSAoKSA9PiBnZXREb2N1bWVudChnZXRSb290Tm9kZSgpKTtcbiAgY29uc3QgZ2V0V2luID0gKCkgPT4gZ2V0RG9jKCkuZGVmYXVsdFZpZXcgPz8gd2luZG93O1xuICBjb25zdCBnZXRBY3RpdmVFbGVtZW50Rm4gPSAoKSA9PiBnZXRBY3RpdmVFbGVtZW50KGdldFJvb3ROb2RlKCkpO1xuICBjb25zdCBpc0FjdGl2ZUVsZW1lbnQgPSAoZWxlbSkgPT4gZWxlbSA9PT0gZ2V0QWN0aXZlRWxlbWVudEZuKCk7XG4gIGNvbnN0IGdldEJ5SWQgPSAoaWQpID0+IGdldFJvb3ROb2RlKCkuZ2V0RWxlbWVudEJ5SWQoaWQpO1xuICByZXR1cm4ge1xuICAgIC4uLnByb3BzLFxuICAgIGdldFJvb3ROb2RlLFxuICAgIGdldERvYyxcbiAgICBnZXRXaW4sXG4gICAgZ2V0QWN0aXZlRWxlbWVudDogZ2V0QWN0aXZlRWxlbWVudEZuLFxuICAgIGlzQWN0aXZlRWxlbWVudCxcbiAgICBnZXRCeUlkXG4gIH07XG59XG5cbmV4cG9ydCB7IElOSVRfU1RBVEUsIE1hY2hpbmVTdGF0dXMsIGNyZWF0ZUd1YXJkcywgY3JlYXRlTWFjaGluZSwgY3JlYXRlU2NvcGUsIG1lbW8sIG1lcmdlUHJvcHMsIHNldHVwIH07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/core/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/dialog/dist/index.mjs":
/*!****************************************************!*\
  !*** ./node_modules/@zag-js/dialog/dist/index.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_aria_hidden__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/aria-hidden */ \"(ssr)/./node_modules/@zag-js/aria-hidden/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_dismissable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/dismissable */ \"(ssr)/./node_modules/@zag-js/dismissable/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_focus_trap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/focus-trap */ \"(ssr)/./node_modules/@zag-js/focus-trap/dist/index.mjs\");\n/* harmony import */ var _zag_js_remove_scroll__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/remove-scroll */ \"(ssr)/./node_modules/@zag-js/remove-scroll/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n\n\n\n\n\n\n\n// src/dialog.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"dialog\").parts(\n  \"trigger\",\n  \"backdrop\",\n  \"positioner\",\n  \"content\",\n  \"title\",\n  \"description\",\n  \"closeTrigger\"\n);\nvar parts = anatomy.build();\n\n// src/dialog.dom.ts\nvar getPositionerId = (ctx) => ctx.ids?.positioner ?? `dialog:${ctx.id}:positioner`;\nvar getBackdropId = (ctx) => ctx.ids?.backdrop ?? `dialog:${ctx.id}:backdrop`;\nvar getContentId = (ctx) => ctx.ids?.content ?? `dialog:${ctx.id}:content`;\nvar getTriggerId = (ctx) => ctx.ids?.trigger ?? `dialog:${ctx.id}:trigger`;\nvar getTitleId = (ctx) => ctx.ids?.title ?? `dialog:${ctx.id}:title`;\nvar getDescriptionId = (ctx) => ctx.ids?.description ?? `dialog:${ctx.id}:description`;\nvar getCloseTriggerId = (ctx) => ctx.ids?.closeTrigger ?? `dialog:${ctx.id}:close`;\nvar getContentEl = (ctx) => ctx.getById(getContentId(ctx));\nvar getPositionerEl = (ctx) => ctx.getById(getPositionerId(ctx));\nvar getBackdropEl = (ctx) => ctx.getById(getBackdropId(ctx));\nvar getTriggerEl = (ctx) => ctx.getById(getTriggerId(ctx));\nvar getTitleEl = (ctx) => ctx.getById(getTitleId(ctx));\nvar getDescriptionEl = (ctx) => ctx.getById(getDescriptionId(ctx));\nvar getCloseTriggerEl = (ctx) => ctx.getById(getCloseTriggerId(ctx));\n\n// src/dialog.connect.ts\nfunction connect(service, normalize) {\n  const { state, send, context, prop, scope } = service;\n  const ariaLabel = prop(\"aria-label\");\n  const open = state.matches(\"open\");\n  return {\n    open,\n    setOpen(nextOpen) {\n      const open2 = state.matches(\"open\");\n      if (open2 === nextOpen) return;\n      send({ type: nextOpen ? \"OPEN\" : \"CLOSE\" });\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...parts.trigger.attrs,\n        dir: prop(\"dir\"),\n        id: getTriggerId(scope),\n        \"aria-haspopup\": \"dialog\",\n        type: \"button\",\n        \"aria-expanded\": open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-controls\": getContentId(scope),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send({ type: \"TOGGLE\" });\n        }\n      });\n    },\n    getBackdropProps() {\n      return normalize.element({\n        ...parts.backdrop.attrs,\n        dir: prop(\"dir\"),\n        hidden: !open,\n        id: getBackdropId(scope),\n        \"data-state\": open ? \"open\" : \"closed\"\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        ...parts.positioner.attrs,\n        dir: prop(\"dir\"),\n        id: getPositionerId(scope),\n        style: {\n          pointerEvents: open ? void 0 : \"none\"\n        }\n      });\n    },\n    getContentProps() {\n      const rendered = context.get(\"rendered\");\n      return normalize.element({\n        ...parts.content.attrs,\n        dir: prop(\"dir\"),\n        role: prop(\"role\"),\n        hidden: !open,\n        id: getContentId(scope),\n        tabIndex: -1,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-modal\": true,\n        \"aria-label\": ariaLabel || void 0,\n        \"aria-labelledby\": ariaLabel || !rendered.title ? void 0 : getTitleId(scope),\n        \"aria-describedby\": rendered.description ? getDescriptionId(scope) : void 0\n      });\n    },\n    getTitleProps() {\n      return normalize.element({\n        ...parts.title.attrs,\n        dir: prop(\"dir\"),\n        id: getTitleId(scope)\n      });\n    },\n    getDescriptionProps() {\n      return normalize.element({\n        ...parts.description.attrs,\n        dir: prop(\"dir\"),\n        id: getDescriptionId(scope)\n      });\n    },\n    getCloseTriggerProps() {\n      return normalize.button({\n        ...parts.closeTrigger.attrs,\n        dir: prop(\"dir\"),\n        id: getCloseTriggerId(scope),\n        type: \"button\",\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          event.stopPropagation();\n          send({ type: \"CLOSE\" });\n        }\n      });\n    }\n  };\n}\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_1__.createMachine)({\n  props({ props: props2, scope }) {\n    const alertDialog = props2.role === \"alertdialog\";\n    const initialFocusEl = alertDialog ? () => getCloseTriggerEl(scope) : void 0;\n    return {\n      role: \"dialog\",\n      modal: true,\n      trapFocus: true,\n      preventScroll: true,\n      closeOnInteractOutside: !alertDialog,\n      closeOnEscape: true,\n      restoreFocus: true,\n      initialFocusEl,\n      ...props2\n    };\n  },\n  initialState({ prop }) {\n    const open = prop(\"open\") || prop(\"defaultOpen\");\n    return open ? \"open\" : \"closed\";\n  },\n  context({ bindable }) {\n    return {\n      rendered: bindable(() => ({\n        defaultValue: { title: true, description: true }\n      }))\n    };\n  },\n  watch({ track, action, prop }) {\n    track([() => prop(\"open\")], () => {\n      action([\"toggleVisibility\"]);\n    });\n  },\n  states: {\n    open: {\n      entry: [\"checkRenderedElements\", \"syncZIndex\"],\n      effects: [\"trackDismissableElement\", \"trapFocus\", \"preventScroll\", \"hideContentBelow\"],\n      on: {\n        \"CONTROLLED.CLOSE\": {\n          target: \"closed\"\n        },\n        CLOSE: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        TOGGLE: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ]\n      }\n    },\n    closed: {\n      on: {\n        \"CONTROLLED.OPEN\": {\n          target: \"open\"\n        },\n        OPEN: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"invokeOnOpen\"]\n          }\n        ],\n        TOGGLE: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"invokeOnOpen\"]\n          }\n        ]\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      isOpenControlled: ({ prop }) => prop(\"open\") != void 0\n    },\n    effects: {\n      trackDismissableElement({ scope, send, prop }) {\n        const getContentEl2 = () => getContentEl(scope);\n        return (0,_zag_js_dismissable__WEBPACK_IMPORTED_MODULE_2__.trackDismissableElement)(getContentEl2, {\n          defer: true,\n          pointerBlocking: prop(\"modal\"),\n          exclude: [getTriggerEl(scope)],\n          onInteractOutside(event) {\n            prop(\"onInteractOutside\")?.(event);\n            if (!prop(\"closeOnInteractOutside\")) {\n              event.preventDefault();\n            }\n          },\n          persistentElements: prop(\"persistentElements\"),\n          onFocusOutside: prop(\"onFocusOutside\"),\n          onPointerDownOutside: prop(\"onPointerDownOutside\"),\n          onEscapeKeyDown(event) {\n            prop(\"onEscapeKeyDown\")?.(event);\n            if (!prop(\"closeOnEscape\")) {\n              event.preventDefault();\n            }\n          },\n          onDismiss() {\n            send({ type: \"CLOSE\", src: \"interact-outside\" });\n          }\n        });\n      },\n      preventScroll({ scope, prop }) {\n        if (!prop(\"preventScroll\")) return;\n        return (0,_zag_js_remove_scroll__WEBPACK_IMPORTED_MODULE_3__.preventBodyScroll)(scope.getDoc());\n      },\n      trapFocus({ scope, prop }) {\n        if (!prop(\"trapFocus\") || !prop(\"modal\")) return;\n        const contentEl = () => getContentEl(scope);\n        return (0,_zag_js_focus_trap__WEBPACK_IMPORTED_MODULE_4__.trapFocus)(contentEl, {\n          preventScroll: true,\n          returnFocusOnDeactivate: !!prop(\"restoreFocus\"),\n          initialFocus: prop(\"initialFocusEl\"),\n          setReturnFocus: (el) => prop(\"finalFocusEl\")?.() ?? el\n        });\n      },\n      hideContentBelow({ scope, prop }) {\n        if (!prop(\"modal\")) return;\n        const getElements = () => [getContentEl(scope)];\n        return (0,_zag_js_aria_hidden__WEBPACK_IMPORTED_MODULE_5__.ariaHidden)(getElements, { defer: true });\n      }\n    },\n    actions: {\n      checkRenderedElements({ context, scope }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_6__.raf)(() => {\n          context.set(\"rendered\", {\n            title: !!getTitleEl(scope),\n            description: !!getDescriptionEl(scope)\n          });\n        });\n      },\n      syncZIndex({ scope }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_6__.raf)(() => {\n          const contentEl = getContentEl(scope);\n          if (!contentEl) return;\n          const styles = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_6__.getComputedStyle)(contentEl);\n          const elems = [getPositionerEl(scope), getBackdropEl(scope)];\n          elems.forEach((node) => {\n            node?.style.setProperty(\"--z-index\", styles.zIndex);\n          });\n        });\n      },\n      invokeOnClose({ prop }) {\n        prop(\"onOpenChange\")?.({ open: false });\n      },\n      invokeOnOpen({ prop }) {\n        prop(\"onOpenChange\")?.({ open: true });\n      },\n      toggleVisibility({ prop, send, event }) {\n        send({\n          type: prop(\"open\") ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\",\n          previousEvent: event\n        });\n      }\n    }\n  }\n});\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\n  \"aria-label\",\n  \"closeOnEscape\",\n  \"closeOnInteractOutside\",\n  \"dir\",\n  \"finalFocusEl\",\n  \"getRootNode\",\n  \"getRootNode\",\n  \"id\",\n  \"id\",\n  \"ids\",\n  \"initialFocusEl\",\n  \"modal\",\n  \"onEscapeKeyDown\",\n  \"onFocusOutside\",\n  \"onInteractOutside\",\n  \"onOpenChange\",\n  \"onPointerDownOutside\",\n  \"defaultOpen\",\n  \"open\",\n  \"persistentElements\",\n  \"preventScroll\",\n  \"restoreFocus\",\n  \"role\",\n  \"trapFocus\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_8__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/dialog/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/dismissable/dist/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@zag-js/dismissable/dist/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   trackDismissableBranch: () => (/* binding */ trackDismissableBranch),\n/* harmony export */   trackDismissableElement: () => (/* binding */ trackDismissableElement)\n/* harmony export */ });\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_interact_outside__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/interact-outside */ \"(ssr)/./node_modules/@zag-js/interact-outside/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n\n// src/dismissable-layer.ts\nfunction trackEscapeKeydown(node, fn) {\n  const handleKeyDown = (event) => {\n    if (event.key !== \"Escape\") return;\n    if (event.isComposing) return;\n    fn?.(event);\n  };\n  return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getDocument)(node), \"keydown\", handleKeyDown, { capture: true });\n}\nvar layerStack = {\n  layers: [],\n  branches: [],\n  count() {\n    return this.layers.length;\n  },\n  pointerBlockingLayers() {\n    return this.layers.filter((layer) => layer.pointerBlocking);\n  },\n  topMostPointerBlockingLayer() {\n    return [...this.pointerBlockingLayers()].slice(-1)[0];\n  },\n  hasPointerBlockingLayer() {\n    return this.pointerBlockingLayers().length > 0;\n  },\n  isBelowPointerBlockingLayer(node) {\n    const index = this.indexOf(node);\n    const highestBlockingIndex = this.topMostPointerBlockingLayer() ? this.indexOf(this.topMostPointerBlockingLayer()?.node) : -1;\n    return index < highestBlockingIndex;\n  },\n  isTopMost(node) {\n    const layer = this.layers[this.count() - 1];\n    return layer?.node === node;\n  },\n  getNestedLayers(node) {\n    return Array.from(this.layers).slice(this.indexOf(node) + 1);\n  },\n  isInNestedLayer(node, target) {\n    return this.getNestedLayers(node).some((layer) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.contains)(layer.node, target));\n  },\n  isInBranch(target) {\n    return Array.from(this.branches).some((branch) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.contains)(branch, target));\n  },\n  add(layer) {\n    const num = this.layers.push(layer);\n    layer.node.style.setProperty(\"--layer-index\", `${num}`);\n  },\n  addBranch(node) {\n    this.branches.push(node);\n  },\n  remove(node) {\n    const index = this.indexOf(node);\n    if (index < 0) return;\n    if (index < this.count() - 1) {\n      const _layers = this.getNestedLayers(node);\n      _layers.forEach((layer) => layer.dismiss());\n    }\n    this.layers.splice(index, 1);\n    node.style.removeProperty(\"--layer-index\");\n  },\n  removeBranch(node) {\n    const index = this.branches.indexOf(node);\n    if (index >= 0) this.branches.splice(index, 1);\n  },\n  indexOf(node) {\n    return this.layers.findIndex((layer) => layer.node === node);\n  },\n  dismiss(node) {\n    this.layers[this.indexOf(node)]?.dismiss();\n  },\n  clear() {\n    this.remove(this.layers[0].node);\n  }\n};\nvar originalBodyPointerEvents;\nfunction assignPointerEventToLayers() {\n  layerStack.layers.forEach(({ node }) => {\n    node.style.pointerEvents = layerStack.isBelowPointerBlockingLayer(node) ? \"none\" : \"auto\";\n  });\n}\nfunction clearPointerEvent(node) {\n  node.style.pointerEvents = \"\";\n}\nfunction disablePointerEventsOutside(node, persistentElements) {\n  const doc = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getDocument)(node);\n  const cleanups = [];\n  if (layerStack.hasPointerBlockingLayer() && !doc.body.hasAttribute(\"data-inert\")) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    queueMicrotask(() => {\n      doc.body.style.pointerEvents = \"none\";\n      doc.body.setAttribute(\"data-inert\", \"\");\n    });\n  }\n  if (persistentElements) {\n    const persistedCleanup = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.waitForElements)(persistentElements, (el) => {\n      cleanups.push((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.setStyle)(el, { pointerEvents: \"auto\" }));\n    });\n    cleanups.push(persistedCleanup);\n  }\n  return () => {\n    if (layerStack.hasPointerBlockingLayer()) return;\n    queueMicrotask(() => {\n      doc.body.style.pointerEvents = originalBodyPointerEvents;\n      doc.body.removeAttribute(\"data-inert\");\n      if (doc.body.style.length === 0) doc.body.removeAttribute(\"style\");\n    });\n    cleanups.forEach((fn) => fn());\n  };\n}\n\n// src/dismissable-layer.ts\nfunction trackDismissableElementImpl(node, options) {\n  const { warnOnMissingNode = true } = options;\n  if (warnOnMissingNode && !node) {\n    (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.warn)(\"[@zag-js/dismissable] node is `null` or `undefined`\");\n    return;\n  }\n  if (!node) {\n    return;\n  }\n  const { onDismiss, pointerBlocking, exclude: excludeContainers, debug } = options;\n  const layer = { dismiss: onDismiss, node, pointerBlocking };\n  layerStack.add(layer);\n  assignPointerEventToLayers();\n  function onPointerDownOutside(event) {\n    const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(event.detail.originalEvent);\n    if (layerStack.isBelowPointerBlockingLayer(node) || layerStack.isInBranch(target)) return;\n    options.onPointerDownOutside?.(event);\n    options.onInteractOutside?.(event);\n    if (event.defaultPrevented) return;\n    if (debug) {\n      console.log(\"onPointerDownOutside:\", event.detail.originalEvent);\n    }\n    onDismiss?.();\n  }\n  function onFocusOutside(event) {\n    const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(event.detail.originalEvent);\n    if (layerStack.isInBranch(target)) return;\n    options.onFocusOutside?.(event);\n    options.onInteractOutside?.(event);\n    if (event.defaultPrevented) return;\n    if (debug) {\n      console.log(\"onFocusOutside:\", event.detail.originalEvent);\n    }\n    onDismiss?.();\n  }\n  function onEscapeKeyDown(event) {\n    if (!layerStack.isTopMost(node)) return;\n    options.onEscapeKeyDown?.(event);\n    if (!event.defaultPrevented && onDismiss) {\n      event.preventDefault();\n      onDismiss();\n    }\n  }\n  function exclude(target) {\n    if (!node) return false;\n    const containers = typeof excludeContainers === \"function\" ? excludeContainers() : excludeContainers;\n    const _containers = Array.isArray(containers) ? containers : [containers];\n    const persistentElements = options.persistentElements?.map((fn) => fn()).filter(_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement);\n    if (persistentElements) _containers.push(...persistentElements);\n    return _containers.some((node2) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.contains)(node2, target)) || layerStack.isInNestedLayer(node, target);\n  }\n  const cleanups = [\n    pointerBlocking ? disablePointerEventsOutside(node, options.persistentElements) : void 0,\n    trackEscapeKeydown(node, onEscapeKeyDown),\n    (0,_zag_js_interact_outside__WEBPACK_IMPORTED_MODULE_2__.trackInteractOutside)(node, { exclude, onFocusOutside, onPointerDownOutside, defer: options.defer })\n  ];\n  return () => {\n    layerStack.remove(node);\n    assignPointerEventToLayers();\n    clearPointerEvent(node);\n    cleanups.forEach((fn) => fn?.());\n  };\n}\nfunction trackDismissableElement(nodeOrFn, options) {\n  const { defer } = options;\n  const func = defer ? _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.raf : (v) => v();\n  const cleanups = [];\n  cleanups.push(\n    func(() => {\n      const node = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isFunction)(nodeOrFn) ? nodeOrFn() : nodeOrFn;\n      cleanups.push(trackDismissableElementImpl(node, options));\n    })\n  );\n  return () => {\n    cleanups.forEach((fn) => fn?.());\n  };\n}\nfunction trackDismissableBranch(nodeOrFn, options = {}) {\n  const { defer } = options;\n  const func = defer ? _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.raf : (v) => v();\n  const cleanups = [];\n  cleanups.push(\n    func(() => {\n      const node = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isFunction)(nodeOrFn) ? nodeOrFn() : nodeOrFn;\n      if (!node) {\n        (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.warn)(\"[@zag-js/dismissable] branch node is `null` or `undefined`\");\n        return;\n      }\n      layerStack.addBranch(node);\n      cleanups.push(() => {\n        layerStack.removeBranch(node);\n      });\n    })\n  );\n  return () => {\n    cleanups.forEach((fn) => fn?.());\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9kaXNtaXNzYWJsZS9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFzSTtBQUN0RTtBQUNmOztBQUVqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsOERBQVcsQ0FBQyw4REFBVyxvQ0FBb0MsZUFBZTtBQUNuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxzREFBc0QsMkRBQVE7QUFDOUQsR0FBRztBQUNIO0FBQ0Esc0RBQXNELDJEQUFRO0FBQzlELEdBQUc7QUFDSDtBQUNBO0FBQ0EscURBQXFELElBQUk7QUFDekQsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLE1BQU07QUFDckM7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsOERBQVc7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSw2QkFBNkIsa0VBQWU7QUFDNUMsb0JBQW9CLDJEQUFRLE9BQU8sdUJBQXVCO0FBQzFELEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsVUFBVSwyQkFBMkI7QUFDckM7QUFDQSxJQUFJLG1EQUFJO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsZ0VBQWdFO0FBQzFFLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsaUVBQWM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsaUVBQWM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0ZBQW9GLDREQUFhO0FBQ2pHO0FBQ0EsdUNBQXVDLDJEQUFRO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSw4RUFBb0IsU0FBUyxxRUFBcUU7QUFDdEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxRQUFRO0FBQ2xCLHVCQUF1QixrREFBRztBQUMxQjtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIseURBQVU7QUFDN0I7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRDtBQUN0RCxVQUFVLFFBQVE7QUFDbEIsdUJBQXVCLGtEQUFHO0FBQzFCO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQix5REFBVTtBQUM3QjtBQUNBLFFBQVEsbURBQUk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUUyRCIsInNvdXJjZXMiOlsiL1VzZXJzL3JhdW5hcXBsYWhhL0Rlc2t0b3AvcGljay1hLWJvdC0yMDI1L25vZGVfbW9kdWxlcy9AemFnLWpzL2Rpc21pc3NhYmxlL2Rpc3QvaW5kZXgubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJhZiwgY29udGFpbnMsIGdldERvY3VtZW50LCB3YWl0Rm9yRWxlbWVudHMsIHNldFN0eWxlLCBhZGREb21FdmVudCwgZ2V0RXZlbnRUYXJnZXQsIGlzSFRNTEVsZW1lbnQgfSBmcm9tICdAemFnLWpzL2RvbS1xdWVyeSc7XG5pbXBvcnQgeyB0cmFja0ludGVyYWN0T3V0c2lkZSB9IGZyb20gJ0B6YWctanMvaW50ZXJhY3Qtb3V0c2lkZSc7XG5pbXBvcnQgeyBpc0Z1bmN0aW9uLCB3YXJuIH0gZnJvbSAnQHphZy1qcy91dGlscyc7XG5cbi8vIHNyYy9kaXNtaXNzYWJsZS1sYXllci50c1xuZnVuY3Rpb24gdHJhY2tFc2NhcGVLZXlkb3duKG5vZGUsIGZuKSB7XG4gIGNvbnN0IGhhbmRsZUtleURvd24gPSAoZXZlbnQpID0+IHtcbiAgICBpZiAoZXZlbnQua2V5ICE9PSBcIkVzY2FwZVwiKSByZXR1cm47XG4gICAgaWYgKGV2ZW50LmlzQ29tcG9zaW5nKSByZXR1cm47XG4gICAgZm4/LihldmVudCk7XG4gIH07XG4gIHJldHVybiBhZGREb21FdmVudChnZXREb2N1bWVudChub2RlKSwgXCJrZXlkb3duXCIsIGhhbmRsZUtleURvd24sIHsgY2FwdHVyZTogdHJ1ZSB9KTtcbn1cbnZhciBsYXllclN0YWNrID0ge1xuICBsYXllcnM6IFtdLFxuICBicmFuY2hlczogW10sXG4gIGNvdW50KCkge1xuICAgIHJldHVybiB0aGlzLmxheWVycy5sZW5ndGg7XG4gIH0sXG4gIHBvaW50ZXJCbG9ja2luZ0xheWVycygpIHtcbiAgICByZXR1cm4gdGhpcy5sYXllcnMuZmlsdGVyKChsYXllcikgPT4gbGF5ZXIucG9pbnRlckJsb2NraW5nKTtcbiAgfSxcbiAgdG9wTW9zdFBvaW50ZXJCbG9ja2luZ0xheWVyKCkge1xuICAgIHJldHVybiBbLi4udGhpcy5wb2ludGVyQmxvY2tpbmdMYXllcnMoKV0uc2xpY2UoLTEpWzBdO1xuICB9LFxuICBoYXNQb2ludGVyQmxvY2tpbmdMYXllcigpIHtcbiAgICByZXR1cm4gdGhpcy5wb2ludGVyQmxvY2tpbmdMYXllcnMoKS5sZW5ndGggPiAwO1xuICB9LFxuICBpc0JlbG93UG9pbnRlckJsb2NraW5nTGF5ZXIobm9kZSkge1xuICAgIGNvbnN0IGluZGV4ID0gdGhpcy5pbmRleE9mKG5vZGUpO1xuICAgIGNvbnN0IGhpZ2hlc3RCbG9ja2luZ0luZGV4ID0gdGhpcy50b3BNb3N0UG9pbnRlckJsb2NraW5nTGF5ZXIoKSA/IHRoaXMuaW5kZXhPZih0aGlzLnRvcE1vc3RQb2ludGVyQmxvY2tpbmdMYXllcigpPy5ub2RlKSA6IC0xO1xuICAgIHJldHVybiBpbmRleCA8IGhpZ2hlc3RCbG9ja2luZ0luZGV4O1xuICB9LFxuICBpc1RvcE1vc3Qobm9kZSkge1xuICAgIGNvbnN0IGxheWVyID0gdGhpcy5sYXllcnNbdGhpcy5jb3VudCgpIC0gMV07XG4gICAgcmV0dXJuIGxheWVyPy5ub2RlID09PSBub2RlO1xuICB9LFxuICBnZXROZXN0ZWRMYXllcnMobm9kZSkge1xuICAgIHJldHVybiBBcnJheS5mcm9tKHRoaXMubGF5ZXJzKS5zbGljZSh0aGlzLmluZGV4T2Yobm9kZSkgKyAxKTtcbiAgfSxcbiAgaXNJbk5lc3RlZExheWVyKG5vZGUsIHRhcmdldCkge1xuICAgIHJldHVybiB0aGlzLmdldE5lc3RlZExheWVycyhub2RlKS5zb21lKChsYXllcikgPT4gY29udGFpbnMobGF5ZXIubm9kZSwgdGFyZ2V0KSk7XG4gIH0sXG4gIGlzSW5CcmFuY2godGFyZ2V0KSB7XG4gICAgcmV0dXJuIEFycmF5LmZyb20odGhpcy5icmFuY2hlcykuc29tZSgoYnJhbmNoKSA9PiBjb250YWlucyhicmFuY2gsIHRhcmdldCkpO1xuICB9LFxuICBhZGQobGF5ZXIpIHtcbiAgICBjb25zdCBudW0gPSB0aGlzLmxheWVycy5wdXNoKGxheWVyKTtcbiAgICBsYXllci5ub2RlLnN0eWxlLnNldFByb3BlcnR5KFwiLS1sYXllci1pbmRleFwiLCBgJHtudW19YCk7XG4gIH0sXG4gIGFkZEJyYW5jaChub2RlKSB7XG4gICAgdGhpcy5icmFuY2hlcy5wdXNoKG5vZGUpO1xuICB9LFxuICByZW1vdmUobm9kZSkge1xuICAgIGNvbnN0IGluZGV4ID0gdGhpcy5pbmRleE9mKG5vZGUpO1xuICAgIGlmIChpbmRleCA8IDApIHJldHVybjtcbiAgICBpZiAoaW5kZXggPCB0aGlzLmNvdW50KCkgLSAxKSB7XG4gICAgICBjb25zdCBfbGF5ZXJzID0gdGhpcy5nZXROZXN0ZWRMYXllcnMobm9kZSk7XG4gICAgICBfbGF5ZXJzLmZvckVhY2goKGxheWVyKSA9PiBsYXllci5kaXNtaXNzKCkpO1xuICAgIH1cbiAgICB0aGlzLmxheWVycy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgIG5vZGUuc3R5bGUucmVtb3ZlUHJvcGVydHkoXCItLWxheWVyLWluZGV4XCIpO1xuICB9LFxuICByZW1vdmVCcmFuY2gobm9kZSkge1xuICAgIGNvbnN0IGluZGV4ID0gdGhpcy5icmFuY2hlcy5pbmRleE9mKG5vZGUpO1xuICAgIGlmIChpbmRleCA+PSAwKSB0aGlzLmJyYW5jaGVzLnNwbGljZShpbmRleCwgMSk7XG4gIH0sXG4gIGluZGV4T2Yobm9kZSkge1xuICAgIHJldHVybiB0aGlzLmxheWVycy5maW5kSW5kZXgoKGxheWVyKSA9PiBsYXllci5ub2RlID09PSBub2RlKTtcbiAgfSxcbiAgZGlzbWlzcyhub2RlKSB7XG4gICAgdGhpcy5sYXllcnNbdGhpcy5pbmRleE9mKG5vZGUpXT8uZGlzbWlzcygpO1xuICB9LFxuICBjbGVhcigpIHtcbiAgICB0aGlzLnJlbW92ZSh0aGlzLmxheWVyc1swXS5ub2RlKTtcbiAgfVxufTtcbnZhciBvcmlnaW5hbEJvZHlQb2ludGVyRXZlbnRzO1xuZnVuY3Rpb24gYXNzaWduUG9pbnRlckV2ZW50VG9MYXllcnMoKSB7XG4gIGxheWVyU3RhY2subGF5ZXJzLmZvckVhY2goKHsgbm9kZSB9KSA9PiB7XG4gICAgbm9kZS5zdHlsZS5wb2ludGVyRXZlbnRzID0gbGF5ZXJTdGFjay5pc0JlbG93UG9pbnRlckJsb2NraW5nTGF5ZXIobm9kZSkgPyBcIm5vbmVcIiA6IFwiYXV0b1wiO1xuICB9KTtcbn1cbmZ1bmN0aW9uIGNsZWFyUG9pbnRlckV2ZW50KG5vZGUpIHtcbiAgbm9kZS5zdHlsZS5wb2ludGVyRXZlbnRzID0gXCJcIjtcbn1cbmZ1bmN0aW9uIGRpc2FibGVQb2ludGVyRXZlbnRzT3V0c2lkZShub2RlLCBwZXJzaXN0ZW50RWxlbWVudHMpIHtcbiAgY29uc3QgZG9jID0gZ2V0RG9jdW1lbnQobm9kZSk7XG4gIGNvbnN0IGNsZWFudXBzID0gW107XG4gIGlmIChsYXllclN0YWNrLmhhc1BvaW50ZXJCbG9ja2luZ0xheWVyKCkgJiYgIWRvYy5ib2R5Lmhhc0F0dHJpYnV0ZShcImRhdGEtaW5lcnRcIikpIHtcbiAgICBvcmlnaW5hbEJvZHlQb2ludGVyRXZlbnRzID0gZG9jdW1lbnQuYm9keS5zdHlsZS5wb2ludGVyRXZlbnRzO1xuICAgIHF1ZXVlTWljcm90YXNrKCgpID0+IHtcbiAgICAgIGRvYy5ib2R5LnN0eWxlLnBvaW50ZXJFdmVudHMgPSBcIm5vbmVcIjtcbiAgICAgIGRvYy5ib2R5LnNldEF0dHJpYnV0ZShcImRhdGEtaW5lcnRcIiwgXCJcIik7XG4gICAgfSk7XG4gIH1cbiAgaWYgKHBlcnNpc3RlbnRFbGVtZW50cykge1xuICAgIGNvbnN0IHBlcnNpc3RlZENsZWFudXAgPSB3YWl0Rm9yRWxlbWVudHMocGVyc2lzdGVudEVsZW1lbnRzLCAoZWwpID0+IHtcbiAgICAgIGNsZWFudXBzLnB1c2goc2V0U3R5bGUoZWwsIHsgcG9pbnRlckV2ZW50czogXCJhdXRvXCIgfSkpO1xuICAgIH0pO1xuICAgIGNsZWFudXBzLnB1c2gocGVyc2lzdGVkQ2xlYW51cCk7XG4gIH1cbiAgcmV0dXJuICgpID0+IHtcbiAgICBpZiAobGF5ZXJTdGFjay5oYXNQb2ludGVyQmxvY2tpbmdMYXllcigpKSByZXR1cm47XG4gICAgcXVldWVNaWNyb3Rhc2soKCkgPT4ge1xuICAgICAgZG9jLmJvZHkuc3R5bGUucG9pbnRlckV2ZW50cyA9IG9yaWdpbmFsQm9keVBvaW50ZXJFdmVudHM7XG4gICAgICBkb2MuYm9keS5yZW1vdmVBdHRyaWJ1dGUoXCJkYXRhLWluZXJ0XCIpO1xuICAgICAgaWYgKGRvYy5ib2R5LnN0eWxlLmxlbmd0aCA9PT0gMCkgZG9jLmJvZHkucmVtb3ZlQXR0cmlidXRlKFwic3R5bGVcIik7XG4gICAgfSk7XG4gICAgY2xlYW51cHMuZm9yRWFjaCgoZm4pID0+IGZuKCkpO1xuICB9O1xufVxuXG4vLyBzcmMvZGlzbWlzc2FibGUtbGF5ZXIudHNcbmZ1bmN0aW9uIHRyYWNrRGlzbWlzc2FibGVFbGVtZW50SW1wbChub2RlLCBvcHRpb25zKSB7XG4gIGNvbnN0IHsgd2Fybk9uTWlzc2luZ05vZGUgPSB0cnVlIH0gPSBvcHRpb25zO1xuICBpZiAod2Fybk9uTWlzc2luZ05vZGUgJiYgIW5vZGUpIHtcbiAgICB3YXJuKFwiW0B6YWctanMvZGlzbWlzc2FibGVdIG5vZGUgaXMgYG51bGxgIG9yIGB1bmRlZmluZWRgXCIpO1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAoIW5vZGUpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgY29uc3QgeyBvbkRpc21pc3MsIHBvaW50ZXJCbG9ja2luZywgZXhjbHVkZTogZXhjbHVkZUNvbnRhaW5lcnMsIGRlYnVnIH0gPSBvcHRpb25zO1xuICBjb25zdCBsYXllciA9IHsgZGlzbWlzczogb25EaXNtaXNzLCBub2RlLCBwb2ludGVyQmxvY2tpbmcgfTtcbiAgbGF5ZXJTdGFjay5hZGQobGF5ZXIpO1xuICBhc3NpZ25Qb2ludGVyRXZlbnRUb0xheWVycygpO1xuICBmdW5jdGlvbiBvblBvaW50ZXJEb3duT3V0c2lkZShldmVudCkge1xuICAgIGNvbnN0IHRhcmdldCA9IGdldEV2ZW50VGFyZ2V0KGV2ZW50LmRldGFpbC5vcmlnaW5hbEV2ZW50KTtcbiAgICBpZiAobGF5ZXJTdGFjay5pc0JlbG93UG9pbnRlckJsb2NraW5nTGF5ZXIobm9kZSkgfHwgbGF5ZXJTdGFjay5pc0luQnJhbmNoKHRhcmdldCkpIHJldHVybjtcbiAgICBvcHRpb25zLm9uUG9pbnRlckRvd25PdXRzaWRlPy4oZXZlbnQpO1xuICAgIG9wdGlvbnMub25JbnRlcmFjdE91dHNpZGU/LihldmVudCk7XG4gICAgaWYgKGV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQpIHJldHVybjtcbiAgICBpZiAoZGVidWcpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwib25Qb2ludGVyRG93bk91dHNpZGU6XCIsIGV2ZW50LmRldGFpbC5vcmlnaW5hbEV2ZW50KTtcbiAgICB9XG4gICAgb25EaXNtaXNzPy4oKTtcbiAgfVxuICBmdW5jdGlvbiBvbkZvY3VzT3V0c2lkZShldmVudCkge1xuICAgIGNvbnN0IHRhcmdldCA9IGdldEV2ZW50VGFyZ2V0KGV2ZW50LmRldGFpbC5vcmlnaW5hbEV2ZW50KTtcbiAgICBpZiAobGF5ZXJTdGFjay5pc0luQnJhbmNoKHRhcmdldCkpIHJldHVybjtcbiAgICBvcHRpb25zLm9uRm9jdXNPdXRzaWRlPy4oZXZlbnQpO1xuICAgIG9wdGlvbnMub25JbnRlcmFjdE91dHNpZGU/LihldmVudCk7XG4gICAgaWYgKGV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQpIHJldHVybjtcbiAgICBpZiAoZGVidWcpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwib25Gb2N1c091dHNpZGU6XCIsIGV2ZW50LmRldGFpbC5vcmlnaW5hbEV2ZW50KTtcbiAgICB9XG4gICAgb25EaXNtaXNzPy4oKTtcbiAgfVxuICBmdW5jdGlvbiBvbkVzY2FwZUtleURvd24oZXZlbnQpIHtcbiAgICBpZiAoIWxheWVyU3RhY2suaXNUb3BNb3N0KG5vZGUpKSByZXR1cm47XG4gICAgb3B0aW9ucy5vbkVzY2FwZUtleURvd24/LihldmVudCk7XG4gICAgaWYgKCFldmVudC5kZWZhdWx0UHJldmVudGVkICYmIG9uRGlzbWlzcykge1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIG9uRGlzbWlzcygpO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBleGNsdWRlKHRhcmdldCkge1xuICAgIGlmICghbm9kZSkgcmV0dXJuIGZhbHNlO1xuICAgIGNvbnN0IGNvbnRhaW5lcnMgPSB0eXBlb2YgZXhjbHVkZUNvbnRhaW5lcnMgPT09IFwiZnVuY3Rpb25cIiA/IGV4Y2x1ZGVDb250YWluZXJzKCkgOiBleGNsdWRlQ29udGFpbmVycztcbiAgICBjb25zdCBfY29udGFpbmVycyA9IEFycmF5LmlzQXJyYXkoY29udGFpbmVycykgPyBjb250YWluZXJzIDogW2NvbnRhaW5lcnNdO1xuICAgIGNvbnN0IHBlcnNpc3RlbnRFbGVtZW50cyA9IG9wdGlvbnMucGVyc2lzdGVudEVsZW1lbnRzPy5tYXAoKGZuKSA9PiBmbigpKS5maWx0ZXIoaXNIVE1MRWxlbWVudCk7XG4gICAgaWYgKHBlcnNpc3RlbnRFbGVtZW50cykgX2NvbnRhaW5lcnMucHVzaCguLi5wZXJzaXN0ZW50RWxlbWVudHMpO1xuICAgIHJldHVybiBfY29udGFpbmVycy5zb21lKChub2RlMikgPT4gY29udGFpbnMobm9kZTIsIHRhcmdldCkpIHx8IGxheWVyU3RhY2suaXNJbk5lc3RlZExheWVyKG5vZGUsIHRhcmdldCk7XG4gIH1cbiAgY29uc3QgY2xlYW51cHMgPSBbXG4gICAgcG9pbnRlckJsb2NraW5nID8gZGlzYWJsZVBvaW50ZXJFdmVudHNPdXRzaWRlKG5vZGUsIG9wdGlvbnMucGVyc2lzdGVudEVsZW1lbnRzKSA6IHZvaWQgMCxcbiAgICB0cmFja0VzY2FwZUtleWRvd24obm9kZSwgb25Fc2NhcGVLZXlEb3duKSxcbiAgICB0cmFja0ludGVyYWN0T3V0c2lkZShub2RlLCB7IGV4Y2x1ZGUsIG9uRm9jdXNPdXRzaWRlLCBvblBvaW50ZXJEb3duT3V0c2lkZSwgZGVmZXI6IG9wdGlvbnMuZGVmZXIgfSlcbiAgXTtcbiAgcmV0dXJuICgpID0+IHtcbiAgICBsYXllclN0YWNrLnJlbW92ZShub2RlKTtcbiAgICBhc3NpZ25Qb2ludGVyRXZlbnRUb0xheWVycygpO1xuICAgIGNsZWFyUG9pbnRlckV2ZW50KG5vZGUpO1xuICAgIGNsZWFudXBzLmZvckVhY2goKGZuKSA9PiBmbj8uKCkpO1xuICB9O1xufVxuZnVuY3Rpb24gdHJhY2tEaXNtaXNzYWJsZUVsZW1lbnQobm9kZU9yRm4sIG9wdGlvbnMpIHtcbiAgY29uc3QgeyBkZWZlciB9ID0gb3B0aW9ucztcbiAgY29uc3QgZnVuYyA9IGRlZmVyID8gcmFmIDogKHYpID0+IHYoKTtcbiAgY29uc3QgY2xlYW51cHMgPSBbXTtcbiAgY2xlYW51cHMucHVzaChcbiAgICBmdW5jKCgpID0+IHtcbiAgICAgIGNvbnN0IG5vZGUgPSBpc0Z1bmN0aW9uKG5vZGVPckZuKSA/IG5vZGVPckZuKCkgOiBub2RlT3JGbjtcbiAgICAgIGNsZWFudXBzLnB1c2godHJhY2tEaXNtaXNzYWJsZUVsZW1lbnRJbXBsKG5vZGUsIG9wdGlvbnMpKTtcbiAgICB9KVxuICApO1xuICByZXR1cm4gKCkgPT4ge1xuICAgIGNsZWFudXBzLmZvckVhY2goKGZuKSA9PiBmbj8uKCkpO1xuICB9O1xufVxuZnVuY3Rpb24gdHJhY2tEaXNtaXNzYWJsZUJyYW5jaChub2RlT3JGbiwgb3B0aW9ucyA9IHt9KSB7XG4gIGNvbnN0IHsgZGVmZXIgfSA9IG9wdGlvbnM7XG4gIGNvbnN0IGZ1bmMgPSBkZWZlciA/IHJhZiA6ICh2KSA9PiB2KCk7XG4gIGNvbnN0IGNsZWFudXBzID0gW107XG4gIGNsZWFudXBzLnB1c2goXG4gICAgZnVuYygoKSA9PiB7XG4gICAgICBjb25zdCBub2RlID0gaXNGdW5jdGlvbihub2RlT3JGbikgPyBub2RlT3JGbigpIDogbm9kZU9yRm47XG4gICAgICBpZiAoIW5vZGUpIHtcbiAgICAgICAgd2FybihcIltAemFnLWpzL2Rpc21pc3NhYmxlXSBicmFuY2ggbm9kZSBpcyBgbnVsbGAgb3IgYHVuZGVmaW5lZGBcIik7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGxheWVyU3RhY2suYWRkQnJhbmNoKG5vZGUpO1xuICAgICAgY2xlYW51cHMucHVzaCgoKSA9PiB7XG4gICAgICAgIGxheWVyU3RhY2sucmVtb3ZlQnJhbmNoKG5vZGUpO1xuICAgICAgfSk7XG4gICAgfSlcbiAgKTtcbiAgcmV0dXJuICgpID0+IHtcbiAgICBjbGVhbnVwcy5mb3JFYWNoKChmbikgPT4gZm4/LigpKTtcbiAgfTtcbn1cblxuZXhwb3J0IHsgdHJhY2tEaXNtaXNzYWJsZUJyYW5jaCwgdHJhY2tEaXNtaXNzYWJsZUVsZW1lbnQgfTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/dismissable/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/@zag-js/dom-query/dist/index.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MAX_Z_INDEX: () => (/* binding */ MAX_Z_INDEX),\n/* harmony export */   addDomEvent: () => (/* binding */ addDomEvent),\n/* harmony export */   ariaAttr: () => (/* binding */ ariaAttr),\n/* harmony export */   clickIfLink: () => (/* binding */ clickIfLink),\n/* harmony export */   contains: () => (/* binding */ contains),\n/* harmony export */   createScope: () => (/* binding */ createScope),\n/* harmony export */   dataAttr: () => (/* binding */ dataAttr),\n/* harmony export */   defaultItemToId: () => (/* binding */ defaultItemToId),\n/* harmony export */   disableTextSelection: () => (/* binding */ disableTextSelection),\n/* harmony export */   dispatchInputCheckedEvent: () => (/* binding */ dispatchInputCheckedEvent),\n/* harmony export */   dispatchInputValueEvent: () => (/* binding */ dispatchInputValueEvent),\n/* harmony export */   getActiveElement: () => (/* binding */ getActiveElement),\n/* harmony export */   getBeforeInputValue: () => (/* binding */ getBeforeInputValue),\n/* harmony export */   getByText: () => (/* binding */ getByText),\n/* harmony export */   getByTypeahead: () => (/* binding */ getByTypeahead),\n/* harmony export */   getComputedStyle: () => (/* binding */ getComputedStyle),\n/* harmony export */   getDataUrl: () => (/* binding */ getDataUrl),\n/* harmony export */   getDocument: () => (/* binding */ getDocument),\n/* harmony export */   getDocumentElement: () => (/* binding */ getDocumentElement),\n/* harmony export */   getEventKey: () => (/* binding */ getEventKey),\n/* harmony export */   getEventPoint: () => (/* binding */ getEventPoint),\n/* harmony export */   getEventStep: () => (/* binding */ getEventStep),\n/* harmony export */   getEventTarget: () => (/* binding */ getEventTarget),\n/* harmony export */   getFirstFocusable: () => (/* binding */ getFirstFocusable),\n/* harmony export */   getFirstTabbable: () => (/* binding */ getFirstTabbable),\n/* harmony export */   getFocusables: () => (/* binding */ getFocusables),\n/* harmony export */   getInitialFocus: () => (/* binding */ getInitialFocus),\n/* harmony export */   getLastTabbable: () => (/* binding */ getLastTabbable),\n/* harmony export */   getNativeEvent: () => (/* binding */ getNativeEvent),\n/* harmony export */   getNearestOverflowAncestor: () => (/* binding */ getNearestOverflowAncestor),\n/* harmony export */   getNextTabbable: () => (/* binding */ getNextTabbable),\n/* harmony export */   getNodeName: () => (/* binding */ getNodeName),\n/* harmony export */   getOverflowAncestors: () => (/* binding */ getOverflowAncestors),\n/* harmony export */   getParentNode: () => (/* binding */ getParentNode),\n/* harmony export */   getPlatform: () => (/* binding */ getPlatform),\n/* harmony export */   getRelativePoint: () => (/* binding */ getRelativePoint),\n/* harmony export */   getScrollPosition: () => (/* binding */ getScrollPosition),\n/* harmony export */   getTabIndex: () => (/* binding */ getTabIndex),\n/* harmony export */   getTabbableEdges: () => (/* binding */ getTabbableEdges),\n/* harmony export */   getTabbables: () => (/* binding */ getTabbables),\n/* harmony export */   getUserAgent: () => (/* binding */ getUserAgent),\n/* harmony export */   getWindow: () => (/* binding */ getWindow),\n/* harmony export */   indexOfId: () => (/* binding */ indexOfId),\n/* harmony export */   isAnchorElement: () => (/* binding */ isAnchorElement),\n/* harmony export */   isAndroid: () => (/* binding */ isAndroid),\n/* harmony export */   isApple: () => (/* binding */ isApple),\n/* harmony export */   isCaretAtStart: () => (/* binding */ isCaretAtStart),\n/* harmony export */   isChrome: () => (/* binding */ isChrome),\n/* harmony export */   isComposingEvent: () => (/* binding */ isComposingEvent),\n/* harmony export */   isContextMenuEvent: () => (/* binding */ isContextMenuEvent),\n/* harmony export */   isCtrlOrMetaKey: () => (/* binding */ isCtrlOrMetaKey),\n/* harmony export */   isDocument: () => (/* binding */ isDocument),\n/* harmony export */   isDom: () => (/* binding */ isDom),\n/* harmony export */   isDownloadingEvent: () => (/* binding */ isDownloadingEvent),\n/* harmony export */   isEditableElement: () => (/* binding */ isEditableElement),\n/* harmony export */   isElementVisible: () => (/* binding */ isElementVisible),\n/* harmony export */   isFirefox: () => (/* binding */ isFirefox),\n/* harmony export */   isFocusable: () => (/* binding */ isFocusable),\n/* harmony export */   isHTMLElement: () => (/* binding */ isHTMLElement),\n/* harmony export */   isIPad: () => (/* binding */ isIPad),\n/* harmony export */   isIPhone: () => (/* binding */ isIPhone),\n/* harmony export */   isInView: () => (/* binding */ isInView),\n/* harmony export */   isInputElement: () => (/* binding */ isInputElement),\n/* harmony export */   isIos: () => (/* binding */ isIos),\n/* harmony export */   isKeyboardClick: () => (/* binding */ isKeyboardClick),\n/* harmony export */   isLeftClick: () => (/* binding */ isLeftClick),\n/* harmony export */   isMac: () => (/* binding */ isMac),\n/* harmony export */   isModifierKey: () => (/* binding */ isModifierKey),\n/* harmony export */   isNode: () => (/* binding */ isNode),\n/* harmony export */   isOpeningInNewTab: () => (/* binding */ isOpeningInNewTab),\n/* harmony export */   isOverflowElement: () => (/* binding */ isOverflowElement),\n/* harmony export */   isPrintableKey: () => (/* binding */ isPrintableKey),\n/* harmony export */   isRootElement: () => (/* binding */ isRootElement),\n/* harmony export */   isSafari: () => (/* binding */ isSafari),\n/* harmony export */   isSelfTarget: () => (/* binding */ isSelfTarget),\n/* harmony export */   isShadowRoot: () => (/* binding */ isShadowRoot),\n/* harmony export */   isTabbable: () => (/* binding */ isTabbable),\n/* harmony export */   isTouchDevice: () => (/* binding */ isTouchDevice),\n/* harmony export */   isTouchEvent: () => (/* binding */ isTouchEvent),\n/* harmony export */   isValidTabEvent: () => (/* binding */ isValidTabEvent),\n/* harmony export */   isVirtualClick: () => (/* binding */ isVirtualClick),\n/* harmony export */   isVirtualPointerEvent: () => (/* binding */ isVirtualPointerEvent),\n/* harmony export */   isVisualViewport: () => (/* binding */ isVisualViewport),\n/* harmony export */   isWebKit: () => (/* binding */ isWebKit),\n/* harmony export */   isWindow: () => (/* binding */ isWindow),\n/* harmony export */   itemById: () => (/* binding */ itemById),\n/* harmony export */   nextById: () => (/* binding */ nextById),\n/* harmony export */   nextTick: () => (/* binding */ nextTick),\n/* harmony export */   observeAttributes: () => (/* binding */ observeAttributes),\n/* harmony export */   observeChildren: () => (/* binding */ observeChildren),\n/* harmony export */   prevById: () => (/* binding */ prevById),\n/* harmony export */   proxyTabFocus: () => (/* binding */ proxyTabFocus),\n/* harmony export */   query: () => (/* binding */ query),\n/* harmony export */   queryAll: () => (/* binding */ queryAll),\n/* harmony export */   queueBeforeEvent: () => (/* binding */ queueBeforeEvent),\n/* harmony export */   raf: () => (/* binding */ raf),\n/* harmony export */   requestPointerLock: () => (/* binding */ requestPointerLock),\n/* harmony export */   restoreTextSelection: () => (/* binding */ restoreTextSelection),\n/* harmony export */   scrollIntoView: () => (/* binding */ scrollIntoView),\n/* harmony export */   setAttribute: () => (/* binding */ setAttribute),\n/* harmony export */   setCaretToEnd: () => (/* binding */ setCaretToEnd),\n/* harmony export */   setElementChecked: () => (/* binding */ setElementChecked),\n/* harmony export */   setElementValue: () => (/* binding */ setElementValue),\n/* harmony export */   setProperty: () => (/* binding */ setProperty),\n/* harmony export */   setStyle: () => (/* binding */ setStyle),\n/* harmony export */   setStyleProperty: () => (/* binding */ setStyleProperty),\n/* harmony export */   setVisuallyHidden: () => (/* binding */ setVisuallyHidden),\n/* harmony export */   trackElementRect: () => (/* binding */ trackElementRect),\n/* harmony export */   trackFormControl: () => (/* binding */ trackFormControl),\n/* harmony export */   trackPointerMove: () => (/* binding */ trackPointerMove),\n/* harmony export */   trackPress: () => (/* binding */ trackPress),\n/* harmony export */   trackVisualViewport: () => (/* binding */ trackVisualViewport),\n/* harmony export */   visuallyHiddenStyle: () => (/* binding */ visuallyHiddenStyle),\n/* harmony export */   waitForElement: () => (/* binding */ waitForElement),\n/* harmony export */   waitForElements: () => (/* binding */ waitForElements)\n/* harmony export */ });\n// src/caret.ts\nfunction isCaretAtStart(input) {\n  if (!input) return false;\n  try {\n    return input.selectionStart === 0 && input.selectionEnd === 0;\n  } catch {\n    return input.value === \"\";\n  }\n}\nfunction setCaretToEnd(input) {\n  if (!input) return;\n  const start = input.selectionStart ?? 0;\n  const end = input.selectionEnd ?? 0;\n  if (Math.abs(end - start) !== 0) return;\n  if (start !== 0) return;\n  input.setSelectionRange(input.value.length, input.value.length);\n}\n\n// src/shared.ts\nvar clamp = (value) => Math.max(0, Math.min(1, value));\nvar wrap = (v, idx) => {\n  return v.map((_, index) => v[(Math.max(idx, 0) + index) % v.length]);\n};\nvar pipe = (...fns) => (arg) => fns.reduce((acc, fn) => fn(acc), arg);\nvar noop = () => void 0;\nvar isObject = (v) => typeof v === \"object\" && v !== null;\nvar MAX_Z_INDEX = 2147483647;\nvar dataAttr = (guard) => guard ? \"\" : void 0;\nvar ariaAttr = (guard) => guard ? \"true\" : void 0;\n\n// src/node.ts\nvar ELEMENT_NODE = 1;\nvar DOCUMENT_NODE = 9;\nvar DOCUMENT_FRAGMENT_NODE = 11;\nvar isHTMLElement = (el) => isObject(el) && el.nodeType === ELEMENT_NODE && typeof el.nodeName === \"string\";\nvar isDocument = (el) => isObject(el) && el.nodeType === DOCUMENT_NODE;\nvar isWindow = (el) => isObject(el) && el === el.window;\nvar isVisualViewport = (el) => isObject(el) && el.constructor.name === \"VisualViewport\";\nvar getNodeName = (node) => {\n  if (isHTMLElement(node)) return node.localName || \"\";\n  return \"#document\";\n};\nfunction isRootElement(node) {\n  return [\"html\", \"body\", \"#document\"].includes(getNodeName(node));\n}\nvar isNode = (el) => isObject(el) && el.nodeType !== void 0;\nvar isShadowRoot = (el) => isNode(el) && el.nodeType === DOCUMENT_FRAGMENT_NODE && \"host\" in el;\nvar isInputElement = (el) => isHTMLElement(el) && el.localName === \"input\";\nvar isAnchorElement = (el) => !!el?.matches(\"a[href]\");\nvar isElementVisible = (el) => {\n  if (!isHTMLElement(el)) return false;\n  return el.offsetWidth > 0 || el.offsetHeight > 0 || el.getClientRects().length > 0;\n};\nvar TEXTAREA_SELECT_REGEX = /(textarea|select)/;\nfunction isEditableElement(el) {\n  if (el == null || !isHTMLElement(el)) return false;\n  try {\n    return isInputElement(el) && el.selectionStart != null || TEXTAREA_SELECT_REGEX.test(el.localName) || el.isContentEditable || el.getAttribute(\"contenteditable\") === \"true\" || el.getAttribute(\"contenteditable\") === \"\";\n  } catch {\n    return false;\n  }\n}\nfunction contains(parent, child) {\n  if (!parent || !child) return false;\n  if (!isHTMLElement(parent) || !isHTMLElement(child)) return false;\n  const rootNode = child.getRootNode?.();\n  if (parent === child) return true;\n  if (parent.contains(child)) return true;\n  if (rootNode && isShadowRoot(rootNode)) {\n    let next = child;\n    while (next) {\n      if (parent === next) return true;\n      next = next.parentNode || next.host;\n    }\n  }\n  return false;\n}\nfunction getDocument(el) {\n  if (isDocument(el)) return el;\n  if (isWindow(el)) return el.document;\n  return el?.ownerDocument ?? document;\n}\nfunction getDocumentElement(el) {\n  return getDocument(el).documentElement;\n}\nfunction getWindow(el) {\n  if (isShadowRoot(el)) return getWindow(el.host);\n  if (isDocument(el)) return el.defaultView ?? window;\n  if (isHTMLElement(el)) return el.ownerDocument?.defaultView ?? window;\n  return window;\n}\nfunction getActiveElement(rootNode) {\n  let activeElement = rootNode.activeElement;\n  while (activeElement?.shadowRoot) {\n    const el = activeElement.shadowRoot.activeElement;\n    if (el === activeElement) break;\n    else activeElement = el;\n  }\n  return activeElement;\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === \"html\") return node;\n  const result = node.assignedSlot || node.parentNode || isShadowRoot(node) && node.host || getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\n\n// src/computed-style.ts\nvar styleCache = /* @__PURE__ */ new WeakMap();\nfunction getComputedStyle(el) {\n  if (!styleCache.has(el)) {\n    styleCache.set(el, getWindow(el).getComputedStyle(el));\n  }\n  return styleCache.get(el);\n}\n\n// src/data-url.ts\nfunction getDataUrl(svg, opts) {\n  const { type, quality = 0.92, background } = opts;\n  if (!svg) throw new Error(\"[zag-js > getDataUrl]: Could not find the svg element\");\n  const win = getWindow(svg);\n  const doc = win.document;\n  const svgBounds = svg.getBoundingClientRect();\n  const svgClone = svg.cloneNode(true);\n  if (!svgClone.hasAttribute(\"viewBox\")) {\n    svgClone.setAttribute(\"viewBox\", `0 0 ${svgBounds.width} ${svgBounds.height}`);\n  }\n  const serializer = new win.XMLSerializer();\n  const source = '<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n' + serializer.serializeToString(svgClone);\n  const svgString = \"data:image/svg+xml;charset=utf-8,\" + encodeURIComponent(source);\n  if (type === \"image/svg+xml\") {\n    return Promise.resolve(svgString).then((str) => {\n      svgClone.remove();\n      return str;\n    });\n  }\n  const dpr = win.devicePixelRatio || 1;\n  const canvas = doc.createElement(\"canvas\");\n  const image = new win.Image();\n  image.src = svgString;\n  canvas.width = svgBounds.width * dpr;\n  canvas.height = svgBounds.height * dpr;\n  const context = canvas.getContext(\"2d\");\n  if (type === \"image/jpeg\" || background) {\n    context.fillStyle = background || \"white\";\n    context.fillRect(0, 0, canvas.width, canvas.height);\n  }\n  return new Promise((resolve) => {\n    image.onload = () => {\n      context?.drawImage(image, 0, 0, canvas.width, canvas.height);\n      resolve(canvas.toDataURL(type, quality));\n      svgClone.remove();\n    };\n  });\n}\n\n// src/platform.ts\nvar isDom = () => typeof document !== \"undefined\";\nfunction getPlatform() {\n  const agent = navigator.userAgentData;\n  return agent?.platform ?? navigator.platform;\n}\nfunction getUserAgent() {\n  const ua2 = navigator.userAgentData;\n  if (ua2 && Array.isArray(ua2.brands)) {\n    return ua2.brands.map(({ brand, version }) => `${brand}/${version}`).join(\" \");\n  }\n  return navigator.userAgent;\n}\nvar pt = (v) => isDom() && v.test(getPlatform());\nvar ua = (v) => isDom() && v.test(getUserAgent());\nvar vn = (v) => isDom() && v.test(navigator.vendor);\nvar isTouchDevice = () => isDom() && !!navigator.maxTouchPoints;\nvar isIPhone = () => pt(/^iPhone/i);\nvar isIPad = () => pt(/^iPad/i) || isMac() && navigator.maxTouchPoints > 1;\nvar isIos = () => isIPhone() || isIPad();\nvar isApple = () => isMac() || isIos();\nvar isMac = () => pt(/^Mac/i);\nvar isSafari = () => isApple() && vn(/apple/i);\nvar isFirefox = () => ua(/Firefox/i);\nvar isChrome = () => ua(/Chrome/i);\nvar isWebKit = () => ua(/AppleWebKit/i) && !isChrome();\nvar isAndroid = () => ua(/Android/i);\n\n// src/event.ts\nfunction getBeforeInputValue(event) {\n  const { selectionStart, selectionEnd, value } = event.currentTarget;\n  return value.slice(0, selectionStart) + event.data + value.slice(selectionEnd);\n}\nfunction getComposedPath(event) {\n  return event.composedPath?.() ?? event.nativeEvent?.composedPath?.();\n}\nfunction getEventTarget(event) {\n  const composedPath = getComposedPath(event);\n  return composedPath?.[0] ?? event.target;\n}\nvar isSelfTarget = (event) => {\n  return contains(event.currentTarget, getEventTarget(event));\n};\nfunction isOpeningInNewTab(event) {\n  const element = event.currentTarget;\n  if (!element) return false;\n  const isAppleDevice = isApple();\n  if (isAppleDevice && !event.metaKey) return false;\n  if (!isAppleDevice && !event.ctrlKey) return false;\n  const localName = element.localName;\n  if (localName === \"a\") return true;\n  if (localName === \"button\" && element.type === \"submit\") return true;\n  if (localName === \"input\" && element.type === \"submit\") return true;\n  return false;\n}\nfunction isDownloadingEvent(event) {\n  const element = event.currentTarget;\n  if (!element) return false;\n  const localName = element.localName;\n  if (!event.altKey) return false;\n  if (localName === \"a\") return true;\n  if (localName === \"button\" && element.type === \"submit\") return true;\n  if (localName === \"input\" && element.type === \"submit\") return true;\n  return false;\n}\nfunction isComposingEvent(event) {\n  return getNativeEvent(event).isComposing || event.keyCode === 229;\n}\nfunction isKeyboardClick(e) {\n  return e.detail === 0 || e.clientX === 0 && e.clientY === 0;\n}\nfunction isCtrlOrMetaKey(e) {\n  if (isMac()) return e.metaKey;\n  return e.ctrlKey;\n}\nfunction isPrintableKey(e) {\n  return e.key.length === 1 && !e.ctrlKey && !e.metaKey;\n}\nfunction isVirtualPointerEvent(e) {\n  return e.width === 0 && e.height === 0 || e.width === 1 && e.height === 1 && e.pressure === 0 && e.detail === 0 && e.pointerType === \"mouse\";\n}\nfunction isVirtualClick(e) {\n  if (e.mozInputSource === 0 && e.isTrusted) return true;\n  if (isAndroid() && e.pointerType) {\n    return e.type === \"click\" && e.buttons === 1;\n  }\n  return e.detail === 0 && !e.pointerType;\n}\nvar isLeftClick = (e) => e.button === 0;\nvar isContextMenuEvent = (e) => {\n  return e.button === 2 || isMac() && e.ctrlKey && e.button === 0;\n};\nvar isModifierKey = (e) => e.ctrlKey || e.altKey || e.metaKey;\nvar isTouchEvent = (event) => \"touches\" in event && event.touches.length > 0;\nvar keyMap = {\n  Up: \"ArrowUp\",\n  Down: \"ArrowDown\",\n  Esc: \"Escape\",\n  \" \": \"Space\",\n  \",\": \"Comma\",\n  Left: \"ArrowLeft\",\n  Right: \"ArrowRight\"\n};\nvar rtlKeyMap = {\n  ArrowLeft: \"ArrowRight\",\n  ArrowRight: \"ArrowLeft\"\n};\nfunction getEventKey(event, options = {}) {\n  const { dir = \"ltr\", orientation = \"horizontal\" } = options;\n  let key = event.key;\n  key = keyMap[key] ?? key;\n  const isRtl = dir === \"rtl\" && orientation === \"horizontal\";\n  if (isRtl && key in rtlKeyMap) key = rtlKeyMap[key];\n  return key;\n}\nfunction getNativeEvent(event) {\n  return event.nativeEvent ?? event;\n}\nvar pageKeys = /* @__PURE__ */ new Set([\"PageUp\", \"PageDown\"]);\nvar arrowKeys = /* @__PURE__ */ new Set([\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"]);\nfunction getEventStep(event) {\n  if (event.ctrlKey || event.metaKey) {\n    return 0.1;\n  } else {\n    const isPageKey = pageKeys.has(event.key);\n    const isSkipKey = isPageKey || event.shiftKey && arrowKeys.has(event.key);\n    return isSkipKey ? 10 : 1;\n  }\n}\nfunction getEventPoint(event, type = \"client\") {\n  const point = isTouchEvent(event) ? event.touches[0] || event.changedTouches[0] : event;\n  return { x: point[`${type}X`], y: point[`${type}Y`] };\n}\nvar addDomEvent = (target, eventName, handler, options) => {\n  const node = typeof target === \"function\" ? target() : target;\n  node?.addEventListener(eventName, handler, options);\n  return () => {\n    node?.removeEventListener(eventName, handler, options);\n  };\n};\n\n// src/form.ts\nfunction getDescriptor(el, options) {\n  const { type = \"HTMLInputElement\", property = \"value\" } = options;\n  const proto = getWindow(el)[type].prototype;\n  return Object.getOwnPropertyDescriptor(proto, property) ?? {};\n}\nfunction getElementType(el) {\n  if (el.localName === \"input\") return \"HTMLInputElement\";\n  if (el.localName === \"textarea\") return \"HTMLTextAreaElement\";\n  if (el.localName === \"select\") return \"HTMLSelectElement\";\n}\nfunction setElementValue(el, value, property = \"value\") {\n  if (!el) return;\n  const type = getElementType(el);\n  if (type) {\n    const descriptor = getDescriptor(el, { type, property });\n    descriptor.set?.call(el, value);\n  }\n  el.setAttribute(property, value);\n}\nfunction setElementChecked(el, checked) {\n  if (!el) return;\n  const descriptor = getDescriptor(el, { type: \"HTMLInputElement\", property: \"checked\" });\n  descriptor.set?.call(el, checked);\n  if (checked) el.setAttribute(\"checked\", \"\");\n  else el.removeAttribute(\"checked\");\n}\nfunction dispatchInputValueEvent(el, options) {\n  const { value, bubbles = true } = options;\n  if (!el) return;\n  const win = getWindow(el);\n  if (!(el instanceof win.HTMLInputElement)) return;\n  setElementValue(el, `${value}`);\n  el.dispatchEvent(new win.Event(\"input\", { bubbles }));\n}\nfunction dispatchInputCheckedEvent(el, options) {\n  const { checked, bubbles = true } = options;\n  if (!el) return;\n  const win = getWindow(el);\n  if (!(el instanceof win.HTMLInputElement)) return;\n  setElementChecked(el, checked);\n  el.dispatchEvent(new win.Event(\"click\", { bubbles }));\n}\nfunction getClosestForm(el) {\n  return isFormElement(el) ? el.form : el.closest(\"form\");\n}\nfunction isFormElement(el) {\n  return el.matches(\"textarea, input, select, button\");\n}\nfunction trackFormReset(el, callback) {\n  if (!el) return;\n  const form = getClosestForm(el);\n  const onReset = (e) => {\n    if (e.defaultPrevented) return;\n    callback();\n  };\n  form?.addEventListener(\"reset\", onReset, { passive: true });\n  return () => form?.removeEventListener(\"reset\", onReset);\n}\nfunction trackFieldsetDisabled(el, callback) {\n  const fieldset = el?.closest(\"fieldset\");\n  if (!fieldset) return;\n  callback(fieldset.disabled);\n  const win = getWindow(fieldset);\n  const obs = new win.MutationObserver(() => callback(fieldset.disabled));\n  obs.observe(fieldset, {\n    attributes: true,\n    attributeFilter: [\"disabled\"]\n  });\n  return () => obs.disconnect();\n}\nfunction trackFormControl(el, options) {\n  if (!el) return;\n  const { onFieldsetDisabledChange, onFormReset } = options;\n  const cleanups = [trackFormReset(el, onFormReset), trackFieldsetDisabled(el, onFieldsetDisabledChange)];\n  return () => cleanups.forEach((cleanup) => cleanup?.());\n}\n\n// src/tabbable.ts\nvar isFrame = (el) => isHTMLElement(el) && el.tagName === \"IFRAME\";\nvar hasTabIndex = (el) => !Number.isNaN(parseInt(el.getAttribute(\"tabindex\") || \"0\", 10));\nvar hasNegativeTabIndex = (el) => parseInt(el.getAttribute(\"tabindex\") || \"0\", 10) < 0;\nvar focusableSelector = \"input:not([type='hidden']):not([disabled]), select:not([disabled]), textarea:not([disabled]), a[href], button:not([disabled]), [tabindex], iframe, object, embed, area[href], audio[controls], video[controls], [contenteditable]:not([contenteditable='false']), details > summary:first-of-type\";\nvar getFocusables = (container, includeContainer = false) => {\n  if (!container) return [];\n  const elements = Array.from(container.querySelectorAll(focusableSelector));\n  const include = includeContainer == true || includeContainer == \"if-empty\" && elements.length === 0;\n  if (include && isHTMLElement(container) && isFocusable(container)) {\n    elements.unshift(container);\n  }\n  const focusableElements = elements.filter(isFocusable);\n  focusableElements.forEach((element, i) => {\n    if (isFrame(element) && element.contentDocument) {\n      const frameBody = element.contentDocument.body;\n      focusableElements.splice(i, 1, ...getFocusables(frameBody));\n    }\n  });\n  return focusableElements;\n};\nfunction isFocusable(element) {\n  if (!element || element.closest(\"[inert]\")) return false;\n  return element.matches(focusableSelector) && isElementVisible(element);\n}\nfunction getFirstFocusable(container, includeContainer) {\n  const [first] = getFocusables(container, includeContainer);\n  return first || null;\n}\nfunction getTabbables(container, includeContainer) {\n  if (!container) return [];\n  const elements = Array.from(container.querySelectorAll(focusableSelector));\n  const tabbableElements = elements.filter(isTabbable);\n  if (includeContainer && isTabbable(container)) {\n    tabbableElements.unshift(container);\n  }\n  tabbableElements.forEach((element, i) => {\n    if (isFrame(element) && element.contentDocument) {\n      const frameBody = element.contentDocument.body;\n      const allFrameTabbable = getTabbables(frameBody);\n      tabbableElements.splice(i, 1, ...allFrameTabbable);\n    }\n  });\n  if (!tabbableElements.length && includeContainer) {\n    return elements;\n  }\n  return tabbableElements;\n}\nfunction isTabbable(el) {\n  if (el != null && el.tabIndex > 0) return true;\n  return isFocusable(el) && !hasNegativeTabIndex(el);\n}\nfunction getFirstTabbable(container, includeContainer) {\n  const [first] = getTabbables(container, includeContainer);\n  return first || null;\n}\nfunction getLastTabbable(container, includeContainer) {\n  const elements = getTabbables(container, includeContainer);\n  return elements[elements.length - 1] || null;\n}\nfunction getTabbableEdges(container, includeContainer) {\n  const elements = getTabbables(container, includeContainer);\n  const first = elements[0] || null;\n  const last = elements[elements.length - 1] || null;\n  return [first, last];\n}\nfunction getNextTabbable(container, current) {\n  const tabbables = getTabbables(container);\n  const doc = container?.ownerDocument || document;\n  const currentElement = current ?? doc.activeElement;\n  if (!currentElement) return null;\n  const index = tabbables.indexOf(currentElement);\n  return tabbables[index + 1] || null;\n}\nfunction getTabIndex(node) {\n  if (node.tabIndex < 0) {\n    if ((/^(audio|video|details)$/.test(node.localName) || isEditableElement(node)) && !hasTabIndex(node)) {\n      return 0;\n    }\n  }\n  return node.tabIndex;\n}\n\n// src/initial-focus.ts\nfunction getInitialFocus(options) {\n  const { root, getInitialEl, filter, enabled = true } = options;\n  if (!enabled) return;\n  let node = null;\n  node || (node = typeof getInitialEl === \"function\" ? getInitialEl() : getInitialEl);\n  node || (node = root?.querySelector(\"[data-autofocus],[autofocus]\"));\n  if (!node) {\n    const tabbables = getTabbables(root);\n    node = filter ? tabbables.filter(filter)[0] : tabbables[0];\n  }\n  return node || root || void 0;\n}\nfunction isValidTabEvent(event) {\n  const container = event.currentTarget;\n  if (!container) return false;\n  const [firstTabbable, lastTabbable] = getTabbableEdges(container);\n  const doc = container.ownerDocument || document;\n  if (doc.activeElement === firstTabbable && event.shiftKey) return false;\n  if (doc.activeElement === lastTabbable && !event.shiftKey) return false;\n  if (!firstTabbable && !lastTabbable) return false;\n  return true;\n}\n\n// src/raf.ts\nfunction nextTick(fn) {\n  const set = /* @__PURE__ */ new Set();\n  function raf2(fn2) {\n    const id = globalThis.requestAnimationFrame(fn2);\n    set.add(() => globalThis.cancelAnimationFrame(id));\n  }\n  raf2(() => raf2(fn));\n  return function cleanup() {\n    set.forEach((fn2) => fn2());\n  };\n}\nfunction raf(fn) {\n  let cleanup;\n  const id = globalThis.requestAnimationFrame(() => {\n    cleanup = fn();\n  });\n  return () => {\n    globalThis.cancelAnimationFrame(id);\n    cleanup?.();\n  };\n}\nfunction queueBeforeEvent(el, type, cb) {\n  const cancelTimer = raf(() => {\n    el.removeEventListener(type, exec, true);\n    cb();\n  });\n  const exec = () => {\n    cancelTimer();\n    cb();\n  };\n  el.addEventListener(type, exec, { once: true, capture: true });\n  return cancelTimer;\n}\n\n// src/mutation-observer.ts\nfunction observeAttributesImpl(node, options) {\n  if (!node) return;\n  const { attributes, callback: fn } = options;\n  const win = node.ownerDocument.defaultView || window;\n  const obs = new win.MutationObserver((changes) => {\n    for (const change of changes) {\n      if (change.type === \"attributes\" && change.attributeName && attributes.includes(change.attributeName)) {\n        fn(change);\n      }\n    }\n  });\n  obs.observe(node, { attributes: true, attributeFilter: attributes });\n  return () => obs.disconnect();\n}\nfunction observeAttributes(nodeOrFn, options) {\n  const { defer } = options;\n  const func = defer ? raf : (v) => v();\n  const cleanups = [];\n  cleanups.push(\n    func(() => {\n      const node = typeof nodeOrFn === \"function\" ? nodeOrFn() : nodeOrFn;\n      cleanups.push(observeAttributesImpl(node, options));\n    })\n  );\n  return () => {\n    cleanups.forEach((fn) => fn?.());\n  };\n}\nfunction observeChildrenImpl(node, options) {\n  const { callback: fn } = options;\n  if (!node) return;\n  const win = node.ownerDocument.defaultView || window;\n  const obs = new win.MutationObserver(fn);\n  obs.observe(node, { childList: true, subtree: true });\n  return () => obs.disconnect();\n}\nfunction observeChildren(nodeOrFn, options) {\n  const { defer } = options;\n  const func = defer ? raf : (v) => v();\n  const cleanups = [];\n  cleanups.push(\n    func(() => {\n      const node = typeof nodeOrFn === \"function\" ? nodeOrFn() : nodeOrFn;\n      cleanups.push(observeChildrenImpl(node, options));\n    })\n  );\n  return () => {\n    cleanups.forEach((fn) => fn?.());\n  };\n}\n\n// src/navigate.ts\nfunction clickIfLink(el) {\n  const click = () => el.click();\n  if (isFirefox()) {\n    queueBeforeEvent(el, \"keyup\", click);\n  } else {\n    queueMicrotask(click);\n  }\n}\n\n// src/overflow.ts\nfunction getNearestOverflowAncestor(el) {\n  const parentNode = getParentNode(el);\n  if (isRootElement(parentNode)) return getDocument(parentNode).body;\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) return parentNode;\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(el, list = []) {\n  const scrollableAncestor = getNearestOverflowAncestor(el);\n  const isBody = scrollableAncestor === el.ownerDocument.body;\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, []));\n}\nvar getElementRect = (el) => {\n  if (isHTMLElement(el)) return el.getBoundingClientRect();\n  if (isVisualViewport(el)) return { top: 0, left: 0, bottom: el.height, right: el.width };\n  return { top: 0, left: 0, bottom: el.innerHeight, right: el.innerWidth };\n};\nfunction isInView(el, ancestor) {\n  if (!isHTMLElement(el)) return true;\n  const ancestorRect = getElementRect(ancestor);\n  const elRect = el.getBoundingClientRect();\n  return elRect.top >= ancestorRect.top && elRect.left >= ancestorRect.left && elRect.bottom <= ancestorRect.bottom && elRect.right <= ancestorRect.right;\n}\nvar OVERFLOW_RE = /auto|scroll|overlay|hidden|clip/;\nfunction isOverflowElement(el) {\n  const win = getWindow(el);\n  const { overflow, overflowX, overflowY, display } = win.getComputedStyle(el);\n  return OVERFLOW_RE.test(overflow + overflowY + overflowX) && ![\"inline\", \"contents\"].includes(display);\n}\nfunction isScrollable(el) {\n  return el.scrollHeight > el.clientHeight || el.scrollWidth > el.clientWidth;\n}\nfunction scrollIntoView(el, options) {\n  const { rootEl, ...scrollOptions } = options || {};\n  if (!el || !rootEl) return;\n  if (!isOverflowElement(rootEl) || !isScrollable(rootEl)) return;\n  el.scrollIntoView(scrollOptions);\n}\nfunction getScrollPosition(element) {\n  if (isHTMLElement(element)) {\n    return { scrollLeft: element.scrollLeft, scrollTop: element.scrollTop };\n  }\n  return { scrollLeft: element.scrollX, scrollTop: element.scrollY };\n}\n\n// src/point.ts\nfunction getRelativePoint(point, element) {\n  const { left, top, width, height } = element.getBoundingClientRect();\n  const offset = { x: point.x - left, y: point.y - top };\n  const percent = { x: clamp(offset.x / width), y: clamp(offset.y / height) };\n  function getPercentValue(options = {}) {\n    const { dir = \"ltr\", orientation = \"horizontal\", inverted } = options;\n    const invertX = typeof inverted === \"object\" ? inverted.x : inverted;\n    const invertY = typeof inverted === \"object\" ? inverted.y : inverted;\n    if (orientation === \"horizontal\") {\n      return dir === \"rtl\" || invertX ? 1 - percent.x : percent.x;\n    }\n    return invertY ? 1 - percent.y : percent.y;\n  }\n  return { offset, percent, getPercentValue };\n}\n\n// src/pointer-lock.ts\nfunction requestPointerLock(doc, fn) {\n  const body = doc.body;\n  const supported = \"pointerLockElement\" in doc || \"mozPointerLockElement\" in doc;\n  const isLocked = () => !!doc.pointerLockElement;\n  function onPointerChange() {\n    fn?.(isLocked());\n  }\n  function onPointerError(event) {\n    if (isLocked()) fn?.(false);\n    console.error(\"PointerLock error occurred:\", event);\n    doc.exitPointerLock();\n  }\n  if (!supported) return;\n  try {\n    body.requestPointerLock();\n  } catch {\n  }\n  const cleanup = [\n    addDomEvent(doc, \"pointerlockchange\", onPointerChange, false),\n    addDomEvent(doc, \"pointerlockerror\", onPointerError, false)\n  ];\n  return () => {\n    cleanup.forEach((cleanup2) => cleanup2());\n    doc.exitPointerLock();\n  };\n}\n\n// src/text-selection.ts\nvar state = \"default\";\nvar userSelect = \"\";\nvar elementMap = /* @__PURE__ */ new WeakMap();\nfunction disableTextSelectionImpl(options = {}) {\n  const { target, doc } = options;\n  const docNode = doc ?? document;\n  const rootEl = docNode.documentElement;\n  if (isIos()) {\n    if (state === \"default\") {\n      userSelect = rootEl.style.webkitUserSelect;\n      rootEl.style.webkitUserSelect = \"none\";\n    }\n    state = \"disabled\";\n  } else if (target) {\n    elementMap.set(target, target.style.userSelect);\n    target.style.userSelect = \"none\";\n  }\n  return () => restoreTextSelection({ target, doc: docNode });\n}\nfunction restoreTextSelection(options = {}) {\n  const { target, doc } = options;\n  const docNode = doc ?? document;\n  const rootEl = docNode.documentElement;\n  if (isIos()) {\n    if (state !== \"disabled\") return;\n    state = \"restoring\";\n    setTimeout(() => {\n      nextTick(() => {\n        if (state === \"restoring\") {\n          if (rootEl.style.webkitUserSelect === \"none\") {\n            rootEl.style.webkitUserSelect = userSelect || \"\";\n          }\n          userSelect = \"\";\n          state = \"default\";\n        }\n      });\n    }, 300);\n  } else {\n    if (target && elementMap.has(target)) {\n      const prevUserSelect = elementMap.get(target);\n      if (target.style.userSelect === \"none\") {\n        target.style.userSelect = prevUserSelect ?? \"\";\n      }\n      if (target.getAttribute(\"style\") === \"\") {\n        target.removeAttribute(\"style\");\n      }\n      elementMap.delete(target);\n    }\n  }\n}\nfunction disableTextSelection(options = {}) {\n  const { defer, target, ...restOptions } = options;\n  const func = defer ? raf : (v) => v();\n  const cleanups = [];\n  cleanups.push(\n    func(() => {\n      const node = typeof target === \"function\" ? target() : target;\n      cleanups.push(disableTextSelectionImpl({ ...restOptions, target: node }));\n    })\n  );\n  return () => {\n    cleanups.forEach((fn) => fn?.());\n  };\n}\n\n// src/pointer-move.ts\nfunction trackPointerMove(doc, handlers) {\n  const { onPointerMove, onPointerUp } = handlers;\n  const handleMove = (event) => {\n    const point = getEventPoint(event);\n    const distance = Math.sqrt(point.x ** 2 + point.y ** 2);\n    const moveBuffer = event.pointerType === \"touch\" ? 10 : 5;\n    if (distance < moveBuffer) return;\n    if (event.pointerType === \"mouse\" && event.button === 0) {\n      onPointerUp();\n      return;\n    }\n    onPointerMove({ point, event });\n  };\n  const cleanups = [\n    addDomEvent(doc, \"pointermove\", handleMove, false),\n    addDomEvent(doc, \"pointerup\", onPointerUp, false),\n    addDomEvent(doc, \"pointercancel\", onPointerUp, false),\n    addDomEvent(doc, \"contextmenu\", onPointerUp, false),\n    disableTextSelection({ doc })\n  ];\n  return () => {\n    cleanups.forEach((cleanup) => cleanup());\n  };\n}\n\n// src/press.ts\nfunction trackPress(options) {\n  const {\n    pointerNode,\n    keyboardNode = pointerNode,\n    onPress,\n    onPressStart,\n    onPressEnd,\n    isValidKey = (e) => e.key === \"Enter\"\n  } = options;\n  if (!pointerNode) return noop;\n  const win = getWindow(pointerNode);\n  const doc = getDocument(pointerNode);\n  let removeStartListeners = noop;\n  let removeEndListeners = noop;\n  let removeAccessibleListeners = noop;\n  const getInfo = (event) => ({\n    point: getEventPoint(event),\n    event\n  });\n  function startPress(event) {\n    onPressStart?.(getInfo(event));\n  }\n  function cancelPress(event) {\n    onPressEnd?.(getInfo(event));\n  }\n  const startPointerPress = (startEvent) => {\n    removeEndListeners();\n    const endPointerPress = (endEvent) => {\n      const target = getEventTarget(endEvent);\n      if (contains(pointerNode, target)) {\n        onPress?.(getInfo(endEvent));\n      } else {\n        onPressEnd?.(getInfo(endEvent));\n      }\n    };\n    const removePointerUpListener = addDomEvent(win, \"pointerup\", endPointerPress, { passive: !onPress, once: true });\n    const removePointerCancelListener = addDomEvent(win, \"pointercancel\", cancelPress, {\n      passive: !onPressEnd,\n      once: true\n    });\n    removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n    if (doc.activeElement === keyboardNode && startEvent.pointerType === \"mouse\") {\n      startEvent.preventDefault();\n    }\n    startPress(startEvent);\n  };\n  const removePointerListener = addDomEvent(pointerNode, \"pointerdown\", startPointerPress, { passive: !onPressStart });\n  const removeFocusListener = addDomEvent(keyboardNode, \"focus\", startAccessiblePress);\n  removeStartListeners = pipe(removePointerListener, removeFocusListener);\n  function startAccessiblePress() {\n    const handleKeydown = (keydownEvent) => {\n      if (!isValidKey(keydownEvent)) return;\n      const handleKeyup = (keyupEvent) => {\n        if (!isValidKey(keyupEvent)) return;\n        const evt2 = new win.PointerEvent(\"pointerup\");\n        const info = getInfo(evt2);\n        onPress?.(info);\n        onPressEnd?.(info);\n      };\n      removeEndListeners();\n      removeEndListeners = addDomEvent(keyboardNode, \"keyup\", handleKeyup);\n      const evt = new win.PointerEvent(\"pointerdown\");\n      startPress(evt);\n    };\n    const handleBlur = () => {\n      const evt = new win.PointerEvent(\"pointercancel\");\n      cancelPress(evt);\n    };\n    const removeKeydownListener = addDomEvent(keyboardNode, \"keydown\", handleKeydown);\n    const removeBlurListener = addDomEvent(keyboardNode, \"blur\", handleBlur);\n    removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n  }\n  return () => {\n    removeStartListeners();\n    removeEndListeners();\n    removeAccessibleListeners();\n  };\n}\n\n// src/proxy-tab-focus.ts\nfunction proxyTabFocusImpl(container, options = {}) {\n  const { triggerElement, onFocus, onFocusEnter } = options;\n  const doc = container?.ownerDocument || document;\n  const body = doc.body;\n  function onKeyDown(event) {\n    if (event.key !== \"Tab\") return;\n    let elementToFocus = null;\n    const [firstTabbable, lastTabbable] = getTabbableEdges(container, true);\n    const nextTabbableAfterTrigger = getNextTabbable(body, triggerElement);\n    const noTabbableElements = !firstTabbable && !lastTabbable;\n    if (event.shiftKey && nextTabbableAfterTrigger === doc.activeElement) {\n      onFocusEnter?.();\n      elementToFocus = lastTabbable;\n    } else if (event.shiftKey && (doc.activeElement === firstTabbable || noTabbableElements)) {\n      elementToFocus = triggerElement;\n    } else if (!event.shiftKey && doc.activeElement === triggerElement) {\n      onFocusEnter?.();\n      elementToFocus = firstTabbable;\n    } else if (!event.shiftKey && (doc.activeElement === lastTabbable || noTabbableElements)) {\n      elementToFocus = nextTabbableAfterTrigger;\n    }\n    if (!elementToFocus) return;\n    event.preventDefault();\n    if (typeof onFocus === \"function\") {\n      onFocus(elementToFocus);\n    } else {\n      elementToFocus.focus();\n    }\n  }\n  return addDomEvent(doc, \"keydown\", onKeyDown, true);\n}\nfunction proxyTabFocus(container, options) {\n  const { defer, triggerElement, ...restOptions } = options;\n  const func = defer ? raf : (v) => v();\n  const cleanups = [];\n  cleanups.push(\n    func(() => {\n      const node = typeof container === \"function\" ? container() : container;\n      const trigger = typeof triggerElement === \"function\" ? triggerElement() : triggerElement;\n      cleanups.push(proxyTabFocusImpl(node, { triggerElement: trigger, ...restOptions }));\n    })\n  );\n  return () => {\n    cleanups.forEach((fn) => fn?.());\n  };\n}\n\n// src/query.ts\nfunction queryAll(root, selector) {\n  return Array.from(root?.querySelectorAll(selector) ?? []);\n}\nfunction query(root, selector) {\n  return root?.querySelector(selector) ?? null;\n}\nvar defaultItemToId = (v) => v.id;\nfunction itemById(v, id, itemToId = defaultItemToId) {\n  return v.find((item) => itemToId(item) === id);\n}\nfunction indexOfId(v, id, itemToId = defaultItemToId) {\n  const item = itemById(v, id, itemToId);\n  return item ? v.indexOf(item) : -1;\n}\nfunction nextById(v, id, loop = true) {\n  let idx = indexOfId(v, id);\n  idx = loop ? (idx + 1) % v.length : Math.min(idx + 1, v.length - 1);\n  return v[idx];\n}\nfunction prevById(v, id, loop = true) {\n  let idx = indexOfId(v, id);\n  if (idx === -1) return loop ? v[v.length - 1] : null;\n  idx = loop ? (idx - 1 + v.length) % v.length : Math.max(0, idx - 1);\n  return v[idx];\n}\n\n// src/resize-observer.ts\nfunction trackElementRect(elements, options) {\n  const { onEntry, measure, box = \"border-box\" } = options;\n  const elems = (Array.isArray(elements) ? elements : [elements]).filter(isHTMLElement);\n  const win = getWindow(elems[0]);\n  const trigger = (entries) => {\n    const rects = elems.map((el) => measure(el));\n    onEntry({ rects, entries });\n  };\n  trigger([]);\n  const obs = new win.ResizeObserver(trigger);\n  elems.forEach((el) => obs.observe(el, { box }));\n  return () => obs.disconnect();\n}\n\n// src/scope.ts\nfunction createScope(methods) {\n  const dom = {\n    getRootNode: (ctx) => ctx.getRootNode?.() ?? document,\n    getDoc: (ctx) => getDocument(dom.getRootNode(ctx)),\n    getWin: (ctx) => dom.getDoc(ctx).defaultView ?? window,\n    getActiveElement: (ctx) => getActiveElement(dom.getRootNode(ctx)),\n    isActiveElement: (ctx, elem) => elem === dom.getActiveElement(ctx),\n    getById: (ctx, id) => dom.getRootNode(ctx).getElementById(id),\n    setValue: (elem, value) => {\n      if (elem == null || value == null) return;\n      setElementValue(elem, value.toString());\n    }\n  };\n  return { ...dom, ...methods };\n}\n\n// src/searchable.ts\nvar sanitize = (str) => str.split(\"\").map((char) => {\n  const code = char.charCodeAt(0);\n  if (code > 0 && code < 128) return char;\n  if (code >= 128 && code <= 255) return `/x${code.toString(16)}`.replace(\"/\", \"\\\\\");\n  return \"\";\n}).join(\"\").trim();\nvar getValueText = (el) => {\n  return sanitize(el.dataset?.valuetext ?? el.textContent ?? \"\");\n};\nvar match = (valueText, query2) => {\n  return valueText.trim().toLowerCase().startsWith(query2.toLowerCase());\n};\nfunction getByText(v, text, currentId, itemToId = defaultItemToId) {\n  const index = currentId ? indexOfId(v, currentId, itemToId) : -1;\n  let items = currentId ? wrap(v, index) : v;\n  const isSingleKey = text.length === 1;\n  if (isSingleKey) {\n    items = items.filter((item) => itemToId(item) !== currentId);\n  }\n  return items.find((item) => match(getValueText(item), text));\n}\n\n// src/set.ts\nfunction setAttribute(el, attr, v) {\n  const prev = el.getAttribute(attr);\n  const exists = prev != null;\n  el.setAttribute(attr, v);\n  return () => {\n    if (!exists) {\n      el.removeAttribute(attr);\n    } else {\n      el.setAttribute(attr, prev);\n    }\n  };\n}\nfunction setProperty(el, prop, v) {\n  const exists = prop in el;\n  const prev = el[prop];\n  el[prop] = v;\n  return () => {\n    if (!exists) {\n      delete el[prop];\n    } else {\n      el[prop] = prev;\n    }\n  };\n}\nfunction setStyle(el, style) {\n  if (!el) return noop;\n  const prev = Object.keys(style).reduce((acc, key) => {\n    acc[key] = el.style.getPropertyValue(key);\n    return acc;\n  }, {});\n  Object.assign(el.style, style);\n  return () => {\n    Object.assign(el.style, prev);\n    if (el.style.length === 0) {\n      el.removeAttribute(\"style\");\n    }\n  };\n}\nfunction setStyleProperty(el, prop, value) {\n  if (!el) return noop;\n  const prev = el.style.getPropertyValue(prop);\n  el.style.setProperty(prop, value);\n  return () => {\n    el.style.setProperty(prop, prev);\n    if (el.style.length === 0) {\n      el.removeAttribute(\"style\");\n    }\n  };\n}\n\n// src/typeahead.ts\nfunction getByTypeaheadImpl(baseItems, options) {\n  const { state: state2, activeId, key, timeout = 350, itemToId } = options;\n  const search = state2.keysSoFar + key;\n  const isRepeated = search.length > 1 && Array.from(search).every((char) => char === search[0]);\n  const query2 = isRepeated ? search[0] : search;\n  let items = baseItems.slice();\n  const next = getByText(items, query2, activeId, itemToId);\n  function cleanup() {\n    clearTimeout(state2.timer);\n    state2.timer = -1;\n  }\n  function update(value) {\n    state2.keysSoFar = value;\n    cleanup();\n    if (value !== \"\") {\n      state2.timer = +setTimeout(() => {\n        update(\"\");\n        cleanup();\n      }, timeout);\n    }\n  }\n  update(search);\n  return next;\n}\nvar getByTypeahead = /* @__PURE__ */ Object.assign(getByTypeaheadImpl, {\n  defaultOptions: { keysSoFar: \"\", timer: -1 },\n  isValidEvent: isValidTypeaheadEvent\n});\nfunction isValidTypeaheadEvent(event) {\n  return event.key.length === 1 && !event.ctrlKey && !event.metaKey;\n}\n\n// src/visual-viewport.ts\nfunction trackVisualViewport(doc, fn) {\n  const win = doc?.defaultView || window;\n  const onResize = () => {\n    fn?.(getViewportSize(win));\n  };\n  onResize();\n  return addDomEvent(win.visualViewport ?? win, \"resize\", onResize);\n}\nfunction getViewportSize(win) {\n  return {\n    width: win.visualViewport?.width || win.innerWidth,\n    height: win.visualViewport?.height || win.innerHeight\n  };\n}\n\n// src/visually-hidden.ts\nvar visuallyHiddenStyle = {\n  border: \"0\",\n  clip: \"rect(0 0 0 0)\",\n  height: \"1px\",\n  margin: \"-1px\",\n  overflow: \"hidden\",\n  padding: \"0\",\n  position: \"absolute\",\n  width: \"1px\",\n  whiteSpace: \"nowrap\",\n  wordWrap: \"normal\"\n};\nfunction setVisuallyHidden(el) {\n  Object.assign(el.style, visuallyHiddenStyle);\n}\n\n// src/wait-for.ts\nvar fps = 1e3 / 60;\nfunction waitForElement(query2, cb) {\n  const el = query2();\n  if (isHTMLElement(el) && el.isConnected) {\n    cb(el);\n    return () => void 0;\n  } else {\n    const timerId = setInterval(() => {\n      const el2 = query2();\n      if (isHTMLElement(el2) && el2.isConnected) {\n        cb(el2);\n        clearInterval(timerId);\n      }\n    }, fps);\n    return () => clearInterval(timerId);\n  }\n}\nfunction waitForElements(queries, cb) {\n  const cleanups = [];\n  queries?.forEach((query2) => {\n    const clean = waitForElement(query2, cb);\n    cleanups.push(clean);\n  });\n  return () => {\n    cleanups.forEach((fn) => fn());\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/editable/dist/index.mjs":
/*!******************************************************!*\
  !*** ./node_modules/@zag-js/editable/dist/index.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_interact_outside__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/interact-outside */ \"(ssr)/./node_modules/@zag-js/interact-outside/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n\n\n\n\n// src/editable.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"editable\").parts(\n  \"root\",\n  \"area\",\n  \"label\",\n  \"preview\",\n  \"input\",\n  \"editTrigger\",\n  \"submitTrigger\",\n  \"cancelTrigger\",\n  \"control\"\n);\nvar parts = anatomy.build();\n\n// src/editable.dom.ts\nvar getRootId = (ctx) => ctx.ids?.root ?? `editable:${ctx.id}`;\nvar getAreaId = (ctx) => ctx.ids?.area ?? `editable:${ctx.id}:area`;\nvar getLabelId = (ctx) => ctx.ids?.label ?? `editable:${ctx.id}:label`;\nvar getPreviewId = (ctx) => ctx.ids?.preview ?? `editable:${ctx.id}:preview`;\nvar getInputId = (ctx) => ctx.ids?.input ?? `editable:${ctx.id}:input`;\nvar getControlId = (ctx) => ctx.ids?.control ?? `editable:${ctx.id}:control`;\nvar getSubmitTriggerId = (ctx) => ctx.ids?.submitTrigger ?? `editable:${ctx.id}:submit`;\nvar getCancelTriggerId = (ctx) => ctx.ids?.cancelTrigger ?? `editable:${ctx.id}:cancel`;\nvar getEditTriggerId = (ctx) => ctx.ids?.editTrigger ?? `editable:${ctx.id}:edit`;\nvar getInputEl = (ctx) => ctx.getById(getInputId(ctx));\nvar getPreviewEl = (ctx) => ctx.getById(getPreviewId(ctx));\nvar getSubmitTriggerEl = (ctx) => ctx.getById(getSubmitTriggerId(ctx));\nvar getCancelTriggerEl = (ctx) => ctx.getById(getCancelTriggerId(ctx));\nvar getEditTriggerEl = (ctx) => ctx.getById(getEditTriggerId(ctx));\n\n// src/editable.connect.ts\nfunction connect(service, normalize) {\n  const { state, context, send, prop, scope, computed } = service;\n  const disabled = prop(\"disabled\");\n  const interactive = computed(\"isInteractive\");\n  const readOnly = prop(\"readOnly\");\n  const invalid = prop(\"invalid\");\n  const autoResize = prop(\"autoResize\");\n  const translations = prop(\"translations\");\n  const editing = state.matches(\"edit\");\n  const placeholderProp = prop(\"placeholder\");\n  const placeholder = typeof placeholderProp === \"string\" ? { edit: placeholderProp, preview: placeholderProp } : placeholderProp;\n  const value = context.get(\"value\");\n  const empty = value.trim() === \"\";\n  const valueText = empty ? placeholder?.preview ?? \"\" : value;\n  return {\n    editing,\n    empty,\n    value,\n    valueText,\n    setValue(value2) {\n      send({ type: \"VALUE.SET\", value: value2, src: \"setValue\" });\n    },\n    clearValue() {\n      send({ type: \"VALUE.SET\", value: \"\", src: \"clearValue\" });\n    },\n    edit() {\n      if (!interactive) return;\n      send({ type: \"EDIT\" });\n    },\n    cancel() {\n      if (!interactive) return;\n      send({ type: \"CANCEL\" });\n    },\n    submit() {\n      if (!interactive) return;\n      send({ type: \"SUBMIT\" });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        id: getRootId(scope),\n        dir: prop(\"dir\")\n      });\n    },\n    getAreaProps() {\n      return normalize.element({\n        ...parts.area.attrs,\n        id: getAreaId(scope),\n        dir: prop(\"dir\"),\n        style: autoResize ? { display: \"inline-grid\" } : void 0,\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(editing),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-placeholder-shown\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(empty)\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        id: getLabelId(scope),\n        dir: prop(\"dir\"),\n        htmlFor: getInputId(scope),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(editing),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        onClick() {\n          if (editing) return;\n          const previewEl = getPreviewEl(scope);\n          previewEl?.focus({ preventScroll: true });\n        }\n      });\n    },\n    getInputProps() {\n      return normalize.input({\n        ...parts.input.attrs,\n        dir: prop(\"dir\"),\n        \"aria-label\": translations?.input,\n        name: prop(\"name\"),\n        form: prop(\"form\"),\n        id: getInputId(scope),\n        hidden: autoResize ? void 0 : !editing,\n        placeholder: placeholder?.edit,\n        maxLength: prop(\"maxLength\"),\n        required: prop(\"required\"),\n        disabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        readOnly,\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(readOnly),\n        \"aria-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.ariaAttr)(invalid),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        \"data-autoresize\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(autoResize),\n        defaultValue: value,\n        size: autoResize ? 1 : void 0,\n        onChange(event) {\n          send({\n            type: \"VALUE.SET\",\n            src: \"input.change\",\n            value: event.currentTarget.value\n          });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isComposingEvent)(event)) return;\n          const keyMap = {\n            Escape() {\n              send({ type: \"CANCEL\" });\n              event.preventDefault();\n            },\n            Enter(event2) {\n              if (!computed(\"submitOnEnter\")) return;\n              const { localName } = event2.currentTarget;\n              if (localName === \"textarea\") {\n                const submitMod = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isApple)() ? event2.metaKey : event2.ctrlKey;\n                if (!submitMod) return;\n                send({ type: \"SUBMIT\", src: \"keydown.enter\" });\n                return;\n              }\n              if (localName === \"input\" && !event2.shiftKey && !event2.metaKey) {\n                send({ type: \"SUBMIT\", src: \"keydown.enter\" });\n                event2.preventDefault();\n              }\n            }\n          };\n          const exec = keyMap[event.key];\n          if (exec) {\n            exec(event);\n          }\n        },\n        style: autoResize ? {\n          gridArea: \"1 / 1 / auto / auto\",\n          visibility: !editing ? \"hidden\" : void 0\n        } : void 0\n      });\n    },\n    getPreviewProps() {\n      return normalize.element({\n        id: getPreviewId(scope),\n        ...parts.preview.attrs,\n        dir: prop(\"dir\"),\n        \"data-placeholder-shown\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(empty),\n        \"aria-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.ariaAttr)(readOnly),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"aria-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.ariaAttr)(disabled),\n        \"aria-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.ariaAttr)(invalid),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        \"aria-label\": translations?.edit,\n        \"data-autoresize\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(autoResize),\n        children: valueText,\n        hidden: autoResize ? void 0 : editing,\n        tabIndex: interactive ? 0 : void 0,\n        onClick() {\n          if (!interactive) return;\n          if (prop(\"activationMode\") !== \"click\") return;\n          send({ type: \"EDIT\", src: \"click\" });\n        },\n        onFocus() {\n          if (!interactive) return;\n          if (prop(\"activationMode\") !== \"focus\") return;\n          send({ type: \"EDIT\", src: \"focus\" });\n        },\n        onDoubleClick(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          if (prop(\"activationMode\") !== \"dblclick\") return;\n          send({ type: \"EDIT\", src: \"dblclick\" });\n        },\n        style: autoResize ? {\n          whiteSpace: \"pre\",\n          userSelect: \"none\",\n          gridArea: \"1 / 1 / auto / auto\",\n          visibility: editing ? \"hidden\" : void 0,\n          // in event the preview overflow's the parent element\n          overflow: \"hidden\",\n          textOverflow: \"ellipsis\"\n        } : void 0\n      });\n    },\n    getEditTriggerProps() {\n      return normalize.button({\n        ...parts.editTrigger.attrs,\n        id: getEditTriggerId(scope),\n        dir: prop(\"dir\"),\n        \"aria-label\": translations?.edit,\n        hidden: editing,\n        type: \"button\",\n        disabled,\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          send({ type: \"EDIT\", src: \"edit.click\" });\n        }\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        id: getControlId(scope),\n        ...parts.control.attrs,\n        dir: prop(\"dir\")\n      });\n    },\n    getSubmitTriggerProps() {\n      return normalize.button({\n        ...parts.submitTrigger.attrs,\n        dir: prop(\"dir\"),\n        id: getSubmitTriggerId(scope),\n        \"aria-label\": translations?.submit,\n        hidden: !editing,\n        disabled,\n        type: \"button\",\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          send({ type: \"SUBMIT\", src: \"submit.click\" });\n        }\n      });\n    },\n    getCancelTriggerProps() {\n      return normalize.button({\n        ...parts.cancelTrigger.attrs,\n        dir: prop(\"dir\"),\n        \"aria-label\": translations?.cancel,\n        id: getCancelTriggerId(scope),\n        hidden: !editing,\n        type: \"button\",\n        disabled,\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          send({ type: \"CANCEL\", src: \"cancel.click\" });\n        }\n      });\n    }\n  };\n}\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_2__.createMachine)({\n  props({ props: props2 }) {\n    return {\n      activationMode: \"focus\",\n      submitMode: \"both\",\n      defaultValue: \"\",\n      selectOnFocus: true,\n      ...props2,\n      translations: {\n        input: \"editable input\",\n        edit: \"edit\",\n        submit: \"submit\",\n        cancel: \"cancel\",\n        ...props2.translations\n      }\n    };\n  },\n  initialState({ prop }) {\n    const edit = prop(\"edit\") || prop(\"defaultEdit\");\n    return edit ? \"edit\" : \"preview\";\n  },\n  entry: [\"focusInputIfNeeded\"],\n  context: ({ bindable, prop }) => {\n    return {\n      value: bindable(() => ({\n        defaultValue: prop(\"defaultValue\"),\n        value: prop(\"value\"),\n        onChange(value) {\n          return prop(\"onValueChange\")?.({ value });\n        }\n      })),\n      previousValue: bindable(() => ({\n        defaultValue: \"\"\n      }))\n    };\n  },\n  watch({ track, action, context, prop }) {\n    track([() => context.get(\"value\")], () => {\n      action([\"syncInputValue\"]);\n    });\n    track([() => prop(\"edit\")], () => {\n      action([\"toggleEditing\"]);\n    });\n  },\n  computed: {\n    submitOnEnter({ prop }) {\n      return [\"both\", \"enter\"].includes(prop(\"submitMode\"));\n    },\n    submitOnBlur({ prop }) {\n      return [\"both\", \"blur\"].includes(prop(\"submitMode\"));\n    },\n    isInteractive({ prop }) {\n      return !(prop(\"disabled\") || prop(\"readOnly\"));\n    }\n  },\n  on: {\n    \"VALUE.SET\": {\n      actions: [\"setValue\"]\n    }\n  },\n  states: {\n    preview: {\n      entry: [\"blurInputIfNeeded\"],\n      on: {\n        \"CONTROLLED.EDIT\": {\n          target: \"edit\",\n          actions: [\"setPreviousValue\", \"focusInput\"]\n        },\n        EDIT: [\n          {\n            guard: \"isEditControlled\",\n            actions: [\"invokeOnEdit\"]\n          },\n          {\n            target: \"edit\",\n            actions: [\"setPreviousValue\", \"focusInput\", \"invokeOnEdit\"]\n          }\n        ]\n      }\n    },\n    edit: {\n      effects: [\"trackInteractOutside\"],\n      on: {\n        \"CONTROLLED.PREVIEW\": [\n          {\n            guard: \"isSubmitEvent\",\n            target: \"preview\",\n            actions: [\"setPreviousValue\", \"restoreFocus\", \"invokeOnSubmit\"]\n          },\n          {\n            target: \"preview\",\n            actions: [\"revertValue\", \"restoreFocus\", \"invokeOnCancel\"]\n          }\n        ],\n        CANCEL: [\n          {\n            guard: \"isEditControlled\",\n            actions: [\"invokeOnPreview\"]\n          },\n          {\n            target: \"preview\",\n            actions: [\"revertValue\", \"restoreFocus\", \"invokeOnCancel\", \"invokeOnPreview\"]\n          }\n        ],\n        SUBMIT: [\n          {\n            guard: \"isEditControlled\",\n            actions: [\"invokeOnPreview\"]\n          },\n          {\n            target: \"preview\",\n            actions: [\"setPreviousValue\", \"restoreFocus\", \"invokeOnSubmit\", \"invokeOnPreview\"]\n          }\n        ]\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      isEditControlled: ({ prop }) => prop(\"edit\") != void 0,\n      isSubmitEvent: ({ event }) => event.previousEvent?.type === \"SUBMIT\"\n    },\n    effects: {\n      trackInteractOutside({ send, scope, prop, computed }) {\n        return (0,_zag_js_interact_outside__WEBPACK_IMPORTED_MODULE_3__.trackInteractOutside)(getInputEl(scope), {\n          exclude(target) {\n            const ignore = [getCancelTriggerEl(scope), getSubmitTriggerEl(scope)];\n            return ignore.some((el) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.contains)(el, target));\n          },\n          onFocusOutside: prop(\"onFocusOutside\"),\n          onPointerDownOutside: prop(\"onPointerDownOutside\"),\n          onInteractOutside(event) {\n            prop(\"onInteractOutside\")?.(event);\n            if (event.defaultPrevented) return;\n            const { focusable } = event.detail;\n            send({\n              type: computed(\"submitOnBlur\") ? \"SUBMIT\" : \"CANCEL\",\n              src: \"interact-outside\",\n              focusable\n            });\n          }\n        });\n      }\n    },\n    actions: {\n      restoreFocus({ event, scope, prop }) {\n        if (event.focusable) return;\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          const finalEl = prop(\"finalFocusEl\")?.() ?? getEditTriggerEl(scope);\n          finalEl?.focus({ preventScroll: true });\n        });\n      },\n      clearValue({ context }) {\n        context.set(\"value\", \"\");\n      },\n      focusInputIfNeeded({ action, prop }) {\n        const edit = prop(\"edit\") || prop(\"defaultEdit\");\n        if (!edit) return;\n        action([\"focusInput\"]);\n      },\n      focusInput({ scope, prop }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          const inputEl = getInputEl(scope);\n          if (!inputEl) return;\n          if (prop(\"selectOnFocus\")) {\n            inputEl.select();\n          } else {\n            inputEl.focus({ preventScroll: true });\n          }\n        });\n      },\n      invokeOnCancel({ prop, context }) {\n        const prev = context.get(\"previousValue\");\n        prop(\"onValueRevert\")?.({ value: prev });\n      },\n      invokeOnSubmit({ prop, context }) {\n        const value = context.get(\"value\");\n        prop(\"onValueCommit\")?.({ value });\n      },\n      invokeOnEdit({ prop }) {\n        prop(\"onEditChange\")?.({ edit: true });\n      },\n      invokeOnPreview({ prop }) {\n        prop(\"onEditChange\")?.({ edit: false });\n      },\n      toggleEditing({ prop, send, event }) {\n        send({\n          type: prop(\"edit\") ? \"CONTROLLED.EDIT\" : \"CONTROLLED.PREVIEW\",\n          previousEvent: event\n        });\n      },\n      syncInputValue({ context, scope }) {\n        const inputEl = getInputEl(scope);\n        if (!inputEl) return;\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.setElementValue)(inputEl, context.get(\"value\"));\n      },\n      setValue({ context, prop, event }) {\n        const max = prop(\"maxLength\");\n        const value = max != null ? event.value.slice(0, max) : event.value;\n        context.set(\"value\", value);\n      },\n      setPreviousValue({ context }) {\n        context.set(\"previousValue\", context.get(\"value\"));\n      },\n      revertValue({ context }) {\n        const value = context.get(\"previousValue\");\n        if (!value) return;\n        context.set(\"value\", value);\n      },\n      blurInputIfNeeded({ scope }) {\n        getInputEl(scope)?.blur();\n      }\n    }\n  }\n});\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_4__.createProps)()([\n  \"activationMode\",\n  \"autoResize\",\n  \"dir\",\n  \"disabled\",\n  \"finalFocusEl\",\n  \"form\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"invalid\",\n  \"maxLength\",\n  \"name\",\n  \"onEditChange\",\n  \"onFocusOutside\",\n  \"onInteractOutside\",\n  \"onPointerDownOutside\",\n  \"onValueChange\",\n  \"onValueCommit\",\n  \"onValueRevert\",\n  \"placeholder\",\n  \"readOnly\",\n  \"required\",\n  \"selectOnFocus\",\n  \"edit\",\n  \"defaultEdit\",\n  \"submitMode\",\n  \"translations\",\n  \"defaultValue\",\n  \"value\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_5__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/editable/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/file-upload/dist/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@zag-js/file-upload/dist/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   itemProps: () => (/* binding */ itemProps),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitItemProps: () => (/* binding */ splitItemProps),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_file_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/file-utils */ \"(ssr)/./node_modules/@zag-js/file-utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_i18n_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/i18n-utils */ \"(ssr)/./node_modules/@zag-js/i18n-utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n\n\n\n\n\n\n\n\n// src/file-upload.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"file-upload\").parts(\n  \"root\",\n  \"dropzone\",\n  \"item\",\n  \"itemDeleteTrigger\",\n  \"itemGroup\",\n  \"itemName\",\n  \"itemPreview\",\n  \"itemPreviewImage\",\n  \"itemSizeText\",\n  \"label\",\n  \"trigger\",\n  \"clearTrigger\"\n);\nvar parts = anatomy.build();\n\n// src/file-upload.dom.ts\nvar getRootId = (ctx) => ctx.ids?.root ?? `file:${ctx.id}`;\nvar getDropzoneId = (ctx) => ctx.ids?.dropzone ?? `file:${ctx.id}:dropzone`;\nvar getHiddenInputId = (ctx) => ctx.ids?.hiddenInput ?? `file:${ctx.id}:input`;\nvar getTriggerId = (ctx) => ctx.ids?.trigger ?? `file:${ctx.id}:trigger`;\nvar getLabelId = (ctx) => ctx.ids?.label ?? `file:${ctx.id}:label`;\nvar getItemId = (ctx, id) => ctx.ids?.item?.(id) ?? `file:${ctx.id}:item:${id}`;\nvar getItemNameId = (ctx, id) => ctx.ids?.itemName?.(id) ?? `file:${ctx.id}:item-name:${id}`;\nvar getItemSizeTextId = (ctx, id) => ctx.ids?.itemSizeText?.(id) ?? `file:${ctx.id}:item-size:${id}`;\nvar getItemPreviewId = (ctx, id) => ctx.ids?.itemPreview?.(id) ?? `file:${ctx.id}:item-preview:${id}`;\nvar getRootEl = (ctx) => ctx.getById(getRootId(ctx));\nvar getHiddenInputEl = (ctx) => ctx.getById(getHiddenInputId(ctx));\nvar getDropzoneEl = (ctx) => ctx.getById(getDropzoneId(ctx));\nfunction isEventWithFiles(event) {\n  const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventTarget)(event);\n  if (!event.dataTransfer) return !!target && \"files\" in target;\n  return event.dataTransfer.types.some((type) => {\n    return type === \"Files\" || type === \"application/x-moz-file\";\n  });\n}\nfunction isFilesWithinRange(ctx, incomingCount) {\n  const { context, prop, computed } = ctx;\n  if (!computed(\"multiple\") && incomingCount > 1) return false;\n  if (!computed(\"multiple\") && incomingCount + context.get(\"acceptedFiles\").length === 2) return true;\n  if (incomingCount + context.get(\"acceptedFiles\").length > prop(\"maxFiles\")) return false;\n  return true;\n}\nfunction getEventFiles(ctx, files) {\n  const { context, prop, computed } = ctx;\n  const acceptedFiles = [];\n  const rejectedFiles = [];\n  files.forEach((file) => {\n    const [accepted, acceptError] = (0,_zag_js_file_utils__WEBPACK_IMPORTED_MODULE_2__.isValidFileType)(file, computed(\"acceptAttr\"));\n    const [sizeMatch, sizeError] = (0,_zag_js_file_utils__WEBPACK_IMPORTED_MODULE_2__.isValidFileSize)(file, prop(\"minFileSize\"), prop(\"maxFileSize\"));\n    const validateErrors = prop(\"validate\")?.(file, {\n      acceptedFiles: context.get(\"acceptedFiles\"),\n      rejectedFiles: context.get(\"rejectedFiles\")\n    });\n    const valid = validateErrors ? validateErrors.length === 0 : true;\n    if (accepted && sizeMatch && valid) {\n      acceptedFiles.push(file);\n    } else {\n      const errors = [acceptError, sizeError];\n      if (!valid) errors.push(...validateErrors ?? []);\n      rejectedFiles.push({ file, errors: errors.filter(Boolean) });\n    }\n  });\n  if (!isFilesWithinRange(ctx, acceptedFiles.length)) {\n    acceptedFiles.forEach((file) => {\n      rejectedFiles.push({ file, errors: [\"TOO_MANY_FILES\"] });\n    });\n    acceptedFiles.splice(0);\n  }\n  return {\n    acceptedFiles,\n    rejectedFiles\n  };\n}\nfunction setInputFiles(inputEl, files) {\n  const win = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getWindow)(inputEl);\n  try {\n    if (\"DataTransfer\" in win) {\n      const dataTransfer = new win.DataTransfer();\n      files.forEach((file) => {\n        dataTransfer.items.add(file);\n      });\n      inputEl.files = dataTransfer.files;\n    }\n  } catch {\n  }\n}\n\n// src/file-upload.connect.ts\nfunction connect(service, normalize) {\n  const { state, send, prop, computed, scope, context } = service;\n  const disabled = prop(\"disabled\");\n  const allowDrop = prop(\"allowDrop\");\n  const translations = prop(\"translations\");\n  const dragging = state.matches(\"dragging\");\n  const focused = state.matches(\"focused\") && !disabled;\n  return {\n    dragging,\n    focused,\n    disabled: !!disabled,\n    openFilePicker() {\n      if (disabled) return;\n      send({ type: \"OPEN\" });\n    },\n    deleteFile(file) {\n      send({ type: \"FILE.DELETE\", file });\n    },\n    acceptedFiles: context.get(\"acceptedFiles\"),\n    rejectedFiles: context.get(\"rejectedFiles\"),\n    setFiles(files) {\n      send({ type: \"FILES.SET\", files, count: files.length });\n    },\n    clearRejectedFiles() {\n      send({ type: \"REJECTED_FILES.CLEAR\" });\n    },\n    clearFiles() {\n      send({ type: \"FILES.CLEAR\" });\n    },\n    getFileSize(file) {\n      return (0,_zag_js_i18n_utils__WEBPACK_IMPORTED_MODULE_3__.formatBytes)(file.size, prop(\"locale\"));\n    },\n    createFileUrl(file, cb) {\n      const win = scope.getWin();\n      const url = win.URL.createObjectURL(file);\n      cb(url);\n      return () => win.URL.revokeObjectURL(url);\n    },\n    setClipboardFiles(dt) {\n      if (disabled) return false;\n      const items = Array.from(dt?.items ?? []);\n      const files = items.reduce((acc, item) => {\n        if (item.kind !== \"file\") return acc;\n        const file = item.getAsFile();\n        if (!file) return acc;\n        return [...acc, file];\n      }, []);\n      if (!files.length) return false;\n      send({ type: \"FILES.SET\", files });\n      return true;\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        dir: prop(\"dir\"),\n        id: getRootId(scope),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-dragging\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(dragging)\n      });\n    },\n    getDropzoneProps(props2 = {}) {\n      return normalize.element({\n        ...parts.dropzone.attrs,\n        dir: prop(\"dir\"),\n        id: getDropzoneId(scope),\n        tabIndex: disabled || props2.disableClick ? void 0 : 0,\n        role: props2.disableClick ? \"application\" : \"button\",\n        \"aria-label\": translations.dropzone,\n        \"aria-disabled\": disabled,\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"invalid\")),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-dragging\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(dragging),\n        onKeyDown(event) {\n          if (disabled) return;\n          if (event.defaultPrevented) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isSelfTarget)(event)) return;\n          if (props2.disableClick) return;\n          if (event.key !== \"Enter\" && event.key !== \" \") return;\n          send({ type: \"DROPZONE.CLICK\", src: \"keydown\" });\n        },\n        onClick(event) {\n          if (disabled) return;\n          if (event.defaultPrevented) return;\n          if (props2.disableClick) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isSelfTarget)(event)) return;\n          if (event.currentTarget.localName === \"label\") {\n            event.preventDefault();\n          }\n          send({ type: \"DROPZONE.CLICK\" });\n        },\n        onDragOver(event) {\n          if (disabled) return;\n          if (!allowDrop) return;\n          event.preventDefault();\n          event.stopPropagation();\n          try {\n            event.dataTransfer.dropEffect = \"copy\";\n          } catch {\n          }\n          const hasFiles = isEventWithFiles(event);\n          if (!hasFiles) return;\n          const count = event.dataTransfer.items.length;\n          send({ type: \"DROPZONE.DRAG_OVER\", count });\n        },\n        onDragLeave(event) {\n          if (disabled) return;\n          if (!allowDrop) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.contains)(event.currentTarget, event.relatedTarget)) return;\n          send({ type: \"DROPZONE.DRAG_LEAVE\" });\n        },\n        onDrop(event) {\n          if (disabled) return;\n          if (allowDrop) {\n            event.preventDefault();\n            event.stopPropagation();\n          }\n          const hasFiles = isEventWithFiles(event);\n          if (disabled || !hasFiles) return;\n          (0,_zag_js_file_utils__WEBPACK_IMPORTED_MODULE_2__.getFileEntries)(event.dataTransfer.items, prop(\"directory\")).then((files) => {\n            send({ type: \"DROPZONE.DROP\", files: (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.flatArray)(files) });\n          });\n        },\n        onFocus() {\n          if (disabled) return;\n          send({ type: \"DROPZONE.FOCUS\" });\n        },\n        onBlur() {\n          if (disabled) return;\n          send({ type: \"DROPZONE.BLUR\" });\n        }\n      });\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...parts.trigger.attrs,\n        dir: prop(\"dir\"),\n        id: getTriggerId(scope),\n        disabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"invalid\")),\n        type: \"button\",\n        onClick(event) {\n          if (disabled) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.contains)(getDropzoneEl(scope), event.currentTarget)) {\n            event.stopPropagation();\n          }\n          send({ type: \"OPEN\" });\n        }\n      });\n    },\n    getHiddenInputProps() {\n      return normalize.input({\n        id: getHiddenInputId(scope),\n        tabIndex: -1,\n        disabled,\n        type: \"file\",\n        required: prop(\"required\"),\n        capture: prop(\"capture\"),\n        name: prop(\"name\"),\n        accept: computed(\"acceptAttr\"),\n        webkitdirectory: prop(\"directory\") ? \"\" : void 0,\n        multiple: computed(\"multiple\") || prop(\"maxFiles\") > 1,\n        onClick(event) {\n          event.stopPropagation();\n          event.currentTarget.value = \"\";\n        },\n        onInput(event) {\n          if (disabled) return;\n          const { files } = event.currentTarget;\n          send({ type: \"FILE.SELECT\", files: files ? Array.from(files) : [] });\n        },\n        style: _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.visuallyHiddenStyle\n      });\n    },\n    getItemGroupProps() {\n      return normalize.element({\n        ...parts.itemGroup.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled)\n      });\n    },\n    getItemProps(props2) {\n      const { file } = props2;\n      return normalize.element({\n        ...parts.item.attrs,\n        dir: prop(\"dir\"),\n        id: getItemId(scope, file.name),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled)\n      });\n    },\n    getItemNameProps(props2) {\n      const { file } = props2;\n      return normalize.element({\n        ...parts.itemName.attrs,\n        dir: prop(\"dir\"),\n        id: getItemNameId(scope, file.name),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled)\n      });\n    },\n    getItemSizeTextProps(props2) {\n      const { file } = props2;\n      return normalize.element({\n        ...parts.itemSizeText.attrs,\n        dir: prop(\"dir\"),\n        id: getItemSizeTextId(scope, file.name),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled)\n      });\n    },\n    getItemPreviewProps(props2) {\n      const { file } = props2;\n      return normalize.element({\n        ...parts.itemPreview.attrs,\n        dir: prop(\"dir\"),\n        id: getItemPreviewId(scope, file.name),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled)\n      });\n    },\n    getItemPreviewImageProps(props2) {\n      const { file, url } = props2;\n      const isImage = file.type.startsWith(\"image/\");\n      if (!isImage) {\n        throw new Error(\"Preview Image is only supported for image files\");\n      }\n      return normalize.img({\n        ...parts.itemPreviewImage.attrs,\n        alt: translations.itemPreview?.(file),\n        src: url,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled)\n      });\n    },\n    getItemDeleteTriggerProps(props2) {\n      const { file } = props2;\n      return normalize.button({\n        ...parts.itemDeleteTrigger.attrs,\n        dir: prop(\"dir\"),\n        type: \"button\",\n        disabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"aria-label\": translations.deleteFile?.(file),\n        onClick() {\n          if (disabled) return;\n          send({ type: \"FILE.DELETE\", file });\n        }\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        dir: prop(\"dir\"),\n        id: getLabelId(scope),\n        htmlFor: getHiddenInputId(scope),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled)\n      });\n    },\n    getClearTriggerProps() {\n      return normalize.button({\n        ...parts.clearTrigger.attrs,\n        dir: prop(\"dir\"),\n        type: \"button\",\n        disabled,\n        hidden: context.get(\"acceptedFiles\").length === 0,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          send({ type: \"FILES.CLEAR\" });\n        }\n      });\n    }\n  };\n}\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_5__.createMachine)({\n  props({ props: props2 }) {\n    return {\n      minFileSize: 0,\n      maxFileSize: Number.POSITIVE_INFINITY,\n      maxFiles: 1,\n      allowDrop: true,\n      preventDocumentDrop: true,\n      ...props2,\n      translations: {\n        dropzone: \"dropzone\",\n        itemPreview: (file) => `preview of ${file.name}`,\n        deleteFile: (file) => `delete file ${file.name}`,\n        ...props2.translations\n      }\n    };\n  },\n  initialState() {\n    return \"idle\";\n  },\n  context({ prop, bindable, getContext }) {\n    return {\n      acceptedFiles: bindable(() => ({\n        defaultValue: [],\n        isEqual: (a, b) => a.length === b?.length && a.every((file, i) => (0,_zag_js_file_utils__WEBPACK_IMPORTED_MODULE_2__.isFileEqual)(file, b[i])),\n        hash(value) {\n          return value.map((file) => `${file.name}-${file.size}`).join(\",\");\n        },\n        onChange(value) {\n          const ctx = getContext();\n          prop(\"onFileAccept\")?.({ files: value });\n          prop(\"onFileChange\")?.({ acceptedFiles: value, rejectedFiles: ctx.get(\"rejectedFiles\") });\n        }\n      })),\n      rejectedFiles: bindable(() => ({\n        defaultValue: [],\n        isEqual: (a, b) => a.length === b?.length && a.every((file, i) => (0,_zag_js_file_utils__WEBPACK_IMPORTED_MODULE_2__.isFileEqual)(file.file, b[i].file)),\n        onChange(value) {\n          const ctx = getContext();\n          prop(\"onFileReject\")?.({ files: value });\n          prop(\"onFileChange\")?.({ acceptedFiles: ctx.get(\"acceptedFiles\"), rejectedFiles: value });\n        }\n      }))\n    };\n  },\n  computed: {\n    acceptAttr: ({ prop }) => (0,_zag_js_file_utils__WEBPACK_IMPORTED_MODULE_2__.getAcceptAttrString)(prop(\"accept\")),\n    multiple: ({ prop }) => prop(\"maxFiles\") > 1\n  },\n  watch({ track, context, action }) {\n    track([() => context.hash(\"acceptedFiles\")], () => {\n      action([\"syncInputElement\"]);\n    });\n  },\n  on: {\n    \"FILES.SET\": {\n      actions: [\"setFiles\"]\n    },\n    \"FILE.SELECT\": {\n      actions: [\"setEventFiles\"]\n    },\n    \"FILE.DELETE\": {\n      actions: [\"removeFile\"]\n    },\n    \"FILES.CLEAR\": {\n      actions: [\"clearFiles\"]\n    },\n    \"REJECTED_FILES.CLEAR\": {\n      actions: [\"clearRejectedFiles\"]\n    }\n  },\n  effects: [\"preventDocumentDrop\"],\n  states: {\n    idle: {\n      on: {\n        OPEN: {\n          actions: [\"openFilePicker\"]\n        },\n        \"DROPZONE.CLICK\": {\n          actions: [\"openFilePicker\"]\n        },\n        \"DROPZONE.FOCUS\": {\n          target: \"focused\"\n        },\n        \"DROPZONE.DRAG_OVER\": {\n          target: \"dragging\"\n        }\n      }\n    },\n    focused: {\n      on: {\n        \"DROPZONE.BLUR\": {\n          target: \"idle\"\n        },\n        OPEN: {\n          actions: [\"openFilePicker\"]\n        },\n        \"DROPZONE.CLICK\": {\n          actions: [\"openFilePicker\"]\n        },\n        \"DROPZONE.DRAG_OVER\": {\n          target: \"dragging\"\n        }\n      }\n    },\n    dragging: {\n      on: {\n        \"DROPZONE.DROP\": {\n          target: \"idle\",\n          actions: [\"setEventFiles\"]\n        },\n        \"DROPZONE.DRAG_LEAVE\": {\n          target: \"idle\"\n        }\n      }\n    }\n  },\n  implementations: {\n    effects: {\n      preventDocumentDrop({ prop, scope }) {\n        if (!prop(\"preventDocumentDrop\")) return;\n        if (!prop(\"allowDrop\")) return;\n        if (prop(\"disabled\")) return;\n        const doc = scope.getDoc();\n        const onDragOver = (event) => {\n          event?.preventDefault();\n        };\n        const onDrop = (event) => {\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.contains)(getRootEl(scope), (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventTarget)(event))) return;\n          event.preventDefault();\n        };\n        return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.callAll)((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.addDomEvent)(doc, \"dragover\", onDragOver, false), (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.addDomEvent)(doc, \"drop\", onDrop, false));\n      }\n    },\n    actions: {\n      syncInputElement({ scope, context }) {\n        queueMicrotask(() => {\n          const inputEl = getHiddenInputEl(scope);\n          if (!inputEl) return;\n          setInputFiles(inputEl, context.get(\"acceptedFiles\"));\n          const win = scope.getWin();\n          inputEl.dispatchEvent(new win.Event(\"change\", { bubbles: true }));\n        });\n      },\n      openFilePicker({ scope }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          getHiddenInputEl(scope)?.click();\n        });\n      },\n      setFiles(params) {\n        const { computed, context, event } = params;\n        const { acceptedFiles, rejectedFiles } = getEventFiles(params, event.files);\n        context.set(\"acceptedFiles\", computed(\"multiple\") ? acceptedFiles : [acceptedFiles[0]]);\n        context.set(\"rejectedFiles\", rejectedFiles);\n      },\n      setEventFiles(params) {\n        const { computed, context, event, prop } = params;\n        const { acceptedFiles, rejectedFiles } = getEventFiles(params, event.files);\n        const set = (files) => {\n          if (computed(\"multiple\")) {\n            context.set(\"acceptedFiles\", (prev) => [...prev, ...files]);\n            context.set(\"rejectedFiles\", rejectedFiles);\n            return;\n          }\n          if (files.length) {\n            context.set(\"acceptedFiles\", [files[0]]);\n            context.set(\"rejectedFiles\", rejectedFiles);\n            return;\n          }\n          if (rejectedFiles.length) {\n            context.set(\"acceptedFiles\", context.get(\"acceptedFiles\"));\n            context.set(\"rejectedFiles\", rejectedFiles);\n          }\n        };\n        const transform = prop(\"transformFiles\");\n        if (transform) {\n          transform(acceptedFiles).then(set).catch((err) => {\n            (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.warn)(`[zag-js/file-upload] error transforming files\n${err}`);\n          });\n        } else {\n          set(acceptedFiles);\n        }\n      },\n      removeFile({ context, event }) {\n        const files = context.get(\"acceptedFiles\").filter((file) => !(0,_zag_js_file_utils__WEBPACK_IMPORTED_MODULE_2__.isFileEqual)(file, event.file));\n        const rejectedFiles = context.get(\"rejectedFiles\").filter((item) => !(0,_zag_js_file_utils__WEBPACK_IMPORTED_MODULE_2__.isFileEqual)(item.file, event.file));\n        context.set(\"acceptedFiles\", files);\n        context.set(\"rejectedFiles\", rejectedFiles);\n      },\n      clearRejectedFiles({ context }) {\n        context.set(\"rejectedFiles\", []);\n      },\n      clearFiles({ context }) {\n        context.set(\"acceptedFiles\", []);\n        context.set(\"rejectedFiles\", []);\n      }\n    }\n  }\n});\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_6__.createProps)()([\n  \"accept\",\n  \"allowDrop\",\n  \"capture\",\n  \"dir\",\n  \"directory\",\n  \"disabled\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"locale\",\n  \"maxFiles\",\n  \"maxFileSize\",\n  \"minFileSize\",\n  \"name\",\n  \"invalid\",\n  \"onFileAccept\",\n  \"onFileReject\",\n  \"onFileChange\",\n  \"preventDocumentDrop\",\n  \"required\",\n  \"translations\",\n  \"transformFiles\",\n  \"validate\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(props);\nvar itemProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_6__.createProps)()([\"file\"]);\nvar splitItemProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(itemProps);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/file-upload/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/file-utils/dist/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@zag-js/file-utils/dist/index.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dataURItoBlob: () => (/* binding */ dataURItoBlob),\n/* harmony export */   downloadFile: () => (/* binding */ downloadFile),\n/* harmony export */   getAcceptAttrString: () => (/* binding */ getAcceptAttrString),\n/* harmony export */   getFileDataUrl: () => (/* binding */ getFileDataUrl),\n/* harmony export */   getFileEntries: () => (/* binding */ getFileEntries),\n/* harmony export */   getTotalFileSize: () => (/* binding */ getTotalFileSize),\n/* harmony export */   isFileEqual: () => (/* binding */ isFileEqual),\n/* harmony export */   isMSEdge: () => (/* binding */ isMSEdge),\n/* harmony export */   isValidFileSize: () => (/* binding */ isValidFileSize),\n/* harmony export */   isValidFileType: () => (/* binding */ isValidFileType)\n/* harmony export */ });\n// src/data-transfer.ts\nvar getItemEntry = (item) => typeof item.getAsEntry === \"function\" ? item.getAsEntry() : typeof item.webkitGetAsEntry === \"function\" ? item.webkitGetAsEntry() : null;\nvar isDirectoryEntry = (entry) => entry.isDirectory;\nvar isFileEntry = (entry) => entry.isFile;\nvar addRelativePath = (file, path) => {\n  Object.defineProperty(file, \"relativePath\", { value: path ? `${path}/${file.name}` : file.name });\n  return file;\n};\nvar getFileEntries = (items, traverseDirectories) => Promise.all(\n  Array.from(items).filter((item) => item.kind === \"file\").map((item) => {\n    const entry = getItemEntry(item);\n    if (!entry) return null;\n    if (isDirectoryEntry(entry) && traverseDirectories) {\n      return getDirectoryFiles(entry.createReader(), `${entry.name}`);\n    }\n    if (isFileEntry(entry)) {\n      return new Promise((resolve) => {\n        entry.file((file) => {\n          resolve(addRelativePath(file, \"\"));\n        });\n      });\n    }\n  }).filter((b) => b)\n);\nvar getDirectoryFiles = (reader, path = \"\") => new Promise((resolve) => {\n  const entryPromises = [];\n  const readDirectoryEntries = () => {\n    reader.readEntries((entries) => {\n      if (entries.length === 0) {\n        resolve(Promise.all(entryPromises).then((entries2) => entries2.flat()));\n        return;\n      }\n      const promises = entries.map((entry) => {\n        if (!entry) return null;\n        if (isDirectoryEntry(entry)) {\n          return getDirectoryFiles(entry.createReader(), `${path}${entry.name}`);\n        }\n        if (isFileEntry(entry)) {\n          return new Promise((resolve2) => {\n            entry.file((file) => {\n              resolve2(addRelativePath(file, path));\n            });\n          });\n        }\n      }).filter((b) => b);\n      entryPromises.push(Promise.all(promises));\n      readDirectoryEntries();\n    });\n  };\n  readDirectoryEntries();\n});\n\n// src/data-url-to-blob.ts\nfunction dataURItoBlob(uri) {\n  const binary = atob(uri.split(\",\")[1]);\n  const mimeString = uri.split(\",\")[0].split(\":\")[1].split(\";\")[0];\n  const buffer = new ArrayBuffer(binary.length);\n  const intArray = new Uint8Array(buffer);\n  for (let i = 0; i < binary.length; i++) {\n    intArray[i] = binary.charCodeAt(i);\n  }\n  return new Blob([buffer], { type: mimeString });\n}\n\n// src/download-file.ts\nfunction isMSEdge(win) {\n  return Boolean(win.navigator && win.navigator.msSaveOrOpenBlob);\n}\nfunction downloadFile(options) {\n  const { file, win, type, name } = options;\n  const doc = win.document;\n  const obj = typeof file === \"string\" ? new Blob([file], { type }) : file;\n  const fileName = file instanceof File ? name || file.name : name;\n  if (isMSEdge(win)) {\n    win.navigator.msSaveOrOpenBlob(obj, fileName || \"file-download\");\n    return;\n  }\n  const url = win.URL.createObjectURL(obj);\n  const anchor = doc.createElement(\"a\");\n  anchor.style.display = \"none\";\n  anchor.href = url;\n  anchor.rel = \"noopener\";\n  anchor.download = fileName || \"file-download\";\n  doc.documentElement.appendChild(anchor);\n  anchor.click();\n  setTimeout(() => {\n    win.URL.revokeObjectURL(url);\n    anchor.remove();\n  }, 0);\n}\n\n// src/get-accept-attr.ts\nfunction isMIMEType(v) {\n  return v === \"audio/*\" || v === \"video/*\" || v === \"image/*\" || v === \"text/*\" || /\\w+\\/[-+.\\w]+/g.test(v);\n}\nfunction isExt(v) {\n  return /^.*\\.[\\w]+$/.test(v);\n}\nvar isValidMIME = (v) => isMIMEType(v) || isExt(v);\nfunction getAcceptAttrString(accept) {\n  if (accept == null) return;\n  if (typeof accept === \"string\") {\n    return accept;\n  }\n  if (Array.isArray(accept)) {\n    return accept.filter(isValidMIME).join(\",\");\n  }\n  return Object.entries(accept).reduce((a, [mimeType, ext]) => [...a, mimeType, ...ext], []).filter(isValidMIME).join(\",\");\n}\n\n// src/get-file-data-url.ts\nvar getFileDataUrl = async (file) => {\n  const reader = new FileReader();\n  return new Promise((resolve, reject) => {\n    reader.onerror = () => {\n      reader.abort();\n      reject(new Error(\"There was an error reading a file\"));\n    };\n    reader.onloadend = () => {\n      const { result } = reader;\n      if (result instanceof ArrayBuffer) {\n        reject(new Error(\"Expected DataURL as string from Blob/File, got ArrayBuffer\"));\n      } else {\n        resolve(result || void 0);\n      }\n    };\n    reader.readAsDataURL(file);\n  });\n};\n\n// src/get-total-file-size.ts\nvar getTotalFileSize = (files) => {\n  return files.reduce((acc, file) => acc + file.size, 0);\n};\n\n// src/is-file-equal.ts\nvar isFileEqual = (file1, file2) => {\n  return file1.name === file2.name && file1.size === file2.size && file1.type === file2.type;\n};\n\n// src/is-valid-file-size.ts\nvar isDefined = (v) => v !== void 0 && v !== null;\nfunction isValidFileSize(file, minSize, maxSize) {\n  if (isDefined(file.size)) {\n    if (isDefined(minSize) && isDefined(maxSize)) {\n      if (file.size > maxSize) return [false, \"FILE_TOO_LARGE\"];\n      if (file.size < minSize) return [false, \"FILE_TOO_SMALL\"];\n    } else if (isDefined(minSize) && file.size < minSize) {\n      return [false, \"FILE_TOO_SMALL\"];\n    } else if (isDefined(maxSize) && file.size > maxSize) {\n      return [false, \"FILE_TOO_LARGE\"];\n    }\n  }\n  return [true, null];\n}\n\n// src/is-valid-file-type.ts\nfunction isFileAccepted(file, accept) {\n  if (file && accept) {\n    const types = Array.isArray(accept) ? accept : typeof accept === \"string\" ? accept.split(\",\") : [];\n    if (types.length === 0) return true;\n    const fileName = file.name || \"\";\n    const mimeType = (file.type || \"\").toLowerCase();\n    const baseMimeType = mimeType.replace(/\\/.*$/, \"\");\n    return types.some((type) => {\n      const validType = type.trim().toLowerCase();\n      if (validType.charAt(0) === \".\") {\n        return fileName.toLowerCase().endsWith(validType);\n      }\n      if (validType.endsWith(\"/*\")) {\n        return baseMimeType === validType.replace(/\\/.*$/, \"\");\n      }\n      return mimeType === validType;\n    });\n  }\n  return true;\n}\nfunction isValidFileType(file, accept) {\n  const isAcceptable = file.type === \"application/x-moz-file\" || isFileAccepted(file, accept);\n  return [isAcceptable, isAcceptable ? null : \"FILE_INVALID_TYPE\"];\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/file-utils/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/focus-trap/dist/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@zag-js/focus-trap/dist/index.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FocusTrap: () => (/* binding */ FocusTrap),\n/* harmony export */   trapFocus: () => (/* binding */ trapFocus)\n/* harmony export */ });\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nvar activeFocusTraps = {\n  activateTrap(trapStack, trap) {\n    if (trapStack.length > 0) {\n      const activeTrap = trapStack[trapStack.length - 1];\n      if (activeTrap !== trap) {\n        activeTrap.pause();\n      }\n    }\n    const trapIndex = trapStack.indexOf(trap);\n    if (trapIndex === -1) {\n      trapStack.push(trap);\n    } else {\n      trapStack.splice(trapIndex, 1);\n      trapStack.push(trap);\n    }\n  },\n  deactivateTrap(trapStack, trap) {\n    const trapIndex = trapStack.indexOf(trap);\n    if (trapIndex !== -1) {\n      trapStack.splice(trapIndex, 1);\n    }\n    if (trapStack.length > 0) {\n      trapStack[trapStack.length - 1].unpause();\n    }\n  }\n};\nvar sharedTrapStack = [];\nvar FocusTrap = class {\n  constructor(elements, options) {\n    __publicField(this, \"trapStack\");\n    __publicField(this, \"config\");\n    __publicField(this, \"doc\");\n    __publicField(this, \"state\", {\n      containers: [],\n      containerGroups: [],\n      tabbableGroups: [],\n      nodeFocusedBeforeActivation: null,\n      mostRecentlyFocusedNode: null,\n      active: false,\n      paused: false,\n      delayInitialFocusTimer: void 0,\n      recentNavEvent: void 0\n    });\n    __publicField(this, \"listenerCleanups\", []);\n    __publicField(this, \"handleFocus\", (event) => {\n      const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(event);\n      const targetContained = this.findContainerIndex(target, event) >= 0;\n      if (targetContained || (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isDocument)(target)) {\n        if (targetContained) {\n          this.state.mostRecentlyFocusedNode = target;\n        }\n      } else {\n        event.stopImmediatePropagation();\n        let nextNode;\n        let navAcrossContainers = true;\n        if (this.state.mostRecentlyFocusedNode) {\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getTabIndex)(this.state.mostRecentlyFocusedNode) > 0) {\n            const mruContainerIdx = this.findContainerIndex(this.state.mostRecentlyFocusedNode);\n            const { tabbableNodes } = this.state.containerGroups[mruContainerIdx];\n            if (tabbableNodes.length > 0) {\n              const mruTabIdx = tabbableNodes.findIndex((node) => node === this.state.mostRecentlyFocusedNode);\n              if (mruTabIdx >= 0) {\n                if (this.config.isKeyForward(this.state.recentNavEvent)) {\n                  if (mruTabIdx + 1 < tabbableNodes.length) {\n                    nextNode = tabbableNodes[mruTabIdx + 1];\n                    navAcrossContainers = false;\n                  }\n                } else {\n                  if (mruTabIdx - 1 >= 0) {\n                    nextNode = tabbableNodes[mruTabIdx - 1];\n                    navAcrossContainers = false;\n                  }\n                }\n              }\n            }\n          } else {\n            if (!this.state.containerGroups.some((g) => g.tabbableNodes.some((n) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getTabIndex)(n) > 0))) {\n              navAcrossContainers = false;\n            }\n          }\n        } else {\n          navAcrossContainers = false;\n        }\n        if (navAcrossContainers) {\n          nextNode = this.findNextNavNode({\n            // move FROM the MRU node, not event-related node (which will be the node that is\n            //  outside the trap causing the focus escape we're trying to fix)\n            target: this.state.mostRecentlyFocusedNode,\n            isBackward: this.config.isKeyBackward(this.state.recentNavEvent)\n          });\n        }\n        if (nextNode) {\n          this.tryFocus(nextNode);\n        } else {\n          this.tryFocus(this.state.mostRecentlyFocusedNode || this.getInitialFocusNode());\n        }\n      }\n      this.state.recentNavEvent = void 0;\n    });\n    __publicField(this, \"handlePointerDown\", (event) => {\n      const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(event);\n      if (this.findContainerIndex(target, event) >= 0) {\n        return;\n      }\n      if (valueOrHandler(this.config.clickOutsideDeactivates, event)) {\n        this.deactivate({ returnFocus: this.config.returnFocusOnDeactivate });\n        return;\n      }\n      if (valueOrHandler(this.config.allowOutsideClick, event)) {\n        return;\n      }\n      event.preventDefault();\n    });\n    __publicField(this, \"handleClick\", (event) => {\n      const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(event);\n      if (this.findContainerIndex(target, event) >= 0) {\n        return;\n      }\n      if (valueOrHandler(this.config.clickOutsideDeactivates, event)) {\n        return;\n      }\n      if (valueOrHandler(this.config.allowOutsideClick, event)) {\n        return;\n      }\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    __publicField(this, \"handleTabKey\", (event) => {\n      if (this.config.isKeyForward(event) || this.config.isKeyBackward(event)) {\n        this.state.recentNavEvent = event;\n        const isBackward = this.config.isKeyBackward(event);\n        const destinationNode = this.findNextNavNode({ event, isBackward });\n        if (!destinationNode) return;\n        if (isTabEvent(event)) {\n          event.preventDefault();\n        }\n        this.tryFocus(destinationNode);\n      }\n    });\n    __publicField(this, \"handleEscapeKey\", (event) => {\n      if (isEscapeEvent(event) && valueOrHandler(this.config.escapeDeactivates, event) !== false) {\n        event.preventDefault();\n        this.deactivate();\n      }\n    });\n    __publicField(this, \"_mutationObserver\");\n    __publicField(this, \"setupMutationObserver\", () => {\n      const win = this.doc.defaultView || window;\n      this._mutationObserver = new win.MutationObserver((mutations) => {\n        const isFocusedNodeRemoved = mutations.some((mutation) => {\n          const removedNodes = Array.from(mutation.removedNodes);\n          return removedNodes.some((node) => node === this.state.mostRecentlyFocusedNode);\n        });\n        if (isFocusedNodeRemoved) {\n          this.tryFocus(this.getInitialFocusNode());\n        }\n      });\n    });\n    __publicField(this, \"updateObservedNodes\", () => {\n      this._mutationObserver?.disconnect();\n      if (this.state.active && !this.state.paused) {\n        this.state.containers.map((container) => {\n          this._mutationObserver?.observe(container, { subtree: true, childList: true });\n        });\n      }\n    });\n    __publicField(this, \"getInitialFocusNode\", () => {\n      let node = this.getNodeForOption(\"initialFocus\", { hasFallback: true });\n      if (node === false) {\n        return false;\n      }\n      if (node === void 0 || node && !(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isFocusable)(node)) {\n        if (this.findContainerIndex(this.doc.activeElement) >= 0) {\n          node = this.doc.activeElement;\n        } else {\n          const firstTabbableGroup = this.state.tabbableGroups[0];\n          const firstTabbableNode = firstTabbableGroup && firstTabbableGroup.firstTabbableNode;\n          node = firstTabbableNode || this.getNodeForOption(\"fallbackFocus\");\n        }\n      } else if (node === null) {\n        node = this.getNodeForOption(\"fallbackFocus\");\n      }\n      if (!node) {\n        throw new Error(\"Your focus-trap needs to have at least one focusable element\");\n      }\n      if (!node.isConnected) {\n        node = this.getNodeForOption(\"fallbackFocus\");\n      }\n      return node;\n    });\n    __publicField(this, \"tryFocus\", (node) => {\n      if (node === false) return;\n      if (node === (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getActiveElement)(this.doc)) return;\n      if (!node || !node.focus) {\n        this.tryFocus(this.getInitialFocusNode());\n        return;\n      }\n      node.focus({ preventScroll: !!this.config.preventScroll });\n      this.state.mostRecentlyFocusedNode = node;\n      if (isSelectableInput(node)) {\n        node.select();\n      }\n    });\n    __publicField(this, \"deactivate\", (deactivateOptions) => {\n      if (!this.state.active) return this;\n      const options = {\n        onDeactivate: this.config.onDeactivate,\n        onPostDeactivate: this.config.onPostDeactivate,\n        checkCanReturnFocus: this.config.checkCanReturnFocus,\n        ...deactivateOptions\n      };\n      clearTimeout(this.state.delayInitialFocusTimer);\n      this.state.delayInitialFocusTimer = void 0;\n      this.removeListeners();\n      this.state.active = false;\n      this.state.paused = false;\n      this.updateObservedNodes();\n      activeFocusTraps.deactivateTrap(this.trapStack, this);\n      const onDeactivate = this.getOption(options, \"onDeactivate\");\n      const onPostDeactivate = this.getOption(options, \"onPostDeactivate\");\n      const checkCanReturnFocus = this.getOption(options, \"checkCanReturnFocus\");\n      const returnFocus = this.getOption(options, \"returnFocus\", \"returnFocusOnDeactivate\");\n      onDeactivate?.();\n      const finishDeactivation = () => {\n        delay(() => {\n          if (returnFocus) {\n            const returnFocusNode = this.getReturnFocusNode(this.state.nodeFocusedBeforeActivation);\n            this.tryFocus(returnFocusNode);\n          }\n          onPostDeactivate?.();\n        });\n      };\n      if (returnFocus && checkCanReturnFocus) {\n        const returnFocusNode = this.getReturnFocusNode(this.state.nodeFocusedBeforeActivation);\n        checkCanReturnFocus(returnFocusNode).then(finishDeactivation, finishDeactivation);\n        return this;\n      }\n      finishDeactivation();\n      return this;\n    });\n    __publicField(this, \"pause\", (pauseOptions) => {\n      if (this.state.paused || !this.state.active) {\n        return this;\n      }\n      const onPause = this.getOption(pauseOptions, \"onPause\");\n      const onPostPause = this.getOption(pauseOptions, \"onPostPause\");\n      this.state.paused = true;\n      onPause?.();\n      this.removeListeners();\n      this.updateObservedNodes();\n      onPostPause?.();\n      return this;\n    });\n    __publicField(this, \"unpause\", (unpauseOptions) => {\n      if (!this.state.paused || !this.state.active) {\n        return this;\n      }\n      const onUnpause = this.getOption(unpauseOptions, \"onUnpause\");\n      const onPostUnpause = this.getOption(unpauseOptions, \"onPostUnpause\");\n      this.state.paused = false;\n      onUnpause?.();\n      this.updateTabbableNodes();\n      this.addListeners();\n      this.updateObservedNodes();\n      onPostUnpause?.();\n      return this;\n    });\n    __publicField(this, \"updateContainerElements\", (containerElements) => {\n      this.state.containers = Array.isArray(containerElements) ? containerElements.filter(Boolean) : [containerElements].filter(Boolean);\n      if (this.state.active) {\n        this.updateTabbableNodes();\n      }\n      this.updateObservedNodes();\n      return this;\n    });\n    __publicField(this, \"getReturnFocusNode\", (previousActiveElement) => {\n      const node = this.getNodeForOption(\"setReturnFocus\", {\n        params: [previousActiveElement]\n      });\n      return node ? node : node === false ? false : previousActiveElement;\n    });\n    __publicField(this, \"getOption\", (configOverrideOptions, optionName, configOptionName) => {\n      return configOverrideOptions && configOverrideOptions[optionName] !== void 0 ? configOverrideOptions[optionName] : (\n        // @ts-expect-error\n        this.config[configOptionName || optionName]\n      );\n    });\n    __publicField(this, \"getNodeForOption\", (optionName, { hasFallback = false, params = [] } = {}) => {\n      let optionValue = this.config[optionName];\n      if (typeof optionValue === \"function\") optionValue = optionValue(...params);\n      if (optionValue === true) optionValue = void 0;\n      if (!optionValue) {\n        if (optionValue === void 0 || optionValue === false) {\n          return optionValue;\n        }\n        throw new Error(`\\`${optionName}\\` was specified but was not a node, or did not return a node`);\n      }\n      let node = optionValue;\n      if (typeof optionValue === \"string\") {\n        try {\n          node = this.doc.querySelector(optionValue);\n        } catch (err) {\n          throw new Error(`\\`${optionName}\\` appears to be an invalid selector; error=\"${err.message}\"`);\n        }\n        if (!node) {\n          if (!hasFallback) {\n            throw new Error(`\\`${optionName}\\` as selector refers to no known node`);\n          }\n        }\n      }\n      return node;\n    });\n    __publicField(this, \"findNextNavNode\", (opts) => {\n      const { event, isBackward = false } = opts;\n      const target = opts.target || (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(event);\n      this.updateTabbableNodes();\n      let destinationNode = null;\n      if (this.state.tabbableGroups.length > 0) {\n        const containerIndex = this.findContainerIndex(target, event);\n        const containerGroup = containerIndex >= 0 ? this.state.containerGroups[containerIndex] : void 0;\n        if (containerIndex < 0) {\n          if (isBackward) {\n            destinationNode = this.state.tabbableGroups[this.state.tabbableGroups.length - 1].lastTabbableNode;\n          } else {\n            destinationNode = this.state.tabbableGroups[0].firstTabbableNode;\n          }\n        } else if (isBackward) {\n          let startOfGroupIndex = this.state.tabbableGroups.findIndex(\n            ({ firstTabbableNode }) => target === firstTabbableNode\n          );\n          if (startOfGroupIndex < 0 && (containerGroup?.container === target || (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isFocusable)(target) && !(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isTabbable)(target) && !containerGroup?.nextTabbableNode(target, false))) {\n            startOfGroupIndex = containerIndex;\n          }\n          if (startOfGroupIndex >= 0) {\n            const destinationGroupIndex = startOfGroupIndex === 0 ? this.state.tabbableGroups.length - 1 : startOfGroupIndex - 1;\n            const destinationGroup = this.state.tabbableGroups[destinationGroupIndex];\n            destinationNode = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getTabIndex)(target) >= 0 ? destinationGroup.lastTabbableNode : destinationGroup.lastDomTabbableNode;\n          } else if (!isTabEvent(event)) {\n            destinationNode = containerGroup?.nextTabbableNode(target, false);\n          }\n        } else {\n          let lastOfGroupIndex = this.state.tabbableGroups.findIndex(\n            ({ lastTabbableNode }) => target === lastTabbableNode\n          );\n          if (lastOfGroupIndex < 0 && (containerGroup?.container === target || (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isFocusable)(target) && !(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isTabbable)(target) && !containerGroup?.nextTabbableNode(target))) {\n            lastOfGroupIndex = containerIndex;\n          }\n          if (lastOfGroupIndex >= 0) {\n            const destinationGroupIndex = lastOfGroupIndex === this.state.tabbableGroups.length - 1 ? 0 : lastOfGroupIndex + 1;\n            const destinationGroup = this.state.tabbableGroups[destinationGroupIndex];\n            destinationNode = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getTabIndex)(target) >= 0 ? destinationGroup.firstTabbableNode : destinationGroup.firstDomTabbableNode;\n          } else if (!isTabEvent(event)) {\n            destinationNode = containerGroup?.nextTabbableNode(target);\n          }\n        }\n      } else {\n        destinationNode = this.getNodeForOption(\"fallbackFocus\");\n      }\n      return destinationNode;\n    });\n    this.trapStack = options.trapStack || sharedTrapStack;\n    const config = {\n      returnFocusOnDeactivate: true,\n      escapeDeactivates: true,\n      delayInitialFocus: true,\n      isKeyForward(e) {\n        return isTabEvent(e) && !e.shiftKey;\n      },\n      isKeyBackward(e) {\n        return isTabEvent(e) && e.shiftKey;\n      },\n      ...options\n    };\n    this.doc = config.document || (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getDocument)(Array.isArray(elements) ? elements[0] : elements);\n    this.config = config;\n    this.updateContainerElements(elements);\n    this.setupMutationObserver();\n  }\n  get active() {\n    return this.state.active;\n  }\n  get paused() {\n    return this.state.paused;\n  }\n  findContainerIndex(element, event) {\n    const composedPath = typeof event?.composedPath === \"function\" ? event.composedPath() : void 0;\n    return this.state.containerGroups.findIndex(\n      ({ container, tabbableNodes }) => container.contains(element) || composedPath?.includes(container) || tabbableNodes.find((node) => node === element)\n    );\n  }\n  updateTabbableNodes() {\n    this.state.containerGroups = this.state.containers.map((container) => {\n      const tabbableNodes = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getTabbables)(container);\n      const focusableNodes = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getFocusables)(container);\n      const firstTabbableNode = tabbableNodes.length > 0 ? tabbableNodes[0] : void 0;\n      const lastTabbableNode = tabbableNodes.length > 0 ? tabbableNodes[tabbableNodes.length - 1] : void 0;\n      const firstDomTabbableNode = focusableNodes.find((node) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isTabbable)(node));\n      const lastDomTabbableNode = focusableNodes.slice().reverse().find((node) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isTabbable)(node));\n      const posTabIndexesFound = !!tabbableNodes.find((node) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getTabIndex)(node) > 0);\n      function nextTabbableNode(node, forward = true) {\n        const nodeIdx = tabbableNodes.indexOf(node);\n        if (nodeIdx < 0) {\n          if (forward) {\n            return focusableNodes.slice(focusableNodes.indexOf(node) + 1).find((el) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isTabbable)(el));\n          }\n          return focusableNodes.slice(0, focusableNodes.indexOf(node)).reverse().find((el) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isTabbable)(el));\n        }\n        return tabbableNodes[nodeIdx + (forward ? 1 : -1)];\n      }\n      return {\n        container,\n        tabbableNodes,\n        focusableNodes,\n        posTabIndexesFound,\n        firstTabbableNode,\n        lastTabbableNode,\n        firstDomTabbableNode,\n        lastDomTabbableNode,\n        nextTabbableNode\n      };\n    });\n    this.state.tabbableGroups = this.state.containerGroups.filter((group) => group.tabbableNodes.length > 0);\n    if (this.state.tabbableGroups.length <= 0 && !this.getNodeForOption(\"fallbackFocus\")) {\n      throw new Error(\n        \"Your focus-trap must have at least one container with at least one tabbable node in it at all times\"\n      );\n    }\n    if (this.state.containerGroups.find((g) => g.posTabIndexesFound) && this.state.containerGroups.length > 1) {\n      throw new Error(\n        \"At least one node with a positive tabindex was found in one of your focus-trap's multiple containers. Positive tabindexes are only supported in single-container focus-traps.\"\n      );\n    }\n  }\n  addListeners() {\n    if (!this.state.active) return;\n    activeFocusTraps.activateTrap(this.trapStack, this);\n    this.state.delayInitialFocusTimer = this.config.delayInitialFocus ? delay(() => {\n      this.tryFocus(this.getInitialFocusNode());\n    }) : this.tryFocus(this.getInitialFocusNode());\n    this.listenerCleanups.push(\n      (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)(this.doc, \"focusin\", this.handleFocus, true),\n      (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)(this.doc, \"mousedown\", this.handlePointerDown, { capture: true, passive: false }),\n      (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)(this.doc, \"touchstart\", this.handlePointerDown, { capture: true, passive: false }),\n      (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)(this.doc, \"click\", this.handleClick, { capture: true, passive: false }),\n      (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)(this.doc, \"keydown\", this.handleTabKey, { capture: true, passive: false }),\n      (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)(this.doc, \"keydown\", this.handleEscapeKey)\n    );\n    return this;\n  }\n  removeListeners() {\n    if (!this.state.active) return;\n    this.listenerCleanups.forEach((cleanup) => cleanup());\n    this.listenerCleanups = [];\n    return this;\n  }\n  activate(activateOptions) {\n    if (this.state.active) {\n      return this;\n    }\n    const onActivate = this.getOption(activateOptions, \"onActivate\");\n    const onPostActivate = this.getOption(activateOptions, \"onPostActivate\");\n    const checkCanFocusTrap = this.getOption(activateOptions, \"checkCanFocusTrap\");\n    if (!checkCanFocusTrap) {\n      this.updateTabbableNodes();\n    }\n    this.state.active = true;\n    this.state.paused = false;\n    this.state.nodeFocusedBeforeActivation = this.doc.activeElement || null;\n    onActivate?.();\n    const finishActivation = () => {\n      if (checkCanFocusTrap) {\n        this.updateTabbableNodes();\n      }\n      this.addListeners();\n      this.updateObservedNodes();\n      onPostActivate?.();\n    };\n    if (checkCanFocusTrap) {\n      checkCanFocusTrap(this.state.containers.concat()).then(finishActivation, finishActivation);\n      return this;\n    }\n    finishActivation();\n    return this;\n  }\n};\nvar isTabEvent = (event) => event.key === \"Tab\";\nvar valueOrHandler = (value, ...params) => typeof value === \"function\" ? value(...params) : value;\nvar isEscapeEvent = (event) => !event.isComposing && event.key === \"Escape\";\nvar delay = (fn) => setTimeout(fn, 0);\nvar isSelectableInput = (node) => node.localName === \"input\" && \"select\" in node && typeof node.select === \"function\";\n\n// src/index.ts\nfunction trapFocus(el, options = {}) {\n  let trap;\n  const cleanup = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.raf)(() => {\n    const contentEl = typeof el === \"function\" ? el() : el;\n    if (!contentEl) return;\n    trap = new FocusTrap(contentEl, {\n      escapeDeactivates: false,\n      allowOutsideClick: true,\n      preventScroll: true,\n      returnFocusOnDeactivate: true,\n      delayInitialFocus: false,\n      fallbackFocus: contentEl,\n      ...options,\n      document: (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getDocument)(contentEl)\n    });\n    try {\n      trap.activate();\n    } catch {\n    }\n  });\n  return function destroy() {\n    trap?.deactivate();\n    cleanup();\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/focus-trap/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/focus-visible/dist/index.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/@zag-js/focus-visible/dist/index.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getInteractionModality: () => (/* binding */ getInteractionModality),\n/* harmony export */   isFocusVisible: () => (/* binding */ isFocusVisible),\n/* harmony export */   listenerMap: () => (/* binding */ listenerMap),\n/* harmony export */   setInteractionModality: () => (/* binding */ setInteractionModality),\n/* harmony export */   trackFocusVisible: () => (/* binding */ trackFocusVisible),\n/* harmony export */   trackInteractionModality: () => (/* binding */ trackInteractionModality)\n/* harmony export */ });\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n\n\n// src/index.ts\nfunction isValidKey(e) {\n  return !(e.metaKey || !(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isMac)() && e.altKey || e.ctrlKey || e.key === \"Control\" || e.key === \"Shift\" || e.key === \"Meta\");\n}\nvar nonTextInputTypes = /* @__PURE__ */ new Set([\"checkbox\", \"radio\", \"range\", \"color\", \"file\", \"image\", \"button\", \"submit\", \"reset\"]);\nfunction isKeyboardFocusEvent(isTextInput, modality, e) {\n  const target = e ? (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(e) : null;\n  const win = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getWindow)(target);\n  isTextInput = isTextInput || target instanceof win.HTMLInputElement && !nonTextInputTypes.has(target?.type) || target instanceof win.HTMLTextAreaElement || target instanceof win.HTMLElement && target.isContentEditable;\n  return !(isTextInput && modality === \"keyboard\" && e instanceof win.KeyboardEvent && !Reflect.has(FOCUS_VISIBLE_INPUT_KEYS, e.key));\n}\nvar currentModality = null;\nvar changeHandlers = /* @__PURE__ */ new Set();\nvar listenerMap = /* @__PURE__ */ new Map();\nvar hasEventBeforeFocus = false;\nvar hasBlurredWindowRecently = false;\nvar FOCUS_VISIBLE_INPUT_KEYS = {\n  Tab: true,\n  Escape: true\n};\nfunction triggerChangeHandlers(modality, e) {\n  for (let handler of changeHandlers) {\n    handler(modality, e);\n  }\n}\nfunction handleKeyboardEvent(e) {\n  hasEventBeforeFocus = true;\n  if (isValidKey(e)) {\n    currentModality = \"keyboard\";\n    triggerChangeHandlers(\"keyboard\", e);\n  }\n}\nfunction handlePointerEvent(e) {\n  currentModality = \"pointer\";\n  if (e.type === \"mousedown\" || e.type === \"pointerdown\") {\n    hasEventBeforeFocus = true;\n    triggerChangeHandlers(\"pointer\", e);\n  }\n}\nfunction handleClickEvent(e) {\n  if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isVirtualClick)(e)) {\n    hasEventBeforeFocus = true;\n    currentModality = \"virtual\";\n  }\n}\nfunction handleFocusEvent(e) {\n  const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(e);\n  if (target === (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getWindow)(target) || target === (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getDocument)(target)) {\n    return;\n  }\n  if (!hasEventBeforeFocus && !hasBlurredWindowRecently) {\n    currentModality = \"virtual\";\n    triggerChangeHandlers(\"virtual\", e);\n  }\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = false;\n}\nfunction handleWindowBlur() {\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = true;\n}\nfunction setupGlobalFocusEvents(root) {\n  if (typeof window === \"undefined\" || listenerMap.get((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getWindow)(root))) {\n    return;\n  }\n  const win = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getWindow)(root);\n  const doc = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getDocument)(root);\n  let focus = win.HTMLElement.prototype.focus;\n  function patchedFocus() {\n    currentModality = \"virtual\";\n    triggerChangeHandlers(\"virtual\", null);\n    hasEventBeforeFocus = true;\n    focus.apply(this, arguments);\n  }\n  Object.defineProperty(win.HTMLElement.prototype, \"focus\", {\n    configurable: true,\n    value: patchedFocus\n  });\n  doc.addEventListener(\"keydown\", handleKeyboardEvent, true);\n  doc.addEventListener(\"keyup\", handleKeyboardEvent, true);\n  doc.addEventListener(\"click\", handleClickEvent, true);\n  win.addEventListener(\"focus\", handleFocusEvent, true);\n  win.addEventListener(\"blur\", handleWindowBlur, false);\n  if (typeof win.PointerEvent !== \"undefined\") {\n    doc.addEventListener(\"pointerdown\", handlePointerEvent, true);\n    doc.addEventListener(\"pointermove\", handlePointerEvent, true);\n    doc.addEventListener(\"pointerup\", handlePointerEvent, true);\n  } else {\n    doc.addEventListener(\"mousedown\", handlePointerEvent, true);\n    doc.addEventListener(\"mousemove\", handlePointerEvent, true);\n    doc.addEventListener(\"mouseup\", handlePointerEvent, true);\n  }\n  win.addEventListener(\n    \"beforeunload\",\n    () => {\n      tearDownWindowFocusTracking(root);\n    },\n    { once: true }\n  );\n  listenerMap.set(win, { focus });\n}\nvar tearDownWindowFocusTracking = (root, loadListener) => {\n  const win = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getWindow)(root);\n  const doc = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getDocument)(root);\n  if (!listenerMap.has(win)) {\n    return;\n  }\n  win.HTMLElement.prototype.focus = listenerMap.get(win).focus;\n  doc.removeEventListener(\"keydown\", handleKeyboardEvent, true);\n  doc.removeEventListener(\"keyup\", handleKeyboardEvent, true);\n  doc.removeEventListener(\"click\", handleClickEvent, true);\n  win.removeEventListener(\"focus\", handleFocusEvent, true);\n  win.removeEventListener(\"blur\", handleWindowBlur, false);\n  if (typeof win.PointerEvent !== \"undefined\") {\n    doc.removeEventListener(\"pointerdown\", handlePointerEvent, true);\n    doc.removeEventListener(\"pointermove\", handlePointerEvent, true);\n    doc.removeEventListener(\"pointerup\", handlePointerEvent, true);\n  } else {\n    doc.removeEventListener(\"mousedown\", handlePointerEvent, true);\n    doc.removeEventListener(\"mousemove\", handlePointerEvent, true);\n    doc.removeEventListener(\"mouseup\", handlePointerEvent, true);\n  }\n  listenerMap.delete(win);\n};\nfunction getInteractionModality() {\n  return currentModality;\n}\nfunction setInteractionModality(modality) {\n  currentModality = modality;\n  triggerChangeHandlers(modality, null);\n}\nfunction trackInteractionModality(props) {\n  const { onChange, root } = props;\n  setupGlobalFocusEvents(root);\n  onChange({ modality: currentModality });\n  const handler = () => onChange({ modality: currentModality });\n  changeHandlers.add(handler);\n  return () => {\n    changeHandlers.delete(handler);\n  };\n}\nfunction isFocusVisible() {\n  return currentModality === \"keyboard\";\n}\nfunction trackFocusVisible(props = {}) {\n  const { isTextInput, autoFocus, onChange, root } = props;\n  setupGlobalFocusEvents(root);\n  onChange?.({ isFocusVisible: autoFocus || isFocusVisible(), modality: currentModality });\n  const handler = (modality, e) => {\n    if (!isKeyboardFocusEvent(!!isTextInput, modality, e)) return;\n    onChange?.({ isFocusVisible: isFocusVisible(), modality });\n  };\n  changeHandlers.add(handler);\n  return () => {\n    changeHandlers.delete(handler);\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/focus-visible/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/hover-card/dist/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@zag-js/hover-card/dist/index.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_popper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/popper */ \"(ssr)/./node_modules/@zag-js/popper/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_dismissable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/dismissable */ \"(ssr)/./node_modules/@zag-js/dismissable/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n\n\n\n\n// src/hover-card.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"hoverCard\").parts(\"arrow\", \"arrowTip\", \"trigger\", \"positioner\", \"content\");\nvar parts = anatomy.build();\n\n// src/hover-card.dom.ts\nvar getTriggerId = (ctx) => ctx.ids?.trigger ?? `hover-card:${ctx.id}:trigger`;\nvar getContentId = (ctx) => ctx.ids?.content ?? `hover-card:${ctx.id}:content`;\nvar getPositionerId = (ctx) => ctx.ids?.positioner ?? `hover-card:${ctx.id}:popper`;\nvar getArrowId = (ctx) => ctx.ids?.arrow ?? `hover-card:${ctx.id}:arrow`;\nvar getTriggerEl = (ctx) => ctx.getById(getTriggerId(ctx));\nvar getContentEl = (ctx) => ctx.getById(getContentId(ctx));\nvar getPositionerEl = (ctx) => ctx.getById(getPositionerId(ctx));\n\n// src/hover-card.connect.ts\nfunction connect(service, normalize) {\n  const { state, send, prop, context, scope } = service;\n  const open = state.hasTag(\"open\");\n  const popperStyles = (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_1__.getPlacementStyles)({\n    ...prop(\"positioning\"),\n    placement: context.get(\"currentPlacement\")\n  });\n  return {\n    open,\n    setOpen(nextOpen) {\n      const open2 = state.hasTag(\"open\");\n      if (open2 === nextOpen) return;\n      send({ type: nextOpen ? \"OPEN\" : \"CLOSE\" });\n    },\n    reposition(options = {}) {\n      send({ type: \"POSITIONING.SET\", options });\n    },\n    getArrowProps() {\n      return normalize.element({\n        id: getArrowId(scope),\n        ...parts.arrow.attrs,\n        dir: prop(\"dir\"),\n        style: popperStyles.arrow\n      });\n    },\n    getArrowTipProps() {\n      return normalize.element({\n        ...parts.arrowTip.attrs,\n        dir: prop(\"dir\"),\n        style: popperStyles.arrowTip\n      });\n    },\n    getTriggerProps() {\n      return normalize.element({\n        ...parts.trigger.attrs,\n        dir: prop(\"dir\"),\n        \"data-placement\": context.get(\"currentPlacement\"),\n        id: getTriggerId(scope),\n        \"data-state\": open ? \"open\" : \"closed\",\n        onPointerEnter(event) {\n          if (event.pointerType === \"touch\") return;\n          send({ type: \"POINTER_ENTER\", src: \"trigger\" });\n        },\n        onPointerLeave(event) {\n          if (event.pointerType === \"touch\") return;\n          send({ type: \"POINTER_LEAVE\", src: \"trigger\" });\n        },\n        onFocus() {\n          send({ type: \"TRIGGER_FOCUS\" });\n        },\n        onBlur() {\n          send({ type: \"TRIGGER_BLUR\" });\n        }\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        id: getPositionerId(scope),\n        ...parts.positioner.attrs,\n        dir: prop(\"dir\"),\n        style: popperStyles.floating\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        dir: prop(\"dir\"),\n        id: getContentId(scope),\n        hidden: !open,\n        tabIndex: -1,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-placement\": context.get(\"currentPlacement\"),\n        onPointerEnter(event) {\n          if (event.pointerType === \"touch\") return;\n          send({ type: \"POINTER_ENTER\", src: \"content\" });\n        },\n        onPointerLeave(event) {\n          if (event.pointerType === \"touch\") return;\n          send({ type: \"POINTER_LEAVE\", src: \"content\" });\n        }\n      });\n    }\n  };\n}\nvar { not, and } = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_2__.createGuards)();\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_2__.createMachine)({\n  props({ props: props2 }) {\n    return {\n      openDelay: 700,\n      closeDelay: 300,\n      ...props2,\n      positioning: {\n        placement: \"bottom\",\n        ...props2.positioning\n      }\n    };\n  },\n  initialState({ prop }) {\n    const open = prop(\"open\") || prop(\"defaultOpen\");\n    return open ? \"open\" : \"closed\";\n  },\n  context({ prop, bindable }) {\n    return {\n      open: bindable(() => ({\n        defaultValue: prop(\"defaultOpen\"),\n        value: prop(\"open\"),\n        onChange(value) {\n          prop(\"onOpenChange\")?.({ open: value });\n        }\n      })),\n      currentPlacement: bindable(() => ({\n        defaultValue: void 0\n      })),\n      isPointer: bindable(() => ({\n        defaultValue: false\n      }))\n    };\n  },\n  watch({ track, context, action }) {\n    track([() => context.get(\"open\")], () => {\n      action([\"toggleVisibility\"]);\n    });\n  },\n  states: {\n    closed: {\n      tags: [\"closed\"],\n      entry: [\"clearIsPointer\"],\n      on: {\n        \"CONTROLLED.OPEN\": {\n          target: \"open\"\n        },\n        POINTER_ENTER: {\n          target: \"opening\",\n          actions: [\"setIsPointer\"]\n        },\n        TRIGGER_FOCUS: {\n          target: \"opening\"\n        },\n        OPEN: {\n          target: \"opening\"\n        }\n      }\n    },\n    opening: {\n      tags: [\"closed\"],\n      effects: [\"waitForOpenDelay\"],\n      on: {\n        OPEN_DELAY: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"invokeOnOpen\"]\n          }\n        ],\n        \"CONTROLLED.OPEN\": {\n          target: \"open\"\n        },\n        \"CONTROLLED.CLOSE\": {\n          target: \"closed\"\n        },\n        POINTER_LEAVE: [\n          {\n            guard: \"isOpenControlled\",\n            // We trigger toggleVisibility manually since the `ctx.open` has not changed yet (at this point)\n            actions: [\"invokeOnClose\", \"toggleVisibility\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        TRIGGER_BLUR: [\n          {\n            guard: and(\"isOpenControlled\", not(\"isPointer\")),\n            // We trigger toggleVisibility manually since the `ctx.open` has not changed yet (at this point)\n            actions: [\"invokeOnClose\", \"toggleVisibility\"]\n          },\n          {\n            guard: not(\"isPointer\"),\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        CLOSE: [\n          {\n            guard: \"isOpenControlled\",\n            // We trigger toggleVisibility manually since the `ctx.open` has not changed yet (at this point)\n            actions: [\"invokeOnClose\", \"toggleVisibility\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ]\n      }\n    },\n    open: {\n      tags: [\"open\"],\n      effects: [\"trackDismissableElement\", \"trackPositioning\"],\n      on: {\n        \"CONTROLLED.CLOSE\": {\n          target: \"closed\"\n        },\n        POINTER_ENTER: {\n          actions: [\"setIsPointer\"]\n        },\n        POINTER_LEAVE: {\n          target: \"closing\"\n        },\n        CLOSE: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        TRIGGER_BLUR: [\n          {\n            guard: and(\"isOpenControlled\", not(\"isPointer\")),\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            guard: not(\"isPointer\"),\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        \"POSITIONING.SET\": {\n          actions: [\"reposition\"]\n        }\n      }\n    },\n    closing: {\n      tags: [\"open\"],\n      effects: [\"trackPositioning\", \"waitForCloseDelay\"],\n      on: {\n        CLOSE_DELAY: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        \"CONTROLLED.CLOSE\": {\n          target: \"closed\"\n        },\n        \"CONTROLLED.OPEN\": {\n          target: \"open\"\n        },\n        POINTER_ENTER: {\n          target: \"open\",\n          // no need to invokeOnOpen here because it's still open (but about to close)\n          actions: [\"setIsPointer\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      isPointer: ({ context }) => !!context.get(\"isPointer\"),\n      isOpenControlled: ({ prop }) => prop(\"open\") != null\n    },\n    effects: {\n      waitForOpenDelay({ send, prop }) {\n        const id = setTimeout(() => {\n          send({ type: \"OPEN_DELAY\" });\n        }, prop(\"openDelay\"));\n        return () => clearTimeout(id);\n      },\n      waitForCloseDelay({ send, prop }) {\n        const id = setTimeout(() => {\n          send({ type: \"CLOSE_DELAY\" });\n        }, prop(\"closeDelay\"));\n        return () => clearTimeout(id);\n      },\n      trackPositioning({ context, prop, scope }) {\n        if (!context.get(\"currentPlacement\")) {\n          context.set(\"currentPlacement\", prop(\"positioning\").placement);\n        }\n        const getPositionerEl2 = () => getPositionerEl(scope);\n        return (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_1__.getPlacement)(getTriggerEl(scope), getPositionerEl2, {\n          ...prop(\"positioning\"),\n          defer: true,\n          onComplete(data) {\n            context.set(\"currentPlacement\", data.placement);\n          }\n        });\n      },\n      trackDismissableElement({ send, scope, prop }) {\n        const getContentEl2 = () => getContentEl(scope);\n        return (0,_zag_js_dismissable__WEBPACK_IMPORTED_MODULE_3__.trackDismissableElement)(getContentEl2, {\n          defer: true,\n          exclude: [getTriggerEl(scope)],\n          onDismiss() {\n            send({ type: \"CLOSE\", src: \"interact-outside\" });\n          },\n          onInteractOutside: prop(\"onInteractOutside\"),\n          onPointerDownOutside: prop(\"onPointerDownOutside\"),\n          onFocusOutside(event) {\n            event.preventDefault();\n            prop(\"onFocusOutside\")?.(event);\n          }\n        });\n      }\n    },\n    actions: {\n      invokeOnClose({ prop }) {\n        prop(\"onOpenChange\")?.({ open: false });\n      },\n      invokeOnOpen({ prop }) {\n        prop(\"onOpenChange\")?.({ open: true });\n      },\n      setIsPointer({ context }) {\n        context.set(\"isPointer\", true);\n      },\n      clearIsPointer({ context }) {\n        context.set(\"isPointer\", false);\n      },\n      reposition({ context, prop, scope, event }) {\n        const getPositionerEl2 = () => getPositionerEl(scope);\n        (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_1__.getPlacement)(getTriggerEl(scope), getPositionerEl2, {\n          ...prop(\"positioning\"),\n          ...event.options,\n          defer: true,\n          listeners: false,\n          onComplete(data) {\n            context.set(\"currentPlacement\", data.placement);\n          }\n        });\n      },\n      toggleVisibility({ prop, event, send }) {\n        queueMicrotask(() => {\n          send({ type: prop(\"open\") ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\", previousEvent: event });\n        });\n      }\n    }\n  }\n});\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_4__.createProps)()([\n  \"closeDelay\",\n  \"dir\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"onOpenChange\",\n  \"defaultOpen\",\n  \"open\",\n  \"openDelay\",\n  \"positioning\",\n  \"onInteractOutside\",\n  \"onPointerDownOutside\",\n  \"onFocusOutside\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_5__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/hover-card/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/i18n-utils/dist/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@zag-js/i18n-utils/dist/index.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createFilter: () => (/* binding */ createFilter),\n/* harmony export */   formatBytes: () => (/* binding */ formatBytes),\n/* harmony export */   formatDate: () => (/* binding */ formatDate),\n/* harmony export */   formatList: () => (/* binding */ formatList),\n/* harmony export */   formatNumber: () => (/* binding */ formatNumber),\n/* harmony export */   formatRelativeTime: () => (/* binding */ formatRelativeTime),\n/* harmony export */   getDefaultLocale: () => (/* binding */ getDefaultLocale),\n/* harmony export */   getLocaleDir: () => (/* binding */ getLocaleDir),\n/* harmony export */   isRTL: () => (/* binding */ isRTL),\n/* harmony export */   trackLocale: () => (/* binding */ trackLocale)\n/* harmony export */ });\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n\n\n// src/cache.ts\nfunction i18nCache(Ins) {\n  const formatterCache = /* @__PURE__ */ new Map();\n  return function create(locale, options) {\n    const cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : \"\");\n    if (formatterCache.has(cacheKey)) {\n      return formatterCache.get(cacheKey);\n    }\n    let formatter = new Ins(locale, options);\n    formatterCache.set(cacheKey, formatter);\n    return formatter;\n  };\n}\n\n// src/filter.ts\nvar collatorCache = i18nCache(Intl.Collator);\nfunction createFilter(options) {\n  const { locale, ...rest } = options || {};\n  const collator = collatorCache(locale || \"en-US\", { usage: \"search\", ...rest });\n  function normalize(string) {\n    string = string.normalize(\"NFC\");\n    if (collator.resolvedOptions().ignorePunctuation) {\n      string = string.replace(/\\p{P}/gu, \"\");\n    }\n    return string;\n  }\n  function startsWith(string, substring) {\n    if (substring.length === 0) return true;\n    string = normalize(string);\n    substring = normalize(substring);\n    return collator.compare(string.slice(0, substring.length), substring) === 0;\n  }\n  function endsWith(string, substring) {\n    if (substring.length === 0) return true;\n    string = normalize(string);\n    substring = normalize(substring);\n    return collator.compare(string.slice(-substring.length), substring) === 0;\n  }\n  function contains(string, substring) {\n    if (substring.length === 0) return true;\n    string = normalize(string);\n    substring = normalize(substring);\n    let scan = 0;\n    let sliceLen = substring.length;\n    for (; scan + sliceLen <= string.length; scan++) {\n      let slice = string.slice(scan, scan + sliceLen);\n      if (collator.compare(substring, slice) === 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n  return {\n    startsWith,\n    endsWith,\n    contains\n  };\n}\n\n// src/format-number.ts\nvar getNumberFormatter = i18nCache(Intl.NumberFormat);\nfunction formatNumber(v, locale, options = {}) {\n  const formatter = getNumberFormatter(locale, options);\n  return formatter.format(v);\n}\n\n// src/format-bytes.ts\nvar bitPrefixes = [\"\", \"kilo\", \"mega\", \"giga\", \"tera\"];\nvar bytePrefixes = [\"\", \"kilo\", \"mega\", \"giga\", \"tera\", \"peta\"];\nvar formatBytes = (bytes, locale = \"en-US\", options = {}) => {\n  if (isNaN(bytes)) return \"\";\n  if (bytes === 0) return \"0 B\";\n  const { unit = \"byte\", unitDisplay = \"short\" } = options;\n  const prefix = unit === \"bit\" ? bitPrefixes : bytePrefixes;\n  const index = Math.max(0, Math.min(Math.floor(Math.log10(bytes) / 3), prefix.length - 1));\n  const _unit = prefix[index] + unit;\n  const _unitDisplay = unitDisplay || \"short\";\n  const v = parseFloat((bytes / Math.pow(1e3, index)).toPrecision(3));\n  return formatNumber(v, locale, {\n    style: \"unit\",\n    unit: _unit,\n    unitDisplay: _unitDisplay\n  });\n};\n\n// src/format-date.ts\nvar symbols = \"\\\\s|\\\\.|-|/|\\\\\\\\|,|\\\\$|\\\\!|\\\\?|:|;\";\nfunction createRegEx(sign) {\n  return new RegExp(\"(^|>|\" + symbols + \")(\" + sign + \")($|<|\" + symbols + \")\", \"g\");\n}\nvar FORMATS = [\n  \"G\",\n  \"GG\",\n  \"GGG\",\n  \"GGGG\",\n  \"GGGGG\",\n  \"y\",\n  \"yo\",\n  \"yy\",\n  \"yyy\",\n  \"yyyy\",\n  \"Y\",\n  \"Yo\",\n  \"YY\",\n  \"YYY\",\n  \"YYYY\",\n  \"Q\",\n  \"Qo\",\n  \"QQ\",\n  \"QQQ\",\n  \"QQQQ\",\n  \"QQQQQ\",\n  \"M\",\n  \"Mo\",\n  \"MM\",\n  \"MMM\",\n  \"MMMM\",\n  \"MMMMM\",\n  \"E\",\n  \"EE\",\n  \"EEE\",\n  \"EEEE\",\n  \"EEEEE\",\n  \"EEEEEE\",\n  \"a\",\n  \"aa\",\n  \"aaa\",\n  \"aaaa\",\n  \"aaaaa\",\n  \"d\",\n  \"do\",\n  \"dd\",\n  \"D\",\n  \"Do\",\n  \"DD\",\n  \"DDD\",\n  \"w\",\n  \"wo\",\n  \"ww\",\n  \"s\",\n  \"so\",\n  \"ss\",\n  \"m\",\n  \"mo\",\n  \"mm\",\n  \"h\",\n  \"ho\",\n  \"hh\",\n  \"H\",\n  \"Ho\",\n  \"HH\",\n  \"z\",\n  \"zz\",\n  \"zzz\",\n  \"zzzz\",\n  \"T\"\n];\nfunction ordinal(num) {\n  const n = typeof num === \"string\" ? parseFloat(num) : num;\n  let suffix = \"th\";\n  if (n % 10 === 1 && n % 100 !== 11) {\n    suffix = \"st\";\n  } else if (n % 10 === 2 && n % 100 !== 12) {\n    suffix = \"nd\";\n  } else if (n % 10 === 3 && n % 100 !== 13) {\n    suffix = \"rd\";\n  }\n  return `${n}${suffix}`;\n}\nfunction pad(num, length) {\n  return String(num).padStart(length, \"0\");\n}\nfunction zone(str) {\n  return str.split(/AM|PM/)[1].trim();\n}\nfunction getFormat(date, options) {\n  const { locale, format, timeZone } = options;\n  switch (format) {\n    // era\n    case \"G\":\n    case \"GG\":\n    case \"GGG\":\n      return date.toLocaleString(locale, { era: \"short\" });\n    case \"GGGG\":\n      return date.toLocaleString(locale, { era: \"long\" });\n    case \"GGGGG\":\n      return date.toLocaleString(locale, { era: \"narrow\" });\n    // year\n    case \"y\":\n    case \"Y\":\n      return date.getFullYear();\n    case \"yo\":\n    case \"Yo\":\n      return ordinal(date.toLocaleString(locale, { year: \"numeric\" }));\n    case \"yy\":\n    case \"YY\":\n      return date.toLocaleString(locale, { year: \"2-digit\" });\n    case \"yyy\":\n    case \"YYY\":\n      return date.toLocaleString(locale, { year: \"numeric\" }).padStart(3, \"0\");\n    case \"yyyy\":\n    case \"YYYY\":\n      return date.toLocaleString(locale, { year: \"numeric\" }).padStart(4, \"0\");\n    // quarter\n    case \"Q\":\n    case \"QQQQQ\":\n      return Math.ceil((date.getMonth() + 1) / 3);\n    case \"Qo\":\n      return ordinal(Math.ceil((date.getMonth() + 1) / 3));\n    case \"QQ\":\n      return pad(Math.ceil((date.getMonth() + 1) / 3), 2);\n    case \"QQQ\":\n      return `Q${Math.ceil((date.getMonth() + 1) / 3)}`;\n    case \"QQQQ\": {\n      const base = ordinal(String(Math.ceil((date.getMonth() + 1) / 3)));\n      return `${base} quarter`;\n    }\n    // month\n    case \"M\":\n      return date.getMonth() + 1;\n    case \"Mo\":\n      return ordinal(date.getMonth() + 1);\n    case \"MM\":\n      return date.toLocaleString(locale, { month: \"2-digit\" });\n    case \"MMM\":\n      return date.toLocaleString(locale, { month: \"short\" });\n    case \"MMMM\":\n      return date.toLocaleString(locale, { month: \"long\" });\n    case \"MMMMM\":\n      return date.toLocaleString(locale, { month: \"narrow\" });\n    // week\n    case \"w\":\n      return Math.ceil(date.getDate() / 7);\n    case \"wo\":\n      return ordinal(Math.ceil(date.getDate() / 7));\n    case \"ww\":\n      return pad(Math.ceil(date.getDate() / 7), 2);\n    // day\n    case \"d\":\n    case \"D\":\n      return date.getDate();\n    case \"do\":\n    case \"Do\":\n      return ordinal(date.getDate());\n    case \"dd\":\n    case \"DD\":\n      return date.toLocaleString(locale, { day: \"2-digit\" });\n    case \"DDD\":\n      return pad(date.getDate(), 3);\n    // weekday\n    case \"E\":\n    case \"EE\":\n    case \"EEE\":\n      return date.toLocaleString(locale, { weekday: \"short\" });\n    case \"EEEE\":\n      return date.toLocaleString(locale, { weekday: \"long\" });\n    case \"EEEEE\":\n      return date.toLocaleString(locale, { weekday: \"narrow\" });\n    case \"EEEEEE\":\n      return date.toLocaleString(locale, { weekday: \"short\" }).slice(0, 2);\n    // hour\n    case \"h\":\n      return date.toLocaleString(locale, { hour: \"numeric\", hour12: true });\n    case \"ho\":\n      return ordinal(date.toLocaleString(locale, { hour: \"2-digit\", hour12: true }));\n    case \"hh\":\n      return date.toLocaleString(locale, { hour: \"2-digit\", hour12: true });\n    case \"H\":\n      return date.toLocaleString(locale, { hour: \"numeric\", hour12: false });\n    case \"Ho\":\n      return ordinal(+date.toLocaleString(locale, { hour: \"numeric\", hour12: false }));\n    case \"HH\":\n      return date.toLocaleString(locale, { hour: \"2-digit\", hour12: false });\n    // minute\n    case \"m\":\n      return date.toLocaleString(locale, { minute: \"numeric\" });\n    case \"mo\":\n      return ordinal(date.toLocaleString(locale, { minute: \"numeric\" }));\n    case \"mm\":\n      return date.toLocaleString(locale, { minute: \"2-digit\" });\n    // second\n    case \"s\":\n      return date.toLocaleString(locale, { second: \"numeric\" });\n    case \"so\":\n      return ordinal(date.toLocaleString(locale, { second: \"numeric\" }));\n    case \"ss\":\n      return date.toLocaleString(locale, { second: \"2-digit\" });\n    // timestamp\n    case \"T\":\n      return date.getTime();\n    // day period\n    case \"a\":\n    case \"aa\":\n    case \"aaa\":\n      return date.toLocaleString(locale, { hour: \"numeric\", hour12: true }).toLocaleUpperCase();\n    case \"aaaa\":\n      return date.toLocaleString(locale, { hour: \"numeric\", hour12: true }).toLocaleLowerCase();\n    case \"aaaaa\":\n      return date.toLocaleString(locale, { hour: \"numeric\", hour12: true }).charAt(0);\n    // TODO:Revise this\n    case \"z\":\n    case \"zz\":\n    case \"zzz\": {\n      return zone(date.toLocaleString(locale, { timeZone, timeZoneName: \"shortOffset\" }));\n    }\n    case \"zzzz\":\n      return zone(date.toLocaleString(locale, { timeZone, timeZoneName: \"longOffset\" }));\n    default:\n      throw new Error(`Unknown format: ${format}`);\n  }\n}\nfunction formatDate(date, format, locale, timeZone) {\n  let result = format;\n  for (const key of FORMATS) {\n    const res = getFormat(date, { locale, format: key, timeZone });\n    result = result.replace(createRegEx(key), \"$1\" + res + \"$3\");\n  }\n  return result;\n}\n\n// src/format-list.ts\nvar getListFormatter = i18nCache(Intl.ListFormat);\nfunction formatList(list, locale, options = {}) {\n  const formatter = getListFormatter(locale, options);\n  return formatter.format(list);\n}\n\n// src/format-relative-time.ts\nvar getRelativeTimeFormatter = i18nCache(Intl.RelativeTimeFormat);\nfunction formatRelativeTime(value, locale, options = {}) {\n  const rtf = getRelativeTimeFormatter(locale, options);\n  const now = /* @__PURE__ */ new Date();\n  const diff = getDistance(now, value);\n  if (diff.years > 0) return rtf.format(diff.years * diff.sign, \"year\");\n  if (diff.months > 0) return rtf.format(diff.months * diff.sign, \"month\");\n  if (diff.weeks > 0) return rtf.format(diff.weeks * diff.sign, \"week\");\n  if (diff.days > 0) return rtf.format(diff.days * diff.sign, \"day\");\n  if (diff.hours > 0) return rtf.format(diff.hours * diff.sign, \"hour\");\n  if (diff.minutes > 0) return rtf.format(diff.minutes * diff.sign, \"minute\");\n  return rtf.format(diff.seconds * diff.sign, \"second\");\n}\nvar SECOND_TO_MS = 1e3;\nvar MINUTE_TO_MS = 1e3 * 60;\nvar HOUR_TO_MS = 1e3 * 60 * 60;\nvar DAY_TO_MS = 1e3 * 60 * 60 * 24;\nvar WEEK_TO_MS = 1e3 * 60 * 60 * 24 * 7;\nvar MONTH_TO_MS = 1e3 * 60 * 60 * 24 * 30;\nvar YEAR_TO_MS = 1e3 * 60 * 60 * 24 * 365;\nfunction getDistance(startDate, endDate) {\n  const endTime = endDate.getTime();\n  const startTime = startDate.getTime();\n  const distance = Math.abs(endTime - startTime);\n  return {\n    sign: Math.sign(endTime - startTime),\n    days: Math.floor(distance / DAY_TO_MS),\n    hours: Math.floor(distance % DAY_TO_MS / HOUR_TO_MS),\n    minutes: Math.floor(distance % HOUR_TO_MS / MINUTE_TO_MS),\n    seconds: Math.floor(distance % MINUTE_TO_MS / SECOND_TO_MS),\n    weeks: Math.floor(distance / WEEK_TO_MS),\n    months: Math.floor(distance / MONTH_TO_MS),\n    years: Math.floor(distance / YEAR_TO_MS)\n  };\n}\n\n// src/is-rtl.ts\nvar RTL_SCRIPTS = /* @__PURE__ */ new Set([\n  \"Avst\",\n  \"Arab\",\n  \"Armi\",\n  \"Syrc\",\n  \"Samr\",\n  \"Mand\",\n  \"Thaa\",\n  \"Mend\",\n  \"Nkoo\",\n  \"Adlm\",\n  \"Rohg\",\n  \"Hebr\"\n]);\nvar RTL_LANGS = /* @__PURE__ */ new Set([\n  \"ae\",\n  \"ar\",\n  \"arc\",\n  \"bcc\",\n  \"bqi\",\n  \"ckb\",\n  \"dv\",\n  \"fa\",\n  \"glk\",\n  \"he\",\n  \"ku\",\n  \"mzn\",\n  \"nqo\",\n  \"pnb\",\n  \"ps\",\n  \"sd\",\n  \"ug\",\n  \"ur\",\n  \"yi\"\n]);\nfunction isRTL(locale) {\n  if (Intl.Locale) {\n    const script = new Intl.Locale(locale).maximize().script ?? \"\";\n    return RTL_SCRIPTS.has(script);\n  }\n  const lang = locale.split(\"-\")[0];\n  return RTL_LANGS.has(lang);\n}\nfunction getLocaleDir(locale) {\n  return isRTL(locale) ? \"rtl\" : \"ltr\";\n}\n\n// src/locale.ts\nfunction getDefaultLocale() {\n  let locale = typeof navigator !== \"undefined\" && (navigator.language || navigator.userLanguage) || \"en-US\";\n  return {\n    locale,\n    dir: isRTL(locale) ? \"rtl\" : \"ltr\"\n  };\n}\nfunction trackLocale(options = {}) {\n  const { getRootNode, onLocaleChange } = options;\n  onLocaleChange?.(getDefaultLocale());\n  const handleLocaleChange = () => {\n    onLocaleChange?.(getDefaultLocale());\n  };\n  const win = getRootNode ? (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getWindow)(getRootNode()) : window;\n  win.addEventListener(\"languagechange\", handleLocaleChange);\n  return () => {\n    win.removeEventListener(\"languagechange\", handleLocaleChange);\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/i18n-utils/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/interact-outside/dist/index.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/@zag-js/interact-outside/dist/index.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   trackInteractOutside: () => (/* binding */ trackInteractOutside)\n/* harmony export */ });\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n// src/index.ts\n\n// src/frame-utils.ts\nfunction getWindowFrames(win) {\n  const frames = {\n    each(cb) {\n      for (let i = 0; i < win.frames?.length; i += 1) {\n        const frame = win.frames[i];\n        if (frame) cb(frame);\n      }\n    },\n    addEventListener(event, listener, options) {\n      frames.each((frame) => {\n        try {\n          frame.document.addEventListener(event, listener, options);\n        } catch {\n        }\n      });\n      return () => {\n        try {\n          frames.removeEventListener(event, listener, options);\n        } catch {\n        }\n      };\n    },\n    removeEventListener(event, listener, options) {\n      frames.each((frame) => {\n        try {\n          frame.document.removeEventListener(event, listener, options);\n        } catch {\n        }\n      });\n    }\n  };\n  return frames;\n}\nfunction getParentWindow(win) {\n  const parent = win.frameElement != null ? win.parent : null;\n  return {\n    addEventListener: (event, listener, options) => {\n      try {\n        parent?.addEventListener(event, listener, options);\n      } catch {\n      }\n      return () => {\n        try {\n          parent?.removeEventListener(event, listener, options);\n        } catch {\n        }\n      };\n    },\n    removeEventListener: (event, listener, options) => {\n      try {\n        parent?.removeEventListener(event, listener, options);\n      } catch {\n      }\n    }\n  };\n}\n\n// src/index.ts\nvar POINTER_OUTSIDE_EVENT = \"pointerdown.outside\";\nvar FOCUS_OUTSIDE_EVENT = \"focus.outside\";\nfunction isComposedPathFocusable(composedPath) {\n  for (const node of composedPath) {\n    if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(node) && (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isFocusable)(node)) return true;\n  }\n  return false;\n}\nvar isPointerEvent = (event) => \"clientY\" in event;\nfunction isEventPointWithin(node, event) {\n  if (!isPointerEvent(event) || !node) return false;\n  const rect = node.getBoundingClientRect();\n  if (rect.width === 0 || rect.height === 0) return false;\n  return rect.top <= event.clientY && event.clientY <= rect.top + rect.height && rect.left <= event.clientX && event.clientX <= rect.left + rect.width;\n}\nfunction isPointInRect(rect, point) {\n  return rect.y <= point.y && point.y <= rect.y + rect.height && rect.x <= point.x && point.x <= rect.x + rect.width;\n}\nfunction isEventWithinScrollbar(event, ancestor) {\n  if (!ancestor || !isPointerEvent(event)) return false;\n  const isScrollableY = ancestor.scrollHeight > ancestor.clientHeight;\n  const onScrollbarY = isScrollableY && event.clientX > ancestor.offsetLeft + ancestor.clientWidth;\n  const isScrollableX = ancestor.scrollWidth > ancestor.clientWidth;\n  const onScrollbarX = isScrollableX && event.clientY > ancestor.offsetTop + ancestor.clientHeight;\n  const rect = {\n    x: ancestor.offsetLeft,\n    y: ancestor.offsetTop,\n    width: ancestor.clientWidth + (isScrollableY ? 16 : 0),\n    height: ancestor.clientHeight + (isScrollableX ? 16 : 0)\n  };\n  const point = {\n    x: event.clientX,\n    y: event.clientY\n  };\n  if (!isPointInRect(rect, point)) return false;\n  return onScrollbarY || onScrollbarX;\n}\nfunction trackInteractOutsideImpl(node, options) {\n  const { exclude, onFocusOutside, onPointerDownOutside, onInteractOutside, defer } = options;\n  if (!node) return;\n  const doc = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getDocument)(node);\n  const win = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getWindow)(node);\n  const frames = getWindowFrames(win);\n  const parentWin = getParentWindow(win);\n  function isEventOutside(event, target) {\n    if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(target)) return false;\n    if (!target.isConnected) return false;\n    if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.contains)(node, target)) return false;\n    if (isEventPointWithin(node, event)) return false;\n    const triggerEl = doc.querySelector(`[aria-controls=\"${node.id}\"]`);\n    if (triggerEl) {\n      const triggerAncestor = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getNearestOverflowAncestor)(triggerEl);\n      if (isEventWithinScrollbar(event, triggerAncestor)) return false;\n    }\n    const nodeAncestor = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getNearestOverflowAncestor)(node);\n    if (isEventWithinScrollbar(event, nodeAncestor)) return false;\n    return !exclude?.(target);\n  }\n  const pointerdownCleanups = /* @__PURE__ */ new Set();\n  const isInShadowRoot = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isShadowRoot)(node?.getRootNode());\n  function onPointerDown(event) {\n    function handler(clickEvent) {\n      const func = defer && !(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isTouchDevice)() ? _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.raf : (v) => v();\n      const evt = clickEvent ?? event;\n      const composedPath = evt?.composedPath?.() ?? [evt?.target];\n      func(() => {\n        const target = isInShadowRoot ? composedPath[0] : (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(event);\n        if (!node || !isEventOutside(event, target)) return;\n        if (onPointerDownOutside || onInteractOutside) {\n          const handler2 = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.callAll)(onPointerDownOutside, onInteractOutside);\n          node.addEventListener(POINTER_OUTSIDE_EVENT, handler2, { once: true });\n        }\n        fireCustomEvent(node, POINTER_OUTSIDE_EVENT, {\n          bubbles: false,\n          cancelable: true,\n          detail: {\n            originalEvent: evt,\n            contextmenu: (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isContextMenuEvent)(evt),\n            focusable: isComposedPathFocusable(composedPath),\n            target\n          }\n        });\n      });\n    }\n    if (event.pointerType === \"touch\") {\n      pointerdownCleanups.forEach((fn) => fn());\n      pointerdownCleanups.add((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)(doc, \"click\", handler, { once: true }));\n      pointerdownCleanups.add(parentWin.addEventListener(\"click\", handler, { once: true }));\n      pointerdownCleanups.add(frames.addEventListener(\"click\", handler, { once: true }));\n    } else {\n      handler();\n    }\n  }\n  const cleanups = /* @__PURE__ */ new Set();\n  const timer = setTimeout(() => {\n    cleanups.add((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)(doc, \"pointerdown\", onPointerDown, true));\n    cleanups.add(parentWin.addEventListener(\"pointerdown\", onPointerDown, true));\n    cleanups.add(frames.addEventListener(\"pointerdown\", onPointerDown, true));\n  }, 0);\n  function onFocusin(event) {\n    const func = defer ? _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.raf : (v) => v();\n    func(() => {\n      const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(event);\n      if (!node || !isEventOutside(event, target)) return;\n      if (onFocusOutside || onInteractOutside) {\n        const handler = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.callAll)(onFocusOutside, onInteractOutside);\n        node.addEventListener(FOCUS_OUTSIDE_EVENT, handler, { once: true });\n      }\n      fireCustomEvent(node, FOCUS_OUTSIDE_EVENT, {\n        bubbles: false,\n        cancelable: true,\n        detail: {\n          originalEvent: event,\n          contextmenu: false,\n          focusable: (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isFocusable)(target),\n          target\n        }\n      });\n    });\n  }\n  if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isTouchDevice)()) {\n    cleanups.add((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)(doc, \"focusin\", onFocusin, true));\n    cleanups.add(parentWin.addEventListener(\"focusin\", onFocusin, true));\n    cleanups.add(frames.addEventListener(\"focusin\", onFocusin, true));\n  }\n  return () => {\n    clearTimeout(timer);\n    pointerdownCleanups.forEach((fn) => fn());\n    cleanups.forEach((fn) => fn());\n  };\n}\nfunction trackInteractOutside(nodeOrFn, options) {\n  const { defer } = options;\n  const func = defer ? _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.raf : (v) => v();\n  const cleanups = [];\n  cleanups.push(\n    func(() => {\n      const node = typeof nodeOrFn === \"function\" ? nodeOrFn() : nodeOrFn;\n      cleanups.push(trackInteractOutsideImpl(node, options));\n    })\n  );\n  return () => {\n    cleanups.forEach((fn) => fn?.());\n  };\n}\nfunction fireCustomEvent(el, type, init) {\n  const win = el.ownerDocument.defaultView || window;\n  const event = new win.CustomEvent(type, init);\n  return el.dispatchEvent(event);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/interact-outside/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/menu/dist/index.mjs":
/*!**************************************************!*\
  !*** ./node_modules/@zag-js/menu/dist/index.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   itemGroupLabelProps: () => (/* binding */ itemGroupLabelProps),\n/* harmony export */   itemGroupProps: () => (/* binding */ itemGroupProps),\n/* harmony export */   itemProps: () => (/* binding */ itemProps),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   optionItemProps: () => (/* binding */ optionItemProps),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitItemGroupLabelProps: () => (/* binding */ splitItemGroupLabelProps),\n/* harmony export */   splitItemGroupProps: () => (/* binding */ splitItemGroupProps),\n/* harmony export */   splitItemProps: () => (/* binding */ splitItemProps),\n/* harmony export */   splitOptionItemProps: () => (/* binding */ splitOptionItemProps),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_popper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/popper */ \"(ssr)/./node_modules/@zag-js/popper/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_dismissable__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/dismissable */ \"(ssr)/./node_modules/@zag-js/dismissable/dist/index.mjs\");\n/* harmony import */ var _zag_js_rect_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/rect-utils */ \"(ssr)/./node_modules/@zag-js/rect-utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n\n\n// src/menu.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"menu\").parts(\n  \"arrow\",\n  \"arrowTip\",\n  \"content\",\n  \"contextTrigger\",\n  \"indicator\",\n  \"item\",\n  \"itemGroup\",\n  \"itemGroupLabel\",\n  \"itemIndicator\",\n  \"itemText\",\n  \"positioner\",\n  \"separator\",\n  \"trigger\",\n  \"triggerItem\"\n);\nvar parts = anatomy.build();\nvar getTriggerId = (ctx) => ctx.ids?.trigger ?? `menu:${ctx.id}:trigger`;\nvar getContextTriggerId = (ctx) => ctx.ids?.contextTrigger ?? `menu:${ctx.id}:ctx-trigger`;\nvar getContentId = (ctx) => ctx.ids?.content ?? `menu:${ctx.id}:content`;\nvar getArrowId = (ctx) => ctx.ids?.arrow ?? `menu:${ctx.id}:arrow`;\nvar getPositionerId = (ctx) => ctx.ids?.positioner ?? `menu:${ctx.id}:popper`;\nvar getGroupId = (ctx, id) => ctx.ids?.group?.(id) ?? `menu:${ctx.id}:group:${id}`;\nvar getItemId = (ctx, id) => `${ctx.id}/${id}`;\nvar getItemValue = (el) => el?.dataset.value ?? null;\nvar getGroupLabelId = (ctx, id) => ctx.ids?.groupLabel?.(id) ?? `menu:${ctx.id}:group-label:${id}`;\nvar getContentEl = (ctx) => ctx.getById(getContentId(ctx));\nvar getPositionerEl = (ctx) => ctx.getById(getPositionerId(ctx));\nvar getTriggerEl = (ctx) => ctx.getById(getTriggerId(ctx));\nvar getItemEl = (ctx, value) => value ? ctx.getById(getItemId(ctx, value)) : null;\nvar getContextTriggerEl = (ctx) => ctx.getById(getContextTriggerId(ctx));\nvar getElements = (ctx) => {\n  const ownerId = CSS.escape(getContentId(ctx));\n  const selector = `[role^=\"menuitem\"][data-ownedby=${ownerId}]:not([data-disabled])`;\n  return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.queryAll)(getContentEl(ctx), selector);\n};\nvar getFirstEl = (ctx) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.first)(getElements(ctx));\nvar getLastEl = (ctx) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.last)(getElements(ctx));\nvar isMatch = (el, value) => {\n  if (!value) return false;\n  return el.id === value || el.dataset.value === value;\n};\nvar getNextEl = (ctx, opts) => {\n  const items = getElements(ctx);\n  const index = items.findIndex((el) => isMatch(el, opts.value));\n  return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.next)(items, index, { loop: opts.loop ?? opts.loopFocus });\n};\nvar getPrevEl = (ctx, opts) => {\n  const items = getElements(ctx);\n  const index = items.findIndex((el) => isMatch(el, opts.value));\n  return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.prev)(items, index, { loop: opts.loop ?? opts.loopFocus });\n};\nvar getElemByKey = (ctx, opts) => {\n  const items = getElements(ctx);\n  const item = items.find((el) => isMatch(el, opts.value));\n  return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getByTypeahead)(items, { state: opts.typeaheadState, key: opts.key, activeId: item?.id ?? null });\n};\nvar isTargetDisabled = (v) => {\n  return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isHTMLElement)(v) && (v.dataset.disabled === \"\" || v.hasAttribute(\"disabled\"));\n};\nvar isTriggerItem = (el) => {\n  return !!el?.getAttribute(\"role\")?.startsWith(\"menuitem\") && !!el?.hasAttribute(\"aria-controls\");\n};\nvar itemSelectEvent = \"menu:select\";\nfunction dispatchSelectionEvent(el, value) {\n  if (!el) return;\n  const win = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getWindow)(el);\n  const event = new win.CustomEvent(itemSelectEvent, { detail: { value } });\n  el.dispatchEvent(event);\n}\n\n// src/menu.connect.ts\nfunction connect(service, normalize) {\n  const { context, send, state, computed, prop, scope } = service;\n  const open = state.hasTag(\"open\");\n  const isSubmenu = computed(\"isSubmenu\");\n  const isTypingAhead = computed(\"isTypingAhead\");\n  const composite = prop(\"composite\");\n  const currentPlacement = context.get(\"currentPlacement\");\n  const anchorPoint = context.get(\"anchorPoint\");\n  const highlightedValue = context.get(\"highlightedValue\");\n  const popperStyles = (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacementStyles)({\n    ...prop(\"positioning\"),\n    placement: anchorPoint ? \"bottom\" : currentPlacement\n  });\n  function getItemState(props2) {\n    return {\n      id: getItemId(scope, props2.value),\n      disabled: !!props2.disabled,\n      highlighted: highlightedValue === props2.value\n    };\n  }\n  function getOptionItemProps(props2) {\n    const valueText = props2.valueText ?? props2.value;\n    return { ...props2, id: props2.value, valueText };\n  }\n  function getOptionItemState(props2) {\n    const itemState = getItemState(getOptionItemProps(props2));\n    return {\n      ...itemState,\n      checked: !!props2.checked\n    };\n  }\n  function getItemProps(props2) {\n    const { closeOnSelect, valueText, value } = props2;\n    const itemState = getItemState(props2);\n    const id = getItemId(scope, value);\n    return normalize.element({\n      ...parts.item.attrs,\n      id,\n      role: \"menuitem\",\n      \"aria-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.ariaAttr)(itemState.disabled),\n      \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.disabled),\n      \"data-ownedby\": getContentId(scope),\n      \"data-highlighted\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.highlighted),\n      \"data-value\": value,\n      \"data-valuetext\": valueText,\n      onDragStart(event) {\n        const isLink = event.currentTarget.matches(\"a[href]\");\n        if (isLink) event.preventDefault();\n      },\n      onPointerMove(event) {\n        if (itemState.disabled) return;\n        if (event.pointerType !== \"mouse\") return;\n        const target = event.currentTarget;\n        if (itemState.highlighted) return;\n        send({ type: \"ITEM_POINTERMOVE\", id, target, closeOnSelect });\n      },\n      onPointerLeave(event) {\n        if (itemState.disabled) return;\n        if (event.pointerType !== \"mouse\") return;\n        const pointerMoved = service.event.previous()?.type.includes(\"POINTER\");\n        if (!pointerMoved) return;\n        const target = event.currentTarget;\n        send({ type: \"ITEM_POINTERLEAVE\", id, target, closeOnSelect });\n      },\n      onPointerDown(event) {\n        if (itemState.disabled) return;\n        const target = event.currentTarget;\n        send({ type: \"ITEM_POINTERDOWN\", target, id, closeOnSelect });\n      },\n      onClick(event) {\n        if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isDownloadingEvent)(event)) return;\n        if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isOpeningInNewTab)(event)) return;\n        if (itemState.disabled) return;\n        const target = event.currentTarget;\n        send({ type: \"ITEM_CLICK\", target, id, closeOnSelect });\n      }\n    });\n  }\n  return {\n    highlightedValue,\n    open,\n    setOpen(nextOpen) {\n      const open2 = state.hasTag(\"open\");\n      if (open2 === nextOpen) return;\n      send({ type: nextOpen ? \"OPEN\" : \"CLOSE\" });\n    },\n    setHighlightedValue(value) {\n      send({ type: \"HIGHLIGHTED.SET\", value });\n    },\n    setParent(parent) {\n      send({ type: \"PARENT.SET\", value: parent, id: parent.prop(\"id\") });\n    },\n    setChild(child) {\n      send({ type: \"CHILD.SET\", value: child, id: child.prop(\"id\") });\n    },\n    reposition(options = {}) {\n      send({ type: \"POSITIONING.SET\", options });\n    },\n    addItemListener(props2) {\n      const node = scope.getById(props2.id);\n      if (!node) return;\n      const listener = () => props2.onSelect?.();\n      node.addEventListener(itemSelectEvent, listener);\n      return () => node.removeEventListener(itemSelectEvent, listener);\n    },\n    getContextTriggerProps() {\n      return normalize.element({\n        ...parts.contextTrigger.attrs,\n        dir: prop(\"dir\"),\n        id: getContextTriggerId(scope),\n        onPointerDown(event) {\n          if (event.pointerType === \"mouse\") return;\n          const point = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventPoint)(event);\n          send({ type: \"CONTEXT_MENU_START\", point });\n        },\n        onPointerCancel(event) {\n          if (event.pointerType === \"mouse\") return;\n          send({ type: \"CONTEXT_MENU_CANCEL\" });\n        },\n        onPointerMove(event) {\n          if (event.pointerType === \"mouse\") return;\n          send({ type: \"CONTEXT_MENU_CANCEL\" });\n        },\n        onPointerUp(event) {\n          if (event.pointerType === \"mouse\") return;\n          send({ type: \"CONTEXT_MENU_CANCEL\" });\n        },\n        onContextMenu(event) {\n          const point = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventPoint)(event);\n          send({ type: \"CONTEXT_MENU\", point });\n          event.preventDefault();\n        },\n        style: {\n          WebkitTouchCallout: \"none\",\n          WebkitUserSelect: \"none\",\n          userSelect: \"none\"\n        }\n      });\n    },\n    getTriggerItemProps(childApi) {\n      const triggerProps = childApi.getTriggerProps();\n      return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_4__.mergeProps)(getItemProps({ value: triggerProps.id }), triggerProps);\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...isSubmenu ? parts.triggerItem.attrs : parts.trigger.attrs,\n        \"data-placement\": context.get(\"currentPlacement\"),\n        type: \"button\",\n        dir: prop(\"dir\"),\n        id: getTriggerId(scope),\n        \"data-uid\": prop(\"id\"),\n        \"aria-haspopup\": composite ? \"menu\" : \"dialog\",\n        \"aria-controls\": getContentId(scope),\n        \"aria-expanded\": open || void 0,\n        \"data-state\": open ? \"open\" : \"closed\",\n        onPointerMove(event) {\n          if (event.pointerType !== \"mouse\") return;\n          const disabled = isTargetDisabled(event.currentTarget);\n          if (disabled || !isSubmenu) return;\n          const point = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventPoint)(event);\n          send({ type: \"TRIGGER_POINTERMOVE\", target: event.currentTarget, point });\n        },\n        onPointerLeave(event) {\n          if (isTargetDisabled(event.currentTarget)) return;\n          if (event.pointerType !== \"mouse\") return;\n          if (!isSubmenu) return;\n          const point = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventPoint)(event);\n          send({\n            type: \"TRIGGER_POINTERLEAVE\",\n            target: event.currentTarget,\n            point\n          });\n        },\n        onPointerDown(event) {\n          if (isTargetDisabled(event.currentTarget)) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isContextMenuEvent)(event)) return;\n          event.preventDefault();\n        },\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (isTargetDisabled(event.currentTarget)) return;\n          send({ type: \"TRIGGER_CLICK\", target: event.currentTarget });\n        },\n        onBlur() {\n          send({ type: \"TRIGGER_BLUR\" });\n        },\n        onFocus() {\n          send({ type: \"TRIGGER_FOCUS\" });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          const keyMap = {\n            ArrowDown() {\n              send({ type: \"ARROW_DOWN\" });\n            },\n            ArrowUp() {\n              send({ type: \"ARROW_UP\" });\n            },\n            Enter() {\n              send({ type: \"ARROW_DOWN\", src: \"enter\" });\n            },\n            Space() {\n              send({ type: \"ARROW_DOWN\", src: \"space\" });\n            }\n          };\n          const key = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventKey)(event, {\n            orientation: \"vertical\",\n            dir: prop(\"dir\")\n          });\n          const exec = keyMap[key];\n          if (exec) {\n            event.preventDefault();\n            exec(event);\n          }\n        }\n      });\n    },\n    getIndicatorProps() {\n      return normalize.element({\n        ...parts.indicator.attrs,\n        dir: prop(\"dir\"),\n        \"data-state\": open ? \"open\" : \"closed\"\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        ...parts.positioner.attrs,\n        dir: prop(\"dir\"),\n        id: getPositionerId(scope),\n        style: popperStyles.floating\n      });\n    },\n    getArrowProps() {\n      return normalize.element({\n        id: getArrowId(scope),\n        ...parts.arrow.attrs,\n        dir: prop(\"dir\"),\n        style: popperStyles.arrow\n      });\n    },\n    getArrowTipProps() {\n      return normalize.element({\n        ...parts.arrowTip.attrs,\n        dir: prop(\"dir\"),\n        style: popperStyles.arrowTip\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        id: getContentId(scope),\n        \"aria-label\": prop(\"aria-label\"),\n        hidden: !open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        role: composite ? \"menu\" : \"dialog\",\n        tabIndex: 0,\n        dir: prop(\"dir\"),\n        \"aria-activedescendant\": computed(\"highlightedId\") || void 0,\n        \"aria-labelledby\": getTriggerId(scope),\n        \"data-placement\": currentPlacement,\n        onPointerEnter(event) {\n          if (event.pointerType !== \"mouse\") return;\n          send({ type: \"MENU_POINTERENTER\" });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isSelfTarget)(event)) return;\n          const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventTarget)(event);\n          const sameMenu = target?.closest(\"[role=menu]\") === event.currentTarget || target === event.currentTarget;\n          if (!sameMenu) return;\n          if (event.key === \"Tab\") {\n            const valid = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isValidTabEvent)(event);\n            if (!valid) {\n              event.preventDefault();\n              return;\n            }\n          }\n          const item = getItemEl(scope, highlightedValue);\n          const keyMap = {\n            ArrowDown() {\n              send({ type: \"ARROW_DOWN\" });\n            },\n            ArrowUp() {\n              send({ type: \"ARROW_UP\" });\n            },\n            ArrowLeft() {\n              send({ type: \"ARROW_LEFT\" });\n            },\n            ArrowRight() {\n              send({ type: \"ARROW_RIGHT\" });\n            },\n            Enter() {\n              send({ type: \"ENTER\" });\n              if (highlightedValue == null) return;\n              if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isAnchorElement)(item)) {\n                prop(\"navigate\")?.({ value: highlightedValue, node: item, href: item.href });\n              }\n            },\n            Space(event2) {\n              if (isTypingAhead) {\n                send({ type: \"TYPEAHEAD\", key: event2.key });\n              } else {\n                keyMap.Enter?.(event2);\n              }\n            },\n            Home() {\n              send({ type: \"HOME\" });\n            },\n            End() {\n              send({ type: \"END\" });\n            }\n          };\n          const key = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventKey)(event, { dir: prop(\"dir\") });\n          const exec = keyMap[key];\n          if (exec) {\n            exec(event);\n            event.stopPropagation();\n            event.preventDefault();\n            return;\n          }\n          if (!prop(\"typeahead\")) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isPrintableKey)(event)) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isModifierKey)(event)) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isEditableElement)(target)) return;\n          send({ type: \"TYPEAHEAD\", key: event.key });\n          event.preventDefault();\n        }\n      });\n    },\n    getSeparatorProps() {\n      return normalize.element({\n        ...parts.separator.attrs,\n        role: \"separator\",\n        dir: prop(\"dir\"),\n        \"aria-orientation\": \"horizontal\"\n      });\n    },\n    getItemState,\n    getItemProps,\n    getOptionItemState,\n    getOptionItemProps(props2) {\n      const { type, disabled, onCheckedChange, closeOnSelect } = props2;\n      const option = getOptionItemProps(props2);\n      const itemState = getOptionItemState(props2);\n      return {\n        ...getItemProps(option),\n        ...normalize.element({\n          \"data-type\": type,\n          ...parts.item.attrs,\n          dir: prop(\"dir\"),\n          \"data-value\": option.value,\n          role: `menuitem${type}`,\n          \"aria-checked\": !!itemState.checked,\n          \"data-state\": itemState.checked ? \"checked\" : \"unchecked\",\n          onClick(event) {\n            if (disabled) return;\n            if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isDownloadingEvent)(event)) return;\n            if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isOpeningInNewTab)(event)) return;\n            const target = event.currentTarget;\n            send({ type: \"ITEM_CLICK\", target, option, closeOnSelect });\n            onCheckedChange?.(!itemState.checked);\n          }\n        })\n      };\n    },\n    getItemIndicatorProps(props2) {\n      const itemState = getOptionItemState(props2);\n      return normalize.element({\n        ...parts.itemIndicator.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.disabled),\n        \"data-highlighted\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.highlighted),\n        \"data-state\": itemState.checked ? \"checked\" : \"unchecked\",\n        hidden: !itemState.checked\n      });\n    },\n    getItemTextProps(props2) {\n      const itemState = getOptionItemState(props2);\n      return normalize.element({\n        ...parts.itemText.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.disabled),\n        \"data-highlighted\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.highlighted),\n        \"data-state\": itemState.checked ? \"checked\" : \"unchecked\"\n      });\n    },\n    getItemGroupLabelProps(props2) {\n      return normalize.element({\n        ...parts.itemGroupLabel.attrs,\n        id: getGroupLabelId(scope, props2.htmlFor),\n        dir: prop(\"dir\")\n      });\n    },\n    getItemGroupProps(props2) {\n      return normalize.element({\n        id: getGroupId(scope, props2.id),\n        ...parts.itemGroup.attrs,\n        dir: prop(\"dir\"),\n        \"aria-labelledby\": getGroupLabelId(scope, props2.id),\n        role: \"group\"\n      });\n    }\n  };\n}\nvar { not, and, or } = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_4__.createGuards)();\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_4__.createMachine)({\n  props({ props: props2 }) {\n    return {\n      closeOnSelect: true,\n      typeahead: true,\n      composite: true,\n      loopFocus: false,\n      navigate(details) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.clickIfLink)(details.node);\n      },\n      ...props2,\n      positioning: {\n        placement: \"bottom-start\",\n        gutter: 8,\n        ...props2.positioning\n      }\n    };\n  },\n  initialState({ prop }) {\n    const open = prop(\"open\") || prop(\"defaultOpen\");\n    return open ? \"open\" : \"idle\";\n  },\n  context({ bindable, prop }) {\n    return {\n      suspendPointer: bindable(() => ({\n        defaultValue: false\n      })),\n      highlightedValue: bindable(() => ({\n        defaultValue: prop(\"defaultHighlightedValue\") || null,\n        value: prop(\"highlightedValue\"),\n        onChange(value) {\n          prop(\"onHighlightChange\")?.({ highlightedValue: value });\n        }\n      })),\n      lastHighlightedValue: bindable(() => ({\n        defaultValue: null\n      })),\n      currentPlacement: bindable(() => ({\n        defaultValue: void 0\n      })),\n      intentPolygon: bindable(() => ({\n        defaultValue: null\n      })),\n      anchorPoint: bindable(() => ({\n        defaultValue: null,\n        hash(value) {\n          return `x: ${value?.x}, y: ${value?.y}`;\n        }\n      }))\n    };\n  },\n  refs() {\n    return {\n      parent: null,\n      children: {},\n      typeaheadState: { ..._zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getByTypeahead.defaultOptions },\n      positioningOverride: {}\n    };\n  },\n  computed: {\n    isSubmenu: ({ refs }) => refs.get(\"parent\") != null,\n    isRtl: ({ prop }) => prop(\"dir\") === \"rtl\",\n    isTypingAhead: ({ refs }) => refs.get(\"typeaheadState\").keysSoFar !== \"\",\n    highlightedId: ({ context, scope, refs }) => resolveItemId(refs.get(\"children\"), context.get(\"highlightedValue\"), scope)\n  },\n  watch({ track, action, context, computed, prop }) {\n    track([() => computed(\"isSubmenu\")], () => {\n      action([\"setSubmenuPlacement\"]);\n    });\n    track([() => context.hash(\"anchorPoint\")], () => {\n      action([\"reposition\"]);\n    });\n    track([() => prop(\"open\")], () => {\n      action([\"toggleVisibility\"]);\n    });\n  },\n  on: {\n    \"PARENT.SET\": {\n      actions: [\"setParentMenu\"]\n    },\n    \"CHILD.SET\": {\n      actions: [\"setChildMenu\"]\n    },\n    OPEN: [\n      {\n        guard: \"isOpenControlled\",\n        actions: [\"invokeOnOpen\"]\n      },\n      {\n        target: \"open\",\n        actions: [\"invokeOnOpen\"]\n      }\n    ],\n    OPEN_AUTOFOCUS: [\n      {\n        guard: \"isOpenControlled\",\n        actions: [\"invokeOnOpen\"]\n      },\n      {\n        // internal: true,\n        target: \"open\",\n        actions: [\"highlightFirstItem\", \"invokeOnOpen\"]\n      }\n    ],\n    CLOSE: [\n      {\n        guard: \"isOpenControlled\",\n        actions: [\"invokeOnClose\"]\n      },\n      {\n        target: \"closed\",\n        actions: [\"invokeOnClose\"]\n      }\n    ],\n    \"HIGHLIGHTED.RESTORE\": {\n      actions: [\"restoreHighlightedItem\"]\n    },\n    \"HIGHLIGHTED.SET\": {\n      actions: [\"setHighlightedItem\"]\n    }\n  },\n  states: {\n    idle: {\n      tags: [\"closed\"],\n      on: {\n        \"CONTROLLED.OPEN\": {\n          target: \"open\"\n        },\n        \"CONTROLLED.CLOSE\": {\n          target: \"closed\"\n        },\n        CONTEXT_MENU_START: {\n          target: \"opening:contextmenu\",\n          actions: [\"setAnchorPoint\"]\n        },\n        CONTEXT_MENU: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"setAnchorPoint\", \"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"setAnchorPoint\", \"invokeOnOpen\"]\n          }\n        ],\n        TRIGGER_CLICK: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"invokeOnOpen\"]\n          }\n        ],\n        TRIGGER_FOCUS: {\n          guard: not(\"isSubmenu\"),\n          target: \"closed\"\n        },\n        TRIGGER_POINTERMOVE: {\n          guard: \"isSubmenu\",\n          target: \"opening\"\n        }\n      }\n    },\n    \"opening:contextmenu\": {\n      tags: [\"closed\"],\n      effects: [\"waitForLongPress\"],\n      on: {\n        \"CONTROLLED.OPEN\": { target: \"open\" },\n        \"CONTROLLED.CLOSE\": { target: \"closed\" },\n        CONTEXT_MENU_CANCEL: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        \"LONG_PRESS.OPEN\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"invokeOnOpen\"]\n          }\n        ]\n      }\n    },\n    opening: {\n      tags: [\"closed\"],\n      effects: [\"waitForOpenDelay\"],\n      on: {\n        \"CONTROLLED.OPEN\": {\n          target: \"open\"\n        },\n        \"CONTROLLED.CLOSE\": {\n          target: \"closed\"\n        },\n        BLUR: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        TRIGGER_POINTERLEAVE: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        \"DELAY.OPEN\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"invokeOnOpen\"]\n          }\n        ]\n      }\n    },\n    closing: {\n      tags: [\"open\"],\n      effects: [\"trackPointerMove\", \"trackInteractOutside\", \"waitForCloseDelay\"],\n      on: {\n        \"CONTROLLED.OPEN\": {\n          target: \"open\"\n        },\n        \"CONTROLLED.CLOSE\": {\n          target: \"closed\",\n          actions: [\"focusParentMenu\", \"restoreParentHighlightedItem\"]\n        },\n        // don't invoke on open here since the menu is still open (we're only keeping it open)\n        MENU_POINTERENTER: {\n          target: \"open\",\n          actions: [\"clearIntentPolygon\"]\n        },\n        POINTER_MOVED_AWAY_FROM_SUBMENU: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"focusParentMenu\", \"restoreParentHighlightedItem\"]\n          }\n        ],\n        \"DELAY.CLOSE\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"focusParentMenu\", \"restoreParentHighlightedItem\", \"invokeOnClose\"]\n          }\n        ]\n      }\n    },\n    closed: {\n      tags: [\"closed\"],\n      entry: [\"clearHighlightedItem\", \"focusTrigger\", \"resumePointer\"],\n      on: {\n        \"CONTROLLED.OPEN\": [\n          {\n            guard: or(\"isOpenAutoFocusEvent\", \"isArrowDownEvent\"),\n            target: \"open\",\n            actions: [\"highlightFirstItem\"]\n          },\n          {\n            guard: \"isArrowUpEvent\",\n            target: \"open\",\n            actions: [\"highlightLastItem\"]\n          },\n          {\n            target: \"open\"\n          }\n        ],\n        CONTEXT_MENU_START: {\n          target: \"opening:contextmenu\",\n          actions: [\"setAnchorPoint\"]\n        },\n        CONTEXT_MENU: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"setAnchorPoint\", \"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"setAnchorPoint\", \"invokeOnOpen\"]\n          }\n        ],\n        TRIGGER_CLICK: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"invokeOnOpen\"]\n          }\n        ],\n        TRIGGER_POINTERMOVE: {\n          guard: \"isTriggerItem\",\n          target: \"opening\"\n        },\n        TRIGGER_BLUR: { target: \"idle\" },\n        ARROW_DOWN: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"highlightFirstItem\", \"invokeOnOpen\"]\n          }\n        ],\n        ARROW_UP: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"highlightLastItem\", \"invokeOnOpen\"]\n          }\n        ]\n      }\n    },\n    open: {\n      tags: [\"open\"],\n      effects: [\"trackInteractOutside\", \"trackPositioning\", \"scrollToHighlightedItem\"],\n      entry: [\"focusMenu\", \"resumePointer\"],\n      on: {\n        \"CONTROLLED.CLOSE\": [\n          {\n            target: \"closed\",\n            guard: \"isArrowLeftEvent\",\n            actions: [\"focusParentMenu\"]\n          },\n          {\n            target: \"closed\"\n          }\n        ],\n        TRIGGER_CLICK: [\n          {\n            guard: and(not(\"isTriggerItem\"), \"isOpenControlled\"),\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            guard: not(\"isTriggerItem\"),\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        CONTEXT_MENU: {\n          actions: [\"setAnchorPoint\", \"focusMenu\"]\n        },\n        ARROW_UP: {\n          actions: [\"highlightPrevItem\", \"focusMenu\"]\n        },\n        ARROW_DOWN: {\n          actions: [\"highlightNextItem\", \"focusMenu\"]\n        },\n        ARROW_LEFT: [\n          {\n            guard: and(\"isSubmenu\", \"isOpenControlled\"),\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            guard: \"isSubmenu\",\n            target: \"closed\",\n            actions: [\"focusParentMenu\", \"invokeOnClose\"]\n          }\n        ],\n        HOME: {\n          actions: [\"highlightFirstItem\", \"focusMenu\"]\n        },\n        END: {\n          actions: [\"highlightLastItem\", \"focusMenu\"]\n        },\n        ARROW_RIGHT: {\n          guard: \"isTriggerItemHighlighted\",\n          actions: [\"openSubmenu\"]\n        },\n        ENTER: [\n          {\n            guard: \"isTriggerItemHighlighted\",\n            actions: [\"openSubmenu\"]\n          },\n          {\n            actions: [\"clickHighlightedItem\"]\n          }\n        ],\n        ITEM_POINTERMOVE: [\n          {\n            guard: not(\"isPointerSuspended\"),\n            actions: [\"setHighlightedItem\", \"focusMenu\"]\n          },\n          {\n            actions: [\"setLastHighlightedItem\"]\n          }\n        ],\n        ITEM_POINTERLEAVE: {\n          guard: and(not(\"isPointerSuspended\"), not(\"isTriggerItem\")),\n          actions: [\"clearHighlightedItem\"]\n        },\n        ITEM_CLICK: [\n          // == grouped ==\n          {\n            guard: and(\n              not(\"isTriggerItemHighlighted\"),\n              not(\"isHighlightedItemEditable\"),\n              \"closeOnSelect\",\n              \"isOpenControlled\"\n            ),\n            actions: [\"invokeOnSelect\", \"setOptionState\", \"closeRootMenu\", \"invokeOnClose\"]\n          },\n          {\n            guard: and(not(\"isTriggerItemHighlighted\"), not(\"isHighlightedItemEditable\"), \"closeOnSelect\"),\n            target: \"closed\",\n            actions: [\"invokeOnSelect\", \"setOptionState\", \"closeRootMenu\", \"invokeOnClose\"]\n          },\n          //\n          {\n            guard: and(not(\"isTriggerItemHighlighted\"), not(\"isHighlightedItemEditable\")),\n            actions: [\"invokeOnSelect\", \"setOptionState\"]\n          },\n          { actions: [\"setHighlightedItem\"] }\n        ],\n        TRIGGER_POINTERMOVE: {\n          guard: \"isTriggerItem\",\n          actions: [\"setIntentPolygon\"]\n        },\n        TRIGGER_POINTERLEAVE: {\n          target: \"closing\"\n        },\n        ITEM_POINTERDOWN: {\n          actions: [\"setHighlightedItem\"]\n        },\n        TYPEAHEAD: {\n          actions: [\"highlightMatchedItem\"]\n        },\n        FOCUS_MENU: {\n          actions: [\"focusMenu\"]\n        },\n        \"POSITIONING.SET\": {\n          actions: [\"reposition\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      closeOnSelect: ({ prop, event }) => !!(event?.closeOnSelect ?? prop(\"closeOnSelect\")),\n      // whether the trigger is also a menu item\n      isTriggerItem: ({ event }) => isTriggerItem(event.target),\n      // whether the trigger item is the active item\n      isTriggerItemHighlighted: ({ event, scope, computed }) => {\n        const target = event.target ?? scope.getById(computed(\"highlightedId\"));\n        return !!target?.hasAttribute(\"aria-controls\");\n      },\n      isSubmenu: ({ computed }) => computed(\"isSubmenu\"),\n      isPointerSuspended: ({ context }) => context.get(\"suspendPointer\"),\n      isHighlightedItemEditable: ({ scope, computed }) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isEditableElement)(scope.getById(computed(\"highlightedId\"))),\n      // guard assertions (for controlled mode)\n      isOpenControlled: ({ prop }) => prop(\"open\") !== void 0,\n      isArrowLeftEvent: ({ event }) => event.previousEvent?.type === \"ARROW_LEFT\",\n      isArrowUpEvent: ({ event }) => event.previousEvent?.type === \"ARROW_UP\",\n      isArrowDownEvent: ({ event }) => event.previousEvent?.type === \"ARROW_DOWN\",\n      isOpenAutoFocusEvent: ({ event }) => event.previousEvent?.type === \"OPEN_AUTOFOCUS\"\n    },\n    effects: {\n      waitForOpenDelay({ send }) {\n        const timer = setTimeout(() => {\n          send({ type: \"DELAY.OPEN\" });\n        }, 100);\n        return () => clearTimeout(timer);\n      },\n      waitForCloseDelay({ send }) {\n        const timer = setTimeout(() => {\n          send({ type: \"DELAY.CLOSE\" });\n        }, 300);\n        return () => clearTimeout(timer);\n      },\n      waitForLongPress({ send }) {\n        const timer = setTimeout(() => {\n          send({ type: \"LONG_PRESS.OPEN\" });\n        }, 700);\n        return () => clearTimeout(timer);\n      },\n      trackPositioning({ context, prop, scope, refs }) {\n        if (!!getContextTriggerEl(scope)) return;\n        const positioning = {\n          ...prop(\"positioning\"),\n          ...refs.get(\"positioningOverride\")\n        };\n        context.set(\"currentPlacement\", positioning.placement);\n        const getPositionerEl2 = () => getPositionerEl(scope);\n        return (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacement)(getTriggerEl(scope), getPositionerEl2, {\n          ...positioning,\n          defer: true,\n          onComplete(data) {\n            context.set(\"currentPlacement\", data.placement);\n          }\n        });\n      },\n      trackInteractOutside({ refs, scope, prop, computed, send }) {\n        const getContentEl2 = () => getContentEl(scope);\n        let restoreFocus = true;\n        return (0,_zag_js_dismissable__WEBPACK_IMPORTED_MODULE_5__.trackDismissableElement)(getContentEl2, {\n          defer: true,\n          exclude: [getTriggerEl(scope)],\n          onInteractOutside: prop(\"onInteractOutside\"),\n          onFocusOutside: prop(\"onFocusOutside\"),\n          onEscapeKeyDown(event) {\n            prop(\"onEscapeKeyDown\")?.(event);\n            if (computed(\"isSubmenu\")) event.preventDefault();\n            closeRootMenu({ parent: refs.get(\"parent\") });\n          },\n          onPointerDownOutside(event) {\n            const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventTarget)(event.detail.originalEvent);\n            const isWithinContextTrigger = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.contains)(getContextTriggerEl(scope), target);\n            if (isWithinContextTrigger && event.detail.contextmenu) {\n              event.preventDefault();\n              return;\n            }\n            restoreFocus = !event.detail.focusable;\n            prop(\"onPointerDownOutside\")?.(event);\n          },\n          onDismiss() {\n            send({ type: \"CLOSE\", src: \"interact-outside\", restoreFocus });\n          }\n        });\n      },\n      trackPointerMove({ context, scope, send, refs, flush }) {\n        const parent = refs.get(\"parent\");\n        flush(() => {\n          parent.context.set(\"suspendPointer\", true);\n        });\n        const doc = scope.getDoc();\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.addDomEvent)(doc, \"pointermove\", (e) => {\n          const isMovingToSubmenu = isWithinPolygon(context.get(\"intentPolygon\"), {\n            x: e.clientX,\n            y: e.clientY\n          });\n          if (!isMovingToSubmenu) {\n            send({ type: \"POINTER_MOVED_AWAY_FROM_SUBMENU\" });\n            parent.context.set(\"suspendPointer\", false);\n          }\n        });\n      },\n      scrollToHighlightedItem({ event, scope, computed }) {\n        const exec = () => {\n          if (event.type.startsWith(\"ITEM_POINTER\")) return;\n          const itemEl = scope.getById(computed(\"highlightedId\"));\n          const contentEl2 = getContentEl(scope);\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.scrollIntoView)(itemEl, { rootEl: contentEl2, block: \"nearest\" });\n        };\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => exec());\n        const contentEl = () => getContentEl(scope);\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.observeAttributes)(contentEl, {\n          defer: true,\n          attributes: [\"aria-activedescendant\"],\n          callback: exec\n        });\n      }\n    },\n    actions: {\n      setAnchorPoint({ context, event }) {\n        context.set(\"anchorPoint\", event.point);\n      },\n      setSubmenuPlacement({ computed, refs }) {\n        if (!computed(\"isSubmenu\")) return;\n        const placement = computed(\"isRtl\") ? \"left-start\" : \"right-start\";\n        refs.set(\"positioningOverride\", { placement, gutter: 0 });\n      },\n      reposition({ context, scope, prop, event, refs }) {\n        const getPositionerEl2 = () => getPositionerEl(scope);\n        const anchorPoint = context.get(\"anchorPoint\");\n        const getAnchorRect = anchorPoint ? () => ({ width: 0, height: 0, ...anchorPoint }) : void 0;\n        const positioning = {\n          ...prop(\"positioning\"),\n          ...refs.get(\"positioningOverride\")\n        };\n        (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacement)(getTriggerEl(scope), getPositionerEl2, {\n          ...positioning,\n          defer: true,\n          getAnchorRect,\n          ...event.options ?? {},\n          listeners: false,\n          onComplete(data) {\n            context.set(\"currentPlacement\", data.placement);\n          }\n        });\n      },\n      setOptionState({ event }) {\n        if (!event.option) return;\n        const { checked, onCheckedChange, type } = event.option;\n        if (type === \"radio\") {\n          onCheckedChange?.(true);\n        } else if (type === \"checkbox\") {\n          onCheckedChange?.(!checked);\n        }\n      },\n      clickHighlightedItem({ scope, computed }) {\n        const itemEl = scope.getById(computed(\"highlightedId\"));\n        if (!itemEl || itemEl.dataset.disabled) return;\n        queueMicrotask(() => itemEl.click());\n      },\n      setIntentPolygon({ context, scope, event }) {\n        const menu = getContentEl(scope);\n        const placement = context.get(\"currentPlacement\");\n        if (!menu || !placement) return;\n        const rect = menu.getBoundingClientRect();\n        const polygon = (0,_zag_js_rect_utils__WEBPACK_IMPORTED_MODULE_6__.getElementPolygon)(rect, placement);\n        if (!polygon) return;\n        const rightSide = (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacementSide)(placement) === \"right\";\n        const bleed = rightSide ? -5 : 5;\n        context.set(\"intentPolygon\", [{ ...event.point, x: event.point.x + bleed }, ...polygon]);\n      },\n      clearIntentPolygon({ context }) {\n        context.set(\"intentPolygon\", null);\n      },\n      resumePointer({ refs, flush }) {\n        const parent = refs.get(\"parent\");\n        if (!parent) return;\n        flush(() => {\n          parent.context.set(\"suspendPointer\", false);\n        });\n      },\n      setHighlightedItem({ context, event }) {\n        const value = event.value || getItemValue(event.target);\n        context.set(\"highlightedValue\", value);\n      },\n      clearHighlightedItem({ context }) {\n        context.set(\"highlightedValue\", null);\n      },\n      focusMenu({ scope }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          const contentEl = getContentEl(scope);\n          const initialFocusEl = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getInitialFocus)({\n            root: contentEl,\n            enabled: !(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.contains)(contentEl, scope.getActiveElement()),\n            filter(node) {\n              return !node.role?.startsWith(\"menuitem\");\n            }\n          });\n          initialFocusEl?.focus({ preventScroll: true });\n        });\n      },\n      highlightFirstItem({ context, scope }) {\n        const fn = getContentEl(scope) ? queueMicrotask : _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf;\n        fn(() => {\n          const first2 = getFirstEl(scope);\n          if (!first2) return;\n          context.set(\"highlightedValue\", getItemValue(first2));\n        });\n      },\n      highlightLastItem({ context, scope }) {\n        const fn = getContentEl(scope) ? queueMicrotask : _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf;\n        fn(() => {\n          const last2 = getLastEl(scope);\n          if (!last2) return;\n          context.set(\"highlightedValue\", getItemValue(last2));\n        });\n      },\n      highlightNextItem({ context, scope, event, prop }) {\n        const next2 = getNextEl(scope, {\n          loop: event.loop,\n          value: context.get(\"highlightedValue\"),\n          loopFocus: prop(\"loopFocus\")\n        });\n        context.set(\"highlightedValue\", getItemValue(next2));\n      },\n      highlightPrevItem({ context, scope, event, prop }) {\n        const prev2 = getPrevEl(scope, {\n          loop: event.loop,\n          value: context.get(\"highlightedValue\"),\n          loopFocus: prop(\"loopFocus\")\n        });\n        context.set(\"highlightedValue\", getItemValue(prev2));\n      },\n      invokeOnSelect({ context, prop, scope }) {\n        const value = context.get(\"highlightedValue\");\n        if (value == null) return;\n        const node = getItemEl(scope, value);\n        dispatchSelectionEvent(node, value);\n        prop(\"onSelect\")?.({ value });\n      },\n      focusTrigger({ scope, context, event, computed }) {\n        if (computed(\"isSubmenu\") || context.get(\"anchorPoint\") || event.restoreFocus === false) return;\n        queueMicrotask(() => getTriggerEl(scope)?.focus({ preventScroll: true }));\n      },\n      highlightMatchedItem({ scope, context, event, refs }) {\n        const node = getElemByKey(scope, {\n          key: event.key,\n          value: context.get(\"highlightedValue\"),\n          typeaheadState: refs.get(\"typeaheadState\")\n        });\n        if (!node) return;\n        context.set(\"highlightedValue\", getItemValue(node));\n      },\n      setParentMenu({ refs, event }) {\n        refs.set(\"parent\", event.value);\n      },\n      setChildMenu({ refs, event }) {\n        const children = refs.get(\"children\");\n        children[event.id] = event.value;\n        refs.set(\"children\", children);\n      },\n      closeRootMenu({ refs }) {\n        closeRootMenu({ parent: refs.get(\"parent\") });\n      },\n      openSubmenu({ refs, scope, computed }) {\n        const item = scope.getById(computed(\"highlightedId\"));\n        const id = item?.getAttribute(\"data-uid\");\n        const children = refs.get(\"children\");\n        const child = id ? children[id] : null;\n        child?.send({ type: \"OPEN_AUTOFOCUS\" });\n      },\n      focusParentMenu({ refs }) {\n        refs.get(\"parent\")?.send({ type: \"FOCUS_MENU\" });\n      },\n      setLastHighlightedItem({ context, event }) {\n        context.set(\"lastHighlightedValue\", getItemValue(event.target));\n      },\n      restoreHighlightedItem({ context }) {\n        if (!context.get(\"lastHighlightedValue\")) return;\n        context.set(\"highlightedValue\", context.get(\"lastHighlightedValue\"));\n        context.set(\"lastHighlightedValue\", null);\n      },\n      restoreParentHighlightedItem({ refs }) {\n        refs.get(\"parent\")?.send({ type: \"HIGHLIGHTED.RESTORE\" });\n      },\n      invokeOnOpen({ prop }) {\n        prop(\"onOpenChange\")?.({ open: true });\n      },\n      invokeOnClose({ prop }) {\n        prop(\"onOpenChange\")?.({ open: false });\n      },\n      toggleVisibility({ prop, event, send }) {\n        send({\n          type: prop(\"open\") ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\",\n          previousEvent: event\n        });\n      }\n    }\n  }\n});\nfunction closeRootMenu(ctx) {\n  let parent = ctx.parent;\n  while (parent && parent.computed(\"isSubmenu\")) {\n    parent = parent.refs.get(\"parent\");\n  }\n  parent?.send({ type: \"CLOSE\" });\n}\nfunction isWithinPolygon(polygon, point) {\n  if (!polygon) return false;\n  return (0,_zag_js_rect_utils__WEBPACK_IMPORTED_MODULE_6__.isPointInPolygon)(polygon, point);\n}\nfunction resolveItemId(children, value, scope) {\n  const hasChildren = Object.keys(children).length > 0;\n  if (!value) return null;\n  if (!hasChildren) {\n    return getItemId(scope, value);\n  }\n  for (const id in children) {\n    const childMenu = children[id];\n    const childTriggerId = getTriggerId(childMenu.scope);\n    if (childTriggerId === value) {\n      return childTriggerId;\n    }\n  }\n  return getItemId(scope, value);\n}\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\n  \"anchorPoint\",\n  \"aria-label\",\n  \"closeOnSelect\",\n  \"composite\",\n  \"defaultHighlightedValue\",\n  \"defaultOpen\",\n  \"dir\",\n  \"getRootNode\",\n  \"highlightedValue\",\n  \"id\",\n  \"ids\",\n  \"loopFocus\",\n  \"navigate\",\n  \"onEscapeKeyDown\",\n  \"onFocusOutside\",\n  \"onHighlightChange\",\n  \"onInteractOutside\",\n  \"onOpenChange\",\n  \"onPointerDownOutside\",\n  \"onSelect\",\n  \"open\",\n  \"positioning\",\n  \"typeahead\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(props);\nvar itemProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\"closeOnSelect\", \"disabled\", \"value\", \"valueText\"]);\nvar splitItemProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(itemProps);\nvar itemGroupLabelProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\"htmlFor\"]);\nvar splitItemGroupLabelProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(itemGroupLabelProps);\nvar itemGroupProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\"id\"]);\nvar splitItemGroupProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(itemGroupProps);\nvar optionItemProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\n  \"checked\",\n  \"closeOnSelect\",\n  \"disabled\",\n  \"onCheckedChange\",\n  \"type\",\n  \"value\",\n  \"valueText\"\n]);\nvar splitOptionItemProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(optionItemProps);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/menu/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/number-input/dist/index.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/@zag-js/number-input/dist/index.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _internationalized_number__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @internationalized/number */ \"(ssr)/./node_modules/@internationalized/number/dist/NumberParser.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n// src/number-input.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"numberInput\").parts(\n  \"root\",\n  \"label\",\n  \"input\",\n  \"control\",\n  \"valueText\",\n  \"incrementTrigger\",\n  \"decrementTrigger\",\n  \"scrubber\"\n);\nvar parts = anatomy.build();\nvar getRootId = (ctx) => ctx.ids?.root ?? `number-input:${ctx.id}`;\nvar getInputId = (ctx) => ctx.ids?.input ?? `number-input:${ctx.id}:input`;\nvar getIncrementTriggerId = (ctx) => ctx.ids?.incrementTrigger ?? `number-input:${ctx.id}:inc`;\nvar getDecrementTriggerId = (ctx) => ctx.ids?.decrementTrigger ?? `number-input:${ctx.id}:dec`;\nvar getScrubberId = (ctx) => ctx.ids?.scrubber ?? `number-input:${ctx.id}:scrubber`;\nvar getCursorId = (ctx) => `number-input:${ctx.id}:cursor`;\nvar getLabelId = (ctx) => ctx.ids?.label ?? `number-input:${ctx.id}:label`;\nvar getInputEl = (ctx) => ctx.getById(getInputId(ctx));\nvar getIncrementTriggerEl = (ctx) => ctx.getById(getIncrementTriggerId(ctx));\nvar getDecrementTriggerEl = (ctx) => ctx.getById(getDecrementTriggerId(ctx));\nvar getCursorEl = (ctx) => ctx.getDoc().getElementById(getCursorId(ctx));\nvar getPressedTriggerEl = (ctx, hint) => {\n  let btnEl = null;\n  if (hint === \"increment\") {\n    btnEl = getIncrementTriggerEl(ctx);\n  }\n  if (hint === \"decrement\") {\n    btnEl = getDecrementTriggerEl(ctx);\n  }\n  return btnEl;\n};\nvar setupVirtualCursor = (ctx, point) => {\n  if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isSafari)()) return;\n  createVirtualCursor(ctx, point);\n  return () => {\n    getCursorEl(ctx)?.remove();\n  };\n};\nvar preventTextSelection = (ctx) => {\n  const doc = ctx.getDoc();\n  const html = doc.documentElement;\n  const body = doc.body;\n  body.style.pointerEvents = \"none\";\n  html.style.userSelect = \"none\";\n  html.style.cursor = \"ew-resize\";\n  return () => {\n    body.style.pointerEvents = \"\";\n    html.style.userSelect = \"\";\n    html.style.cursor = \"\";\n    if (!html.style.length) {\n      html.removeAttribute(\"style\");\n    }\n    if (!body.style.length) {\n      body.removeAttribute(\"style\");\n    }\n  };\n};\nvar getMousemoveValue = (ctx, opts) => {\n  const { point, isRtl, event } = opts;\n  const win = ctx.getWin();\n  const x = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.roundToDpr)(event.movementX, win.devicePixelRatio);\n  const y = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.roundToDpr)(event.movementY, win.devicePixelRatio);\n  let hint = x > 0 ? \"increment\" : x < 0 ? \"decrement\" : null;\n  if (isRtl && hint === \"increment\") hint = \"decrement\";\n  if (isRtl && hint === \"decrement\") hint = \"increment\";\n  const newPoint = { x: point.x + x, y: point.y + y };\n  const width = win.innerWidth;\n  const half = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.roundToDpr)(7.5, win.devicePixelRatio);\n  newPoint.x = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.wrap)(newPoint.x + half, width) - half;\n  return { hint, point: newPoint };\n};\nvar createVirtualCursor = (ctx, point) => {\n  const doc = ctx.getDoc();\n  const el = doc.createElement(\"div\");\n  el.className = \"scrubber--cursor\";\n  el.id = getCursorId(ctx);\n  Object.assign(el.style, {\n    width: \"15px\",\n    height: \"15px\",\n    position: \"fixed\",\n    pointerEvents: \"none\",\n    left: \"0px\",\n    top: \"0px\",\n    zIndex: _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.MAX_Z_INDEX,\n    transform: point ? `translate3d(${point.x}px, ${point.y}px, 0px)` : void 0,\n    willChange: \"transform\"\n  });\n  el.innerHTML = `\n      <svg width=\"46\" height=\"15\" style=\"left: -15.5px; position: absolute; top: 0; filter: drop-shadow(rgba(0, 0, 0, 0.4) 0px 1px 1.1px);\">\n        <g transform=\"translate(2 3)\">\n          <path fill-rule=\"evenodd\" d=\"M 15 4.5L 15 2L 11.5 5.5L 15 9L 15 6.5L 31 6.5L 31 9L 34.5 5.5L 31 2L 31 4.5Z\" style=\"stroke-width: 2px; stroke: white;\"></path>\n          <path fill-rule=\"evenodd\" d=\"M 15 4.5L 15 2L 11.5 5.5L 15 9L 15 6.5L 31 6.5L 31 9L 34.5 5.5L 31 2L 31 4.5Z\"></path>\n        </g>\n      </svg>`;\n  doc.body.appendChild(el);\n};\n\n// src/number-input.connect.ts\nfunction connect(service, normalize) {\n  const { state, send, prop, scope, computed } = service;\n  const focused = state.hasTag(\"focus\");\n  const disabled = computed(\"isDisabled\");\n  const readOnly = prop(\"readOnly\");\n  const empty = computed(\"isValueEmpty\");\n  const invalid = computed(\"isOutOfRange\") || !!prop(\"invalid\");\n  const isIncrementDisabled = disabled || !computed(\"canIncrement\") || readOnly;\n  const isDecrementDisabled = disabled || !computed(\"canDecrement\") || readOnly;\n  const translations = prop(\"translations\");\n  return {\n    focused,\n    invalid,\n    empty,\n    value: computed(\"formattedValue\"),\n    valueAsNumber: computed(\"valueAsNumber\"),\n    setValue(value) {\n      send({ type: \"VALUE.SET\", value });\n    },\n    clearValue() {\n      send({ type: \"VALUE.CLEAR\" });\n    },\n    increment() {\n      send({ type: \"VALUE.INCREMENT\" });\n    },\n    decrement() {\n      send({ type: \"VALUE.DECREMENT\" });\n    },\n    setToMax() {\n      send({ type: \"VALUE.SET\", value: prop(\"max\") });\n    },\n    setToMin() {\n      send({ type: \"VALUE.SET\", value: prop(\"min\") });\n    },\n    focus() {\n      getInputEl(scope)?.focus();\n    },\n    getRootProps() {\n      return normalize.element({\n        id: getRootId(scope),\n        ...parts.root.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid)\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        id: getLabelId(scope),\n        htmlFor: getInputId(scope)\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        dir: prop(\"dir\"),\n        role: \"group\",\n        \"aria-disabled\": disabled,\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        \"aria-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.ariaAttr)(invalid)\n      });\n    },\n    getValueTextProps() {\n      return normalize.element({\n        ...parts.valueText.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused)\n      });\n    },\n    getInputProps() {\n      return normalize.input({\n        ...parts.input.attrs,\n        dir: prop(\"dir\"),\n        name: prop(\"name\"),\n        form: prop(\"form\"),\n        id: getInputId(scope),\n        role: \"spinbutton\",\n        defaultValue: computed(\"formattedValue\"),\n        pattern: prop(\"pattern\"),\n        inputMode: prop(\"inputMode\"),\n        \"aria-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.ariaAttr)(invalid),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        disabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        readOnly,\n        required: prop(\"required\"),\n        autoComplete: \"off\",\n        autoCorrect: \"off\",\n        spellCheck: \"false\",\n        type: \"text\",\n        \"aria-roledescription\": \"numberfield\",\n        \"aria-valuemin\": prop(\"min\"),\n        \"aria-valuemax\": prop(\"max\"),\n        \"aria-valuenow\": Number.isNaN(computed(\"valueAsNumber\")) ? void 0 : computed(\"valueAsNumber\"),\n        \"aria-valuetext\": computed(\"valueText\"),\n        onFocus() {\n          send({ type: \"INPUT.FOCUS\" });\n        },\n        onBlur() {\n          send({ type: \"INPUT.BLUR\" });\n        },\n        onInput(event) {\n          send({ type: \"INPUT.CHANGE\", target: event.currentTarget, hint: \"set\" });\n        },\n        onBeforeInput(event) {\n          try {\n            const { selectionStart, selectionEnd, value } = event.currentTarget;\n            const nextValue = value.slice(0, selectionStart) + (event.data ?? \"\") + value.slice(selectionEnd);\n            const isValid = computed(\"parser\").isValidPartialNumber(nextValue);\n            if (!isValid) {\n              event.preventDefault();\n            }\n          } catch {\n          }\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (readOnly) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isComposingEvent)(event)) return;\n          const step = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventStep)(event) * prop(\"step\");\n          const keyMap = {\n            ArrowUp() {\n              send({ type: \"INPUT.ARROW_UP\", step });\n              event.preventDefault();\n            },\n            ArrowDown() {\n              send({ type: \"INPUT.ARROW_DOWN\", step });\n              event.preventDefault();\n            },\n            Home() {\n              if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isModifierKey)(event)) return;\n              send({ type: \"INPUT.HOME\" });\n              event.preventDefault();\n            },\n            End() {\n              if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isModifierKey)(event)) return;\n              send({ type: \"INPUT.END\" });\n              event.preventDefault();\n            },\n            Enter() {\n              send({ type: \"INPUT.ENTER\" });\n            }\n          };\n          const exec = keyMap[event.key];\n          exec?.(event);\n        }\n      });\n    },\n    getDecrementTriggerProps() {\n      return normalize.button({\n        ...parts.decrementTrigger.attrs,\n        dir: prop(\"dir\"),\n        id: getDecrementTriggerId(scope),\n        disabled: isDecrementDisabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(isDecrementDisabled),\n        \"aria-label\": translations.decrementLabel,\n        type: \"button\",\n        tabIndex: -1,\n        \"aria-controls\": getInputId(scope),\n        onPointerDown(event) {\n          if (isDecrementDisabled || !(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isLeftClick)(event)) return;\n          send({ type: \"TRIGGER.PRESS_DOWN\", hint: \"decrement\", pointerType: event.pointerType });\n          if (event.pointerType === \"mouse\") {\n            event.preventDefault();\n          }\n          if (event.pointerType === \"touch\") {\n            event.currentTarget?.focus({ preventScroll: true });\n          }\n        },\n        onPointerUp(event) {\n          send({ type: \"TRIGGER.PRESS_UP\", hint: \"decrement\", pointerType: event.pointerType });\n        },\n        onPointerLeave() {\n          if (isDecrementDisabled) return;\n          send({ type: \"TRIGGER.PRESS_UP\", hint: \"decrement\" });\n        }\n      });\n    },\n    getIncrementTriggerProps() {\n      return normalize.button({\n        ...parts.incrementTrigger.attrs,\n        dir: prop(\"dir\"),\n        id: getIncrementTriggerId(scope),\n        disabled: isIncrementDisabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(isIncrementDisabled),\n        \"aria-label\": translations.incrementLabel,\n        type: \"button\",\n        tabIndex: -1,\n        \"aria-controls\": getInputId(scope),\n        onPointerDown(event) {\n          if (isIncrementDisabled || !(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isLeftClick)(event)) return;\n          send({ type: \"TRIGGER.PRESS_DOWN\", hint: \"increment\", pointerType: event.pointerType });\n          if (event.pointerType === \"mouse\") {\n            event.preventDefault();\n          }\n          if (event.pointerType === \"touch\") {\n            event.currentTarget?.focus({ preventScroll: true });\n          }\n        },\n        onPointerUp(event) {\n          send({ type: \"TRIGGER.PRESS_UP\", hint: \"increment\", pointerType: event.pointerType });\n        },\n        onPointerLeave(event) {\n          send({ type: \"TRIGGER.PRESS_UP\", hint: \"increment\", pointerType: event.pointerType });\n        }\n      });\n    },\n    getScrubberProps() {\n      return normalize.element({\n        ...parts.scrubber.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        id: getScrubberId(scope),\n        role: \"presentation\",\n        onMouseDown(event) {\n          if (disabled) return;\n          const point = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventPoint)(event);\n          const win = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getWindow)(event.currentTarget);\n          const dpr = win.devicePixelRatio;\n          point.x = point.x - (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.roundToDpr)(7.5, dpr);\n          point.y = point.y - (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.roundToDpr)(7.5, dpr);\n          send({ type: \"SCRUBBER.PRESS_DOWN\", point });\n          event.preventDefault();\n        },\n        style: {\n          cursor: disabled ? void 0 : \"ew-resize\"\n        }\n      });\n    }\n  };\n}\n\n// src/cursor.ts\nfunction recordCursor(inputEl) {\n  if (!inputEl || inputEl.ownerDocument.activeElement !== inputEl) return;\n  try {\n    const { selectionStart: start, selectionEnd: end, value } = inputEl;\n    const beforeTxt = value.substring(0, start);\n    const afterTxt = value.substring(end);\n    return {\n      start,\n      end,\n      value,\n      beforeTxt,\n      afterTxt\n    };\n  } catch {\n  }\n}\nfunction restoreCursor(inputEl, selection) {\n  if (!inputEl || inputEl.ownerDocument.activeElement !== inputEl) return;\n  if (!selection) {\n    inputEl.setSelectionRange(inputEl.value.length, inputEl.value.length);\n    return;\n  }\n  try {\n    const { value } = inputEl;\n    const { beforeTxt = \"\", afterTxt = \"\", start } = selection;\n    let startPos = value.length;\n    if (value.endsWith(afterTxt)) {\n      startPos = value.length - afterTxt.length;\n    } else if (value.startsWith(beforeTxt)) {\n      startPos = beforeTxt.length;\n    } else if (start != null) {\n      const beforeLastChar = beforeTxt[start - 1];\n      const newIndex = value.indexOf(beforeLastChar, start - 1);\n      if (newIndex !== -1) {\n        startPos = newIndex + 1;\n      }\n    }\n    inputEl.setSelectionRange(startPos, startPos);\n  } catch {\n  }\n}\nvar createFormatter = (locale, options = {}) => {\n  return new Intl.NumberFormat(locale, options);\n};\nvar createParser = (locale, options = {}) => {\n  return new _internationalized_number__WEBPACK_IMPORTED_MODULE_3__.NumberParser(locale, options);\n};\nvar parseValue = (value, params) => {\n  const { prop, computed } = params;\n  if (!prop(\"formatOptions\")) return parseFloat(value);\n  return computed(\"parser\").parse(String(value));\n};\nvar formatValue = (value, params) => {\n  const { prop, computed } = params;\n  if (Number.isNaN(value)) return \"\";\n  if (!prop(\"formatOptions\")) return value.toString();\n  return computed(\"formatter\").format(value);\n};\nvar getDefaultStep = (step, formatOptions) => {\n  let defaultStep = step !== void 0 && !Number.isNaN(step) ? step : 1;\n  if (formatOptions?.style === \"percent\" && (step === void 0 || Number.isNaN(step))) {\n    defaultStep = 0.01;\n  }\n  return defaultStep;\n};\n\n// src/number-input.machine.ts\nvar { choose, guards, createMachine } = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_4__.setup)();\nvar { not, and } = guards;\nvar machine = createMachine({\n  props({ props: props2 }) {\n    const step = getDefaultStep(props2.step, props2.formatOptions);\n    return {\n      dir: \"ltr\",\n      locale: \"en-US\",\n      focusInputOnChange: true,\n      clampValueOnBlur: !props2.allowOverflow,\n      allowOverflow: false,\n      inputMode: \"decimal\",\n      pattern: \"[0-9]*(.[0-9]+)?\",\n      defaultValue: \"\",\n      step,\n      min: Number.MIN_SAFE_INTEGER,\n      max: Number.MAX_SAFE_INTEGER,\n      spinOnPress: true,\n      ...props2,\n      translations: {\n        incrementLabel: \"increment value\",\n        decrementLabel: \"decrease value\",\n        ...props2.translations\n      }\n    };\n  },\n  initialState() {\n    return \"idle\";\n  },\n  context({ prop, bindable, getComputed }) {\n    return {\n      value: bindable(() => ({\n        defaultValue: prop(\"defaultValue\"),\n        value: prop(\"value\"),\n        onChange(value) {\n          const computed = getComputed();\n          const valueAsNumber = parseValue(value, { computed, prop });\n          prop(\"onValueChange\")?.({ value, valueAsNumber });\n        }\n      })),\n      hint: bindable(() => ({ defaultValue: null })),\n      scrubberCursorPoint: bindable(() => ({\n        defaultValue: null,\n        hash(value) {\n          return value ? `x:${value.x}, y:${value.y}` : \"\";\n        }\n      })),\n      fieldsetDisabled: bindable(() => ({ defaultValue: false }))\n    };\n  },\n  computed: {\n    isRtl: ({ prop }) => prop(\"dir\") === \"rtl\",\n    valueAsNumber: ({ context, computed, prop }) => parseValue(context.get(\"value\"), { computed, prop }),\n    formattedValue: ({ computed, prop }) => formatValue(computed(\"valueAsNumber\"), { computed, prop }),\n    isAtMin: ({ computed, prop }) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isValueAtMin)(computed(\"valueAsNumber\"), prop(\"min\")),\n    isAtMax: ({ computed, prop }) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isValueAtMax)(computed(\"valueAsNumber\"), prop(\"max\")),\n    isOutOfRange: ({ computed, prop }) => !(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isValueWithinRange)(computed(\"valueAsNumber\"), prop(\"min\"), prop(\"max\")),\n    isValueEmpty: ({ context }) => context.get(\"value\") === \"\",\n    isDisabled: ({ prop, context }) => !!prop(\"disabled\") || context.get(\"fieldsetDisabled\"),\n    canIncrement: ({ prop, computed }) => prop(\"allowOverflow\") || !computed(\"isAtMax\"),\n    canDecrement: ({ prop, computed }) => prop(\"allowOverflow\") || !computed(\"isAtMin\"),\n    valueText: ({ prop, context }) => prop(\"translations\").valueText?.(context.get(\"value\")),\n    formatter: (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_4__.memo)(\n      ({ prop }) => [prop(\"locale\"), prop(\"formatOptions\")],\n      (locale, formatOptions) => createFormatter(locale, formatOptions)\n    ),\n    parser: (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_4__.memo)(\n      ({ prop }) => [prop(\"locale\"), prop(\"formatOptions\")],\n      (locale, formatOptions) => createParser(locale, formatOptions)\n    )\n  },\n  watch({ track, action, context, computed, prop }) {\n    track([() => context.get(\"value\"), () => prop(\"locale\")], () => {\n      action([\"syncInputElement\"]);\n    });\n    track([() => computed(\"isOutOfRange\")], () => {\n      action([\"invokeOnInvalid\"]);\n    });\n    track([() => context.hash(\"scrubberCursorPoint\")], () => {\n      action([\"setVirtualCursorPosition\"]);\n    });\n  },\n  effects: [\"trackFormControl\"],\n  on: {\n    \"VALUE.SET\": {\n      actions: [\"setRawValue\"]\n    },\n    \"VALUE.CLEAR\": {\n      actions: [\"clearValue\"]\n    },\n    \"VALUE.INCREMENT\": {\n      actions: [\"increment\"]\n    },\n    \"VALUE.DECREMENT\": {\n      actions: [\"decrement\"]\n    }\n  },\n  states: {\n    idle: {\n      on: {\n        \"TRIGGER.PRESS_DOWN\": [\n          { guard: \"isTouchPointer\", target: \"before:spin\", actions: [\"setHint\"] },\n          {\n            target: \"before:spin\",\n            actions: [\"focusInput\", \"invokeOnFocus\", \"setHint\"]\n          }\n        ],\n        \"SCRUBBER.PRESS_DOWN\": {\n          target: \"scrubbing\",\n          actions: [\"focusInput\", \"invokeOnFocus\", \"setHint\", \"setCursorPoint\"]\n        },\n        \"INPUT.FOCUS\": {\n          target: \"focused\",\n          actions: [\"focusInput\", \"invokeOnFocus\"]\n        }\n      }\n    },\n    focused: {\n      tags: [\"focus\"],\n      effects: [\"attachWheelListener\"],\n      on: {\n        \"TRIGGER.PRESS_DOWN\": [\n          { guard: \"isTouchPointer\", target: \"before:spin\", actions: [\"setHint\"] },\n          { target: \"before:spin\", actions: [\"focusInput\", \"setHint\"] }\n        ],\n        \"SCRUBBER.PRESS_DOWN\": {\n          target: \"scrubbing\",\n          actions: [\"focusInput\", \"setHint\", \"setCursorPoint\"]\n        },\n        \"INPUT.ARROW_UP\": {\n          actions: [\"increment\"]\n        },\n        \"INPUT.ARROW_DOWN\": {\n          actions: [\"decrement\"]\n        },\n        \"INPUT.HOME\": {\n          actions: [\"decrementToMin\"]\n        },\n        \"INPUT.END\": {\n          actions: [\"incrementToMax\"]\n        },\n        \"INPUT.CHANGE\": {\n          actions: [\"setValue\", \"setHint\"]\n        },\n        \"INPUT.BLUR\": [\n          {\n            guard: and(\"clampValueOnBlur\", not(\"isInRange\")),\n            target: \"idle\",\n            actions: [\"setClampedValue\", \"clearHint\", \"invokeOnBlur\"]\n          },\n          {\n            guard: not(\"isInRange\"),\n            target: \"idle\",\n            actions: [\"setFormattedValue\", \"clearHint\", \"invokeOnBlur\", \"invokeOnInvalid\"]\n          },\n          {\n            target: \"idle\",\n            actions: [\"setFormattedValue\", \"clearHint\", \"invokeOnBlur\"]\n          }\n        ],\n        \"INPUT.ENTER\": {\n          actions: [\"setFormattedValue\", \"clearHint\", \"invokeOnBlur\"]\n        }\n      }\n    },\n    \"before:spin\": {\n      tags: [\"focus\"],\n      effects: [\"trackButtonDisabled\", \"waitForChangeDelay\"],\n      entry: choose([\n        { guard: \"isIncrementHint\", actions: [\"increment\"] },\n        { guard: \"isDecrementHint\", actions: [\"decrement\"] }\n      ]),\n      on: {\n        CHANGE_DELAY: {\n          target: \"spinning\",\n          guard: and(\"isInRange\", \"spinOnPress\")\n        },\n        \"TRIGGER.PRESS_UP\": [\n          { guard: \"isTouchPointer\", target: \"focused\", actions: [\"clearHint\"] },\n          { target: \"focused\", actions: [\"focusInput\", \"clearHint\"] }\n        ]\n      }\n    },\n    spinning: {\n      tags: [\"focus\"],\n      effects: [\"trackButtonDisabled\", \"spinValue\"],\n      on: {\n        SPIN: [\n          {\n            guard: \"isIncrementHint\",\n            actions: [\"increment\"]\n          },\n          {\n            guard: \"isDecrementHint\",\n            actions: [\"decrement\"]\n          }\n        ],\n        \"TRIGGER.PRESS_UP\": {\n          target: \"focused\",\n          actions: [\"focusInput\", \"clearHint\"]\n        }\n      }\n    },\n    scrubbing: {\n      tags: [\"focus\"],\n      effects: [\"activatePointerLock\", \"trackMousemove\", \"setupVirtualCursor\", \"preventTextSelection\"],\n      on: {\n        \"SCRUBBER.POINTER_UP\": {\n          target: \"focused\",\n          actions: [\"focusInput\", \"clearCursorPoint\"]\n        },\n        \"SCRUBBER.POINTER_MOVE\": [\n          {\n            guard: \"isIncrementHint\",\n            actions: [\"increment\", \"setCursorPoint\"]\n          },\n          {\n            guard: \"isDecrementHint\",\n            actions: [\"decrement\", \"setCursorPoint\"]\n          }\n        ]\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      clampValueOnBlur: ({ prop }) => prop(\"clampValueOnBlur\"),\n      spinOnPress: ({ prop }) => !!prop(\"spinOnPress\"),\n      isInRange: ({ computed }) => !computed(\"isOutOfRange\"),\n      isDecrementHint: ({ context, event }) => (event.hint ?? context.get(\"hint\")) === \"decrement\",\n      isIncrementHint: ({ context, event }) => (event.hint ?? context.get(\"hint\")) === \"increment\",\n      isTouchPointer: ({ event }) => event.pointerType === \"touch\"\n    },\n    effects: {\n      waitForChangeDelay({ send }) {\n        const id = setTimeout(() => {\n          send({ type: \"CHANGE_DELAY\" });\n        }, 300);\n        return () => clearTimeout(id);\n      },\n      spinValue({ send }) {\n        const id = setInterval(() => {\n          send({ type: \"SPIN\" });\n        }, 50);\n        return () => clearInterval(id);\n      },\n      trackFormControl({ context, scope }) {\n        const inputEl = getInputEl(scope);\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackFormControl)(inputEl, {\n          onFieldsetDisabledChange(disabled) {\n            context.set(\"fieldsetDisabled\", disabled);\n          },\n          onFormReset() {\n            context.set(\"value\", context.initial(\"value\"));\n          }\n        });\n      },\n      setupVirtualCursor({ context, scope }) {\n        const point = context.get(\"scrubberCursorPoint\");\n        return setupVirtualCursor(scope, point);\n      },\n      preventTextSelection({ scope }) {\n        return preventTextSelection(scope);\n      },\n      trackButtonDisabled({ context, scope, send }) {\n        const hint = context.get(\"hint\");\n        const btn = getPressedTriggerEl(scope, hint);\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.observeAttributes)(btn, {\n          attributes: [\"disabled\"],\n          callback() {\n            send({ type: \"TRIGGER.PRESS_UP\", src: \"attr\" });\n          }\n        });\n      },\n      attachWheelListener({ scope, send, prop }) {\n        const inputEl = getInputEl(scope);\n        if (!inputEl || !scope.isActiveElement(inputEl) || !prop(\"allowMouseWheel\")) return;\n        function onWheel(event) {\n          event.preventDefault();\n          const dir = Math.sign(event.deltaY) * -1;\n          if (dir === 1) {\n            send({ type: \"VALUE.INCREMENT\" });\n          } else if (dir === -1) {\n            send({ type: \"VALUE.DECREMENT\" });\n          }\n        }\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.addDomEvent)(inputEl, \"wheel\", onWheel, { passive: false });\n      },\n      activatePointerLock({ scope }) {\n        if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isSafari)()) return;\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.requestPointerLock)(scope.getDoc());\n      },\n      trackMousemove({ scope, send, context, computed }) {\n        const doc = scope.getDoc();\n        function onMousemove(event) {\n          const point = context.get(\"scrubberCursorPoint\");\n          const isRtl = computed(\"isRtl\");\n          const value = getMousemoveValue(scope, { point, isRtl, event });\n          if (!value.hint) return;\n          send({\n            type: \"SCRUBBER.POINTER_MOVE\",\n            hint: value.hint,\n            point: value.point\n          });\n        }\n        function onMouseup() {\n          send({ type: \"SCRUBBER.POINTER_UP\" });\n        }\n        return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.callAll)((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.addDomEvent)(doc, \"mousemove\", onMousemove, false), (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.addDomEvent)(doc, \"mouseup\", onMouseup, false));\n      }\n    },\n    actions: {\n      focusInput({ scope, prop }) {\n        if (!prop(\"focusInputOnChange\")) return;\n        const inputEl = getInputEl(scope);\n        if (scope.isActiveElement(inputEl)) return;\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => inputEl?.focus({ preventScroll: true }));\n      },\n      increment({ context, event, prop, computed }) {\n        let nextValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.incrementValue)(computed(\"valueAsNumber\"), event.step ?? prop(\"step\"));\n        if (!prop(\"allowOverflow\")) nextValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.clampValue)(nextValue, prop(\"min\"), prop(\"max\"));\n        context.set(\"value\", formatValue(nextValue, { computed, prop }));\n      },\n      decrement({ context, event, prop, computed }) {\n        let nextValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.decrementValue)(computed(\"valueAsNumber\"), event.step ?? prop(\"step\"));\n        if (!prop(\"allowOverflow\")) nextValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.clampValue)(nextValue, prop(\"min\"), prop(\"max\"));\n        context.set(\"value\", formatValue(nextValue, { computed, prop }));\n      },\n      setClampedValue({ context, prop, computed }) {\n        const nextValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.clampValue)(computed(\"valueAsNumber\"), prop(\"min\"), prop(\"max\"));\n        context.set(\"value\", formatValue(nextValue, { computed, prop }));\n      },\n      setRawValue({ context, event, prop, computed }) {\n        let nextValue = parseValue(event.value, { computed, prop });\n        if (!prop(\"allowOverflow\")) nextValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.clampValue)(nextValue, prop(\"min\"), prop(\"max\"));\n        context.set(\"value\", formatValue(nextValue, { computed, prop }));\n      },\n      setValue({ context, event }) {\n        const value = event.target?.value ?? event.value;\n        context.set(\"value\", value);\n      },\n      clearValue({ context }) {\n        context.set(\"value\", \"\");\n      },\n      incrementToMax({ context, prop, computed }) {\n        const value = formatValue(prop(\"max\"), { computed, prop });\n        context.set(\"value\", value);\n      },\n      decrementToMin({ context, prop, computed }) {\n        const value = formatValue(prop(\"min\"), { computed, prop });\n        context.set(\"value\", value);\n      },\n      setHint({ context, event }) {\n        context.set(\"hint\", event.hint);\n      },\n      clearHint({ context }) {\n        context.set(\"hint\", null);\n      },\n      invokeOnFocus({ computed, prop }) {\n        prop(\"onFocusChange\")?.({\n          focused: true,\n          value: computed(\"formattedValue\"),\n          valueAsNumber: computed(\"valueAsNumber\")\n        });\n      },\n      invokeOnBlur({ computed, prop }) {\n        prop(\"onFocusChange\")?.({\n          focused: false,\n          value: computed(\"formattedValue\"),\n          valueAsNumber: computed(\"valueAsNumber\")\n        });\n      },\n      invokeOnInvalid({ computed, prop, event }) {\n        if (event.type === \"INPUT.CHANGE\") return;\n        const reason = computed(\"valueAsNumber\") > prop(\"max\") ? \"rangeOverflow\" : \"rangeUnderflow\";\n        prop(\"onValueInvalid\")?.({\n          reason,\n          value: computed(\"formattedValue\"),\n          valueAsNumber: computed(\"valueAsNumber\")\n        });\n      },\n      syncInputElement({ context, event, computed, scope }) {\n        const value = event.type.endsWith(\"CHANGE\") ? context.get(\"value\") : computed(\"formattedValue\");\n        const inputEl = getInputEl(scope);\n        const sel = recordCursor(inputEl);\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.setElementValue)(inputEl, value);\n          restoreCursor(inputEl, sel);\n        });\n      },\n      setFormattedValue({ context, computed }) {\n        context.set(\"value\", computed(\"formattedValue\"));\n      },\n      setCursorPoint({ context, event }) {\n        context.set(\"scrubberCursorPoint\", event.point);\n      },\n      clearCursorPoint({ context }) {\n        context.set(\"scrubberCursorPoint\", null);\n      },\n      setVirtualCursorPosition({ context, scope }) {\n        const cursorEl = getCursorEl(scope);\n        const point = context.get(\"scrubberCursorPoint\");\n        if (!cursorEl || !point) return;\n        cursorEl.style.transform = `translate3d(${point.x}px, ${point.y}px, 0px)`;\n      }\n    }\n  }\n});\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_5__.createProps)()([\n  \"allowMouseWheel\",\n  \"allowOverflow\",\n  \"clampValueOnBlur\",\n  \"dir\",\n  \"disabled\",\n  \"focusInputOnChange\",\n  \"form\",\n  \"formatOptions\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"inputMode\",\n  \"invalid\",\n  \"locale\",\n  \"max\",\n  \"min\",\n  \"name\",\n  \"onFocusChange\",\n  \"onValueChange\",\n  \"onValueInvalid\",\n  \"pattern\",\n  \"required\",\n  \"readOnly\",\n  \"spinOnPress\",\n  \"step\",\n  \"translations\",\n  \"value\",\n  \"defaultValue\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/number-input/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/pin-input/dist/index.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/@zag-js/pin-input/dist/index.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n// src/pin-input.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"pinInput\").parts(\"root\", \"label\", \"input\", \"control\");\nvar parts = anatomy.build();\nvar getRootId = (ctx) => ctx.ids?.root ?? `pin-input:${ctx.id}`;\nvar getInputId = (ctx, id) => ctx.ids?.input?.(id) ?? `pin-input:${ctx.id}:${id}`;\nvar getHiddenInputId = (ctx) => ctx.ids?.hiddenInput ?? `pin-input:${ctx.id}:hidden`;\nvar getLabelId = (ctx) => ctx.ids?.label ?? `pin-input:${ctx.id}:label`;\nvar getControlId = (ctx) => ctx.ids?.control ?? `pin-input:${ctx.id}:control`;\nvar getRootEl = (ctx) => ctx.getById(getRootId(ctx));\nvar getInputEls = (ctx) => {\n  const ownerId = CSS.escape(getRootId(ctx));\n  const selector = `input[data-ownedby=${ownerId}]`;\n  return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.queryAll)(getRootEl(ctx), selector);\n};\nvar getInputElAtIndex = (ctx, index) => getInputEls(ctx)[index];\nvar getFirstInputEl = (ctx) => getInputEls(ctx)[0];\nvar getHiddenInputEl = (ctx) => ctx.getById(getHiddenInputId(ctx));\nvar setInputValue = (inputEl, value) => {\n  inputEl.value = value;\n  inputEl.setAttribute(\"value\", value);\n};\n\n// src/pin-input.utils.ts\nvar REGEX = {\n  numeric: /^[0-9]+$/,\n  alphabetic: /^[A-Za-z]+$/,\n  alphanumeric: /^[a-zA-Z0-9]+$/i\n};\nfunction isValidType(type, value) {\n  if (!type) return true;\n  return !!REGEX[type]?.test(value);\n}\nfunction isValidValue(value, type, pattern) {\n  if (!pattern) return isValidType(type, value);\n  const regex = new RegExp(pattern, \"g\");\n  return regex.test(value);\n}\n\n// src/pin-input.connect.ts\nfunction connect(service, normalize) {\n  const { send, context, computed, prop, scope } = service;\n  const complete = computed(\"isValueComplete\");\n  const invalid = prop(\"invalid\");\n  const translations = prop(\"translations\");\n  const focusedIndex = context.get(\"focusedIndex\");\n  function focus() {\n    getFirstInputEl(scope)?.focus();\n  }\n  return {\n    focus,\n    count: context.get(\"count\"),\n    items: Array.from({ length: context.get(\"count\") }).map((_, i) => i),\n    value: context.get(\"value\"),\n    valueAsString: computed(\"valueAsString\"),\n    complete,\n    setValue(value) {\n      if (!Array.isArray(value)) {\n        (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.invariant)(\"[pin-input/setValue] value must be an array\");\n      }\n      send({ type: \"VALUE.SET\", value });\n    },\n    clearValue() {\n      send({ type: \"VALUE.CLEAR\" });\n    },\n    setValueAtIndex(index, value) {\n      send({ type: \"VALUE.SET\", value, index });\n    },\n    getRootProps() {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        ...parts.root.attrs,\n        id: getRootId(scope),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"disabled\")),\n        \"data-complete\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(complete),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"readOnly\"))\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        dir: prop(\"dir\"),\n        htmlFor: getHiddenInputId(scope),\n        id: getLabelId(scope),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"disabled\")),\n        \"data-complete\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(complete),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"readOnly\")),\n        onClick(event) {\n          event.preventDefault();\n          focus();\n        }\n      });\n    },\n    getHiddenInputProps() {\n      return normalize.input({\n        \"aria-hidden\": true,\n        type: \"text\",\n        tabIndex: -1,\n        id: getHiddenInputId(scope),\n        readOnly: prop(\"readOnly\"),\n        disabled: prop(\"disabled\"),\n        required: prop(\"required\"),\n        name: prop(\"name\"),\n        form: prop(\"form\"),\n        style: _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.visuallyHiddenStyle,\n        maxLength: computed(\"valueLength\"),\n        defaultValue: computed(\"valueAsString\")\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        dir: prop(\"dir\"),\n        id: getControlId(scope)\n      });\n    },\n    getInputProps(props2) {\n      const { index } = props2;\n      const inputType = prop(\"type\") === \"numeric\" ? \"tel\" : \"text\";\n      return normalize.input({\n        ...parts.input.attrs,\n        dir: prop(\"dir\"),\n        disabled: prop(\"disabled\"),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"disabled\")),\n        \"data-complete\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(complete),\n        id: getInputId(scope, index.toString()),\n        \"data-index\": index,\n        \"data-ownedby\": getRootId(scope),\n        \"aria-label\": translations?.inputLabel?.(index, computed(\"valueLength\")),\n        inputMode: prop(\"otp\") || prop(\"type\") === \"numeric\" ? \"numeric\" : \"text\",\n        \"aria-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.ariaAttr)(invalid),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        type: prop(\"mask\") ? \"password\" : inputType,\n        defaultValue: context.get(\"value\")[index] || \"\",\n        readOnly: prop(\"readOnly\"),\n        autoCapitalize: \"none\",\n        autoComplete: prop(\"otp\") ? \"one-time-code\" : \"off\",\n        placeholder: focusedIndex === index ? \"\" : prop(\"placeholder\"),\n        onBeforeInput(event) {\n          try {\n            const value = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getBeforeInputValue)(event);\n            const isValid = isValidValue(value, prop(\"type\"), prop(\"pattern\"));\n            if (!isValid) {\n              send({ type: \"VALUE.INVALID\", value });\n              event.preventDefault();\n            }\n            if (value.length > 2) {\n              event.currentTarget.setSelectionRange(0, 1, \"forward\");\n            }\n          } catch {\n          }\n        },\n        onChange(event) {\n          const evt = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getNativeEvent)(event);\n          const { value } = event.currentTarget;\n          if (evt.inputType === \"insertFromPaste\" || value.length > 2) {\n            send({ type: \"INPUT.PASTE\", value });\n            event.currentTarget.value = value[0];\n            event.preventDefault();\n            return;\n          }\n          if (evt.inputType === \"deleteContentBackward\") {\n            send({ type: \"INPUT.BACKSPACE\" });\n            return;\n          }\n          send({ type: \"INPUT.CHANGE\", value, index });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isComposingEvent)(event)) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isModifierKey)(event)) return;\n          const keyMap = {\n            Backspace() {\n              send({ type: \"INPUT.BACKSPACE\" });\n            },\n            Delete() {\n              send({ type: \"INPUT.DELETE\" });\n            },\n            ArrowLeft() {\n              send({ type: \"INPUT.ARROW_LEFT\" });\n            },\n            ArrowRight() {\n              send({ type: \"INPUT.ARROW_RIGHT\" });\n            },\n            Enter() {\n              send({ type: \"INPUT.ENTER\" });\n            }\n          };\n          const exec = keyMap[(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventKey)(event, {\n            dir: prop(\"dir\"),\n            orientation: \"horizontal\"\n          })];\n          if (exec) {\n            exec(event);\n            event.preventDefault();\n          }\n        },\n        onFocus() {\n          send({ type: \"INPUT.FOCUS\", index });\n        },\n        onBlur(event) {\n          const target = event.relatedTarget;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isHTMLElement)(target) && target.dataset.ownedby === getRootId(scope)) return;\n          send({ type: \"INPUT.BLUR\", index });\n        }\n      });\n    }\n  };\n}\nvar { choose, createMachine } = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.setup)();\nvar machine = createMachine({\n  props({ props: props2 }) {\n    return {\n      placeholder: \"\\u25CB\",\n      otp: false,\n      type: \"numeric\",\n      defaultValue: props2.count ? fill([], props2.count) : [],\n      ...props2,\n      translations: {\n        inputLabel: (index, length) => `pin code ${index + 1} of ${length}`,\n        ...props2.translations\n      }\n    };\n  },\n  initialState() {\n    return \"idle\";\n  },\n  context({ prop, bindable }) {\n    return {\n      value: bindable(() => ({\n        value: prop(\"value\"),\n        defaultValue: prop(\"defaultValue\"),\n        isEqual: _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isEqual,\n        onChange(value) {\n          prop(\"onValueChange\")?.({ value, valueAsString: value.join(\"\") });\n        }\n      })),\n      focusedIndex: bindable(() => ({\n        sync: true,\n        defaultValue: -1\n      })),\n      // TODO: Move this to `props` in next major version\n      count: bindable(() => ({\n        defaultValue: prop(\"count\")\n      }))\n    };\n  },\n  computed: {\n    _value: ({ context }) => fill(context.get(\"value\"), context.get(\"count\")),\n    valueLength: ({ computed }) => computed(\"_value\").length,\n    filledValueLength: ({ computed }) => computed(\"_value\").filter((v) => v?.trim() !== \"\").length,\n    isValueComplete: ({ computed }) => computed(\"valueLength\") === computed(\"filledValueLength\"),\n    valueAsString: ({ computed }) => computed(\"_value\").join(\"\"),\n    focusedValue: ({ computed, context }) => computed(\"_value\")[context.get(\"focusedIndex\")] || \"\"\n  },\n  entry: choose([\n    {\n      guard: \"autoFocus\",\n      actions: [\"setInputCount\", \"setFocusIndexToFirst\"]\n    },\n    { actions: [\"setInputCount\"] }\n  ]),\n  watch({ action, track, context, computed }) {\n    track([() => context.get(\"focusedIndex\")], () => {\n      action([\"focusInput\", \"selectInputIfNeeded\"]);\n    });\n    track([() => context.get(\"value\").join(\",\")], () => {\n      action([\"syncInputElements\", \"dispatchInputEvent\"]);\n    });\n    track([() => computed(\"isValueComplete\")], () => {\n      action([\"invokeOnComplete\", \"blurFocusedInputIfNeeded\"]);\n    });\n  },\n  on: {\n    \"VALUE.SET\": [\n      {\n        guard: \"hasIndex\",\n        actions: [\"setValueAtIndex\"]\n      },\n      { actions: [\"setValue\"] }\n    ],\n    \"VALUE.CLEAR\": {\n      actions: [\"clearValue\", \"setFocusIndexToFirst\"]\n    }\n  },\n  states: {\n    idle: {\n      on: {\n        \"INPUT.FOCUS\": {\n          target: \"focused\",\n          actions: [\"setFocusedIndex\"]\n        }\n      }\n    },\n    focused: {\n      on: {\n        \"INPUT.CHANGE\": {\n          actions: [\"setFocusedValue\", \"syncInputValue\", \"setNextFocusedIndex\"]\n        },\n        \"INPUT.PASTE\": {\n          actions: [\"setPastedValue\", \"setLastValueFocusIndex\"]\n        },\n        \"INPUT.FOCUS\": {\n          actions: [\"setFocusedIndex\"]\n        },\n        \"INPUT.BLUR\": {\n          target: \"idle\",\n          actions: [\"clearFocusedIndex\"]\n        },\n        \"INPUT.DELETE\": {\n          guard: \"hasValue\",\n          actions: [\"clearFocusedValue\"]\n        },\n        \"INPUT.ARROW_LEFT\": {\n          actions: [\"setPrevFocusedIndex\"]\n        },\n        \"INPUT.ARROW_RIGHT\": {\n          actions: [\"setNextFocusedIndex\"]\n        },\n        \"INPUT.BACKSPACE\": [\n          {\n            guard: \"hasValue\",\n            actions: [\"clearFocusedValue\"]\n          },\n          {\n            actions: [\"setPrevFocusedIndex\", \"clearFocusedValue\"]\n          }\n        ],\n        \"INPUT.ENTER\": {\n          guard: \"isValueComplete\",\n          actions: [\"requestFormSubmit\"]\n        },\n        \"VALUE.INVALID\": {\n          actions: [\"invokeOnInvalid\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      autoFocus: ({ prop }) => !!prop(\"autoFocus\"),\n      hasValue: ({ context }) => context.get(\"value\")[context.get(\"focusedIndex\")] !== \"\",\n      isValueComplete: ({ computed }) => computed(\"isValueComplete\"),\n      hasIndex: ({ event }) => event.index !== void 0\n    },\n    actions: {\n      dispatchInputEvent({ computed, scope }) {\n        const inputEl = getHiddenInputEl(scope);\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dispatchInputValueEvent)(inputEl, { value: computed(\"valueAsString\") });\n      },\n      setInputCount({ scope, context, prop }) {\n        if (prop(\"count\")) return;\n        const inputEls = getInputEls(scope);\n        context.set(\"count\", inputEls.length);\n      },\n      focusInput({ context, scope }) {\n        const focusedIndex = context.get(\"focusedIndex\");\n        if (focusedIndex === -1) return;\n        getInputElAtIndex(scope, focusedIndex)?.focus({ preventScroll: true });\n      },\n      selectInputIfNeeded({ context, prop, scope }) {\n        const focusedIndex = context.get(\"focusedIndex\");\n        if (!prop(\"selectOnFocus\") || focusedIndex === -1) return;\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          getInputElAtIndex(scope, focusedIndex)?.select();\n        });\n      },\n      invokeOnComplete({ computed, prop }) {\n        if (!computed(\"isValueComplete\")) return;\n        prop(\"onValueComplete\")?.({\n          value: computed(\"_value\"),\n          valueAsString: computed(\"valueAsString\")\n        });\n      },\n      invokeOnInvalid({ context, event, prop }) {\n        prop(\"onValueInvalid\")?.({\n          value: event.value,\n          index: context.get(\"focusedIndex\")\n        });\n      },\n      clearFocusedIndex({ context }) {\n        context.set(\"focusedIndex\", -1);\n      },\n      setFocusedIndex({ context, event }) {\n        context.set(\"focusedIndex\", event.index);\n      },\n      setValue({ context, event }) {\n        const value = fill(event.value, context.get(\"count\"));\n        context.set(\"value\", value);\n      },\n      setFocusedValue({ context, event, computed, flush }) {\n        const focusedValue = computed(\"focusedValue\");\n        const focusedIndex = context.get(\"focusedIndex\");\n        const value = getNextValue(focusedValue, event.value);\n        flush(() => {\n          context.set(\"value\", (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.setValueAtIndex)(computed(\"_value\"), focusedIndex, value));\n        });\n      },\n      revertInputValue({ context, computed, scope }) {\n        const inputEl = getInputElAtIndex(scope, context.get(\"focusedIndex\"));\n        setInputValue(inputEl, computed(\"focusedValue\"));\n      },\n      syncInputValue({ context, event, scope }) {\n        const value = context.get(\"value\");\n        const inputEl = getInputElAtIndex(scope, event.index);\n        setInputValue(inputEl, value[event.index]);\n      },\n      syncInputElements({ context, scope }) {\n        const inputEls = getInputEls(scope);\n        const value = context.get(\"value\");\n        inputEls.forEach((inputEl, index) => {\n          setInputValue(inputEl, value[index]);\n        });\n      },\n      setPastedValue({ context, event, computed, flush }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          const valueAsString = computed(\"valueAsString\");\n          const focusedIndex = context.get(\"focusedIndex\");\n          const valueLength = computed(\"valueLength\");\n          const filledValueLength = computed(\"filledValueLength\");\n          const startIndex = Math.min(focusedIndex, filledValueLength);\n          const left = startIndex > 0 ? valueAsString.substring(0, focusedIndex) : \"\";\n          const right = event.value.substring(0, valueLength - startIndex);\n          const value = fill(`${left}${right}`.split(\"\"), valueLength);\n          flush(() => {\n            context.set(\"value\", value);\n          });\n        });\n      },\n      setValueAtIndex({ context, event, computed }) {\n        const nextValue = getNextValue(computed(\"focusedValue\"), event.value);\n        context.set(\"value\", (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.setValueAtIndex)(computed(\"_value\"), event.index, nextValue));\n      },\n      clearValue({ context }) {\n        const nextValue = Array.from({ length: context.get(\"count\") }).fill(\"\");\n        context.set(\"value\", nextValue);\n      },\n      clearFocusedValue({ context, computed }) {\n        const focusedIndex = context.get(\"focusedIndex\");\n        if (focusedIndex === -1) return;\n        context.set(\"value\", (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.setValueAtIndex)(computed(\"_value\"), focusedIndex, \"\"));\n      },\n      setFocusIndexToFirst({ context }) {\n        context.set(\"focusedIndex\", 0);\n      },\n      setNextFocusedIndex({ context, computed }) {\n        context.set(\"focusedIndex\", Math.min(context.get(\"focusedIndex\") + 1, computed(\"valueLength\") - 1));\n      },\n      setPrevFocusedIndex({ context }) {\n        context.set(\"focusedIndex\", Math.max(context.get(\"focusedIndex\") - 1, 0));\n      },\n      setLastValueFocusIndex({ context, computed }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          context.set(\"focusedIndex\", Math.min(computed(\"filledValueLength\"), computed(\"valueLength\") - 1));\n        });\n      },\n      blurFocusedInputIfNeeded({ context, prop, scope }) {\n        if (!prop(\"blurOnComplete\")) return;\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          getInputElAtIndex(scope, context.get(\"focusedIndex\"))?.blur();\n        });\n      },\n      requestFormSubmit({ computed, prop, scope }) {\n        if (!prop(\"name\") || !computed(\"isValueComplete\")) return;\n        const inputEl = getHiddenInputEl(scope);\n        inputEl?.form?.requestSubmit();\n      }\n    }\n  }\n});\nfunction getNextValue(current, next) {\n  let nextValue = next;\n  if (current[0] === next[0]) nextValue = next[1];\n  else if (current[0] === next[1]) nextValue = next[0];\n  return nextValue.split(\"\")[nextValue.length - 1];\n}\nfunction fill(value, count) {\n  return Array.from({ length: count }).fill(\"\").map((v, i) => value[i] || v);\n}\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_4__.createProps)()([\n  \"autoFocus\",\n  \"blurOnComplete\",\n  \"count\",\n  \"defaultValue\",\n  \"dir\",\n  \"disabled\",\n  \"form\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"invalid\",\n  \"mask\",\n  \"name\",\n  \"onValueChange\",\n  \"onValueComplete\",\n  \"onValueInvalid\",\n  \"otp\",\n  \"pattern\",\n  \"placeholder\",\n  \"readOnly\",\n  \"required\",\n  \"selectOnFocus\",\n  \"translations\",\n  \"type\",\n  \"value\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/pin-input/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/popover/dist/index.mjs":
/*!*****************************************************!*\
  !*** ./node_modules/@zag-js/popover/dist/index.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_popper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/popper */ \"(ssr)/./node_modules/@zag-js/popper/dist/index.mjs\");\n/* harmony import */ var _zag_js_aria_hidden__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/aria-hidden */ \"(ssr)/./node_modules/@zag-js/aria-hidden/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_dismissable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/dismissable */ \"(ssr)/./node_modules/@zag-js/dismissable/dist/index.mjs\");\n/* harmony import */ var _zag_js_focus_trap__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @zag-js/focus-trap */ \"(ssr)/./node_modules/@zag-js/focus-trap/dist/index.mjs\");\n/* harmony import */ var _zag_js_remove_scroll__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/remove-scroll */ \"(ssr)/./node_modules/@zag-js/remove-scroll/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n\n\n\n\n\n\n\n\n// src/popover.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"popover\").parts(\n  \"arrow\",\n  \"arrowTip\",\n  \"anchor\",\n  \"trigger\",\n  \"indicator\",\n  \"positioner\",\n  \"content\",\n  \"title\",\n  \"description\",\n  \"closeTrigger\"\n);\nvar parts = anatomy.build();\nvar getAnchorId = (scope) => scope.ids?.anchor ?? `popover:${scope.id}:anchor`;\nvar getTriggerId = (scope) => scope.ids?.trigger ?? `popover:${scope.id}:trigger`;\nvar getContentId = (scope) => scope.ids?.content ?? `popover:${scope.id}:content`;\nvar getPositionerId = (scope) => scope.ids?.positioner ?? `popover:${scope.id}:popper`;\nvar getArrowId = (scope) => scope.ids?.arrow ?? `popover:${scope.id}:arrow`;\nvar getTitleId = (scope) => scope.ids?.title ?? `popover:${scope.id}:title`;\nvar getDescriptionId = (scope) => scope.ids?.description ?? `popover:${scope.id}:desc`;\nvar getCloseTriggerId = (scope) => scope.ids?.closeTrigger ?? `popover:${scope.id}:close`;\nvar getAnchorEl = (scope) => scope.getById(getAnchorId(scope));\nvar getTriggerEl = (scope) => scope.getById(getTriggerId(scope));\nvar getContentEl = (scope) => scope.getById(getContentId(scope));\nvar getPositionerEl = (scope) => scope.getById(getPositionerId(scope));\nvar getTitleEl = (scope) => scope.getById(getTitleId(scope));\nvar getDescriptionEl = (scope) => scope.getById(getDescriptionId(scope));\n\n// src/popover.connect.ts\nfunction connect(service, normalize) {\n  const { state, context, send, computed, prop, scope } = service;\n  const open = state.matches(\"open\");\n  const currentPlacement = context.get(\"currentPlacement\");\n  const portalled = computed(\"currentPortalled\");\n  const rendered = context.get(\"renderedElements\");\n  const popperStyles = (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_1__.getPlacementStyles)({\n    ...prop(\"positioning\"),\n    placement: currentPlacement\n  });\n  return {\n    portalled,\n    open,\n    setOpen(nextOpen) {\n      const open2 = state.matches(\"open\");\n      if (open2 === nextOpen) return;\n      send({ type: nextOpen ? \"OPEN\" : \"CLOSE\" });\n    },\n    reposition(options = {}) {\n      send({ type: \"POSITIONING.SET\", options });\n    },\n    getArrowProps() {\n      return normalize.element({\n        id: getArrowId(scope),\n        ...parts.arrow.attrs,\n        dir: prop(\"dir\"),\n        style: popperStyles.arrow\n      });\n    },\n    getArrowTipProps() {\n      return normalize.element({\n        ...parts.arrowTip.attrs,\n        dir: prop(\"dir\"),\n        style: popperStyles.arrowTip\n      });\n    },\n    getAnchorProps() {\n      return normalize.element({\n        ...parts.anchor.attrs,\n        dir: prop(\"dir\"),\n        id: getAnchorId(scope)\n      });\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...parts.trigger.attrs,\n        dir: prop(\"dir\"),\n        type: \"button\",\n        \"data-placement\": currentPlacement,\n        id: getTriggerId(scope),\n        \"aria-haspopup\": \"dialog\",\n        \"aria-expanded\": open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-controls\": getContentId(scope),\n        onPointerDown(event) {\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.isSafari)()) {\n            event.currentTarget.focus();\n          }\n        },\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send({ type: \"TOGGLE\" });\n        },\n        onBlur(event) {\n          send({ type: \"TRIGGER_BLUR\", target: event.relatedTarget });\n        }\n      });\n    },\n    getIndicatorProps() {\n      return normalize.element({\n        ...parts.indicator.attrs,\n        dir: prop(\"dir\"),\n        \"data-state\": open ? \"open\" : \"closed\"\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        id: getPositionerId(scope),\n        ...parts.positioner.attrs,\n        dir: prop(\"dir\"),\n        style: popperStyles.floating\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        dir: prop(\"dir\"),\n        id: getContentId(scope),\n        tabIndex: -1,\n        role: \"dialog\",\n        hidden: !open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-expanded\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(open),\n        \"aria-labelledby\": rendered.title ? getTitleId(scope) : void 0,\n        \"aria-describedby\": rendered.description ? getDescriptionId(scope) : void 0,\n        \"data-placement\": currentPlacement\n      });\n    },\n    getTitleProps() {\n      return normalize.element({\n        ...parts.title.attrs,\n        id: getTitleId(scope),\n        dir: prop(\"dir\")\n      });\n    },\n    getDescriptionProps() {\n      return normalize.element({\n        ...parts.description.attrs,\n        id: getDescriptionId(scope),\n        dir: prop(\"dir\")\n      });\n    },\n    getCloseTriggerProps() {\n      return normalize.button({\n        ...parts.closeTrigger.attrs,\n        dir: prop(\"dir\"),\n        id: getCloseTriggerId(scope),\n        type: \"button\",\n        \"aria-label\": \"close\",\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          event.stopPropagation();\n          send({ type: \"CLOSE\" });\n        }\n      });\n    }\n  };\n}\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)({\n  props({ props: props2 }) {\n    return {\n      closeOnInteractOutside: true,\n      closeOnEscape: true,\n      autoFocus: true,\n      modal: false,\n      portalled: true,\n      ...props2,\n      positioning: {\n        placement: \"bottom\",\n        ...props2.positioning\n      }\n    };\n  },\n  initialState({ prop }) {\n    const open = prop(\"open\") || prop(\"defaultOpen\");\n    return open ? \"open\" : \"closed\";\n  },\n  context({ bindable }) {\n    return {\n      currentPlacement: bindable(() => ({\n        defaultValue: void 0\n      })),\n      renderedElements: bindable(() => ({\n        defaultValue: { title: true, description: true }\n      }))\n    };\n  },\n  computed: {\n    currentPortalled: ({ prop }) => !!prop(\"modal\") || !!prop(\"portalled\")\n  },\n  watch({ track, prop, action }) {\n    track([() => prop(\"open\")], () => {\n      action([\"toggleVisibility\"]);\n    });\n  },\n  entry: [\"checkRenderedElements\"],\n  states: {\n    closed: {\n      on: {\n        \"CONTROLLED.OPEN\": {\n          target: \"open\",\n          actions: [\"setInitialFocus\"]\n        },\n        TOGGLE: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"invokeOnOpen\", \"setInitialFocus\"]\n          }\n        ],\n        OPEN: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"invokeOnOpen\", \"setInitialFocus\"]\n          }\n        ]\n      }\n    },\n    open: {\n      effects: [\n        \"trapFocus\",\n        \"preventScroll\",\n        \"hideContentBelow\",\n        \"trackPositioning\",\n        \"trackDismissableElement\",\n        \"proxyTabFocus\"\n      ],\n      on: {\n        \"CONTROLLED.CLOSE\": {\n          target: \"closed\",\n          actions: [\"setFinalFocus\"]\n        },\n        CLOSE: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\", \"setFinalFocus\"]\n          }\n        ],\n        TOGGLE: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        \"POSITIONING.SET\": {\n          actions: [\"reposition\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      isOpenControlled: ({ prop }) => prop(\"open\") != void 0\n    },\n    effects: {\n      trackPositioning({ context, prop, scope }) {\n        context.set(\"currentPlacement\", prop(\"positioning\").placement);\n        const anchorEl = getAnchorEl(scope) ?? getTriggerEl(scope);\n        const getPositionerEl2 = () => getPositionerEl(scope);\n        return (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_1__.getPlacement)(anchorEl, getPositionerEl2, {\n          ...prop(\"positioning\"),\n          defer: true,\n          onComplete(data) {\n            context.set(\"currentPlacement\", data.placement);\n          }\n        });\n      },\n      trackDismissableElement({ send, prop, scope }) {\n        const getContentEl2 = () => getContentEl(scope);\n        let restoreFocus = true;\n        return (0,_zag_js_dismissable__WEBPACK_IMPORTED_MODULE_4__.trackDismissableElement)(getContentEl2, {\n          pointerBlocking: prop(\"modal\"),\n          exclude: getTriggerEl(scope),\n          defer: true,\n          onEscapeKeyDown(event) {\n            prop(\"onEscapeKeyDown\")?.(event);\n            if (prop(\"closeOnEscape\")) return;\n            event.preventDefault();\n          },\n          onInteractOutside(event) {\n            prop(\"onInteractOutside\")?.(event);\n            if (event.defaultPrevented) return;\n            restoreFocus = !(event.detail.focusable || event.detail.contextmenu);\n            if (!prop(\"closeOnInteractOutside\")) {\n              event.preventDefault();\n            }\n          },\n          onPointerDownOutside: prop(\"onPointerDownOutside\"),\n          onFocusOutside: prop(\"onFocusOutside\"),\n          persistentElements: prop(\"persistentElements\"),\n          onDismiss() {\n            send({ type: \"CLOSE\", src: \"interact-outside\", restoreFocus });\n          }\n        });\n      },\n      proxyTabFocus({ prop, scope }) {\n        if (prop(\"modal\") || !prop(\"portalled\")) return;\n        const getContentEl2 = () => getContentEl(scope);\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.proxyTabFocus)(getContentEl2, {\n          triggerElement: getTriggerEl(scope),\n          defer: true,\n          onFocus(el) {\n            el.focus({ preventScroll: true });\n          }\n        });\n      },\n      hideContentBelow({ prop, scope }) {\n        if (!prop(\"modal\")) return;\n        const getElements = () => [getContentEl(scope), getTriggerEl(scope)];\n        return (0,_zag_js_aria_hidden__WEBPACK_IMPORTED_MODULE_5__.ariaHidden)(getElements, { defer: true });\n      },\n      preventScroll({ prop, scope }) {\n        if (!prop(\"modal\")) return;\n        return (0,_zag_js_remove_scroll__WEBPACK_IMPORTED_MODULE_6__.preventBodyScroll)(scope.getDoc());\n      },\n      trapFocus({ prop, scope }) {\n        if (!prop(\"modal\")) return;\n        const contentEl = () => getContentEl(scope);\n        return (0,_zag_js_focus_trap__WEBPACK_IMPORTED_MODULE_7__.trapFocus)(contentEl, {\n          initialFocus: () => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.getInitialFocus)({\n            root: getContentEl(scope),\n            getInitialEl: prop(\"initialFocusEl\"),\n            enabled: prop(\"autoFocus\")\n          })\n        });\n      }\n    },\n    actions: {\n      reposition({ event, prop, scope, context }) {\n        const anchorEl = getAnchorEl(scope) ?? getTriggerEl(scope);\n        const getPositionerEl2 = () => getPositionerEl(scope);\n        (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_1__.getPlacement)(anchorEl, getPositionerEl2, {\n          ...prop(\"positioning\"),\n          ...event.options,\n          defer: true,\n          listeners: false,\n          onComplete(data) {\n            context.set(\"currentPlacement\", data.placement);\n          }\n        });\n      },\n      checkRenderedElements({ context, scope }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.raf)(() => {\n          Object.assign(context.get(\"renderedElements\"), {\n            title: !!getTitleEl(scope),\n            description: !!getDescriptionEl(scope)\n          });\n        });\n      },\n      setInitialFocus({ prop, scope }) {\n        if (prop(\"modal\")) return;\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.raf)(() => {\n          const element = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.getInitialFocus)({\n            root: getContentEl(scope),\n            getInitialEl: prop(\"initialFocusEl\"),\n            enabled: prop(\"autoFocus\")\n          });\n          element?.focus({ preventScroll: true });\n        });\n      },\n      setFinalFocus({ event, scope }) {\n        const restoreFocus = event.restoreFocus ?? event.previousEvent?.restoreFocus;\n        if (restoreFocus != null && !restoreFocus) return;\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.raf)(() => {\n          const element = getTriggerEl(scope);\n          element?.focus({ preventScroll: true });\n        });\n      },\n      invokeOnOpen({ prop }) {\n        prop(\"onOpenChange\")?.({ open: true });\n      },\n      invokeOnClose({ prop }) {\n        prop(\"onOpenChange\")?.({ open: false });\n      },\n      toggleVisibility({ event, send, prop }) {\n        send({ type: prop(\"open\") ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\", previousEvent: event });\n      }\n    }\n  }\n});\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_8__.createProps)()([\n  \"autoFocus\",\n  \"closeOnEscape\",\n  \"closeOnInteractOutside\",\n  \"dir\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"initialFocusEl\",\n  \"modal\",\n  \"onEscapeKeyDown\",\n  \"onFocusOutside\",\n  \"onInteractOutside\",\n  \"onOpenChange\",\n  \"onPointerDownOutside\",\n  \"defaultOpen\",\n  \"open\",\n  \"persistentElements\",\n  \"portalled\",\n  \"positioning\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_9__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/popover/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/popper/dist/index.mjs":
/*!****************************************************!*\
  !*** ./node_modules/@zag-js/popper/dist/index.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getPlacement: () => (/* binding */ getPlacement),\n/* harmony export */   getPlacementSide: () => (/* binding */ getPlacementSide),\n/* harmony export */   getPlacementStyles: () => (/* binding */ getPlacementStyles),\n/* harmony export */   isValidPlacement: () => (/* binding */ isValidPlacement)\n/* harmony export */ });\n/* harmony import */ var _floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @floating-ui/dom */ \"(ssr)/./node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n\n// src/get-placement.ts\nfunction createDOMRect(x = 0, y = 0, width = 0, height = 0) {\n  if (typeof DOMRect === \"function\") {\n    return new DOMRect(x, y, width, height);\n  }\n  const rect = {\n    x,\n    y,\n    width,\n    height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x\n  };\n  return { ...rect, toJSON: () => rect };\n}\nfunction getDOMRect(anchorRect) {\n  if (!anchorRect) return createDOMRect();\n  const { x, y, width, height } = anchorRect;\n  return createDOMRect(x, y, width, height);\n}\nfunction getAnchorElement(anchorElement, getAnchorRect) {\n  return {\n    contextElement: (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(anchorElement) ? anchorElement : void 0,\n    getBoundingClientRect: () => {\n      const anchor = anchorElement;\n      const anchorRect = getAnchorRect?.(anchor);\n      if (anchorRect || !anchor) {\n        return getDOMRect(anchorRect);\n      }\n      return anchor.getBoundingClientRect();\n    }\n  };\n}\n\n// src/middleware.ts\nvar toVar = (value) => ({ variable: value, reference: `var(${value})` });\nvar cssVars = {\n  arrowSize: toVar(\"--arrow-size\"),\n  arrowSizeHalf: toVar(\"--arrow-size-half\"),\n  arrowBg: toVar(\"--arrow-background\"),\n  transformOrigin: toVar(\"--transform-origin\"),\n  arrowOffset: toVar(\"--arrow-offset\")\n};\nvar getTransformOrigin = (arrow2) => ({\n  top: \"bottom center\",\n  \"top-start\": arrow2 ? `${arrow2.x}px bottom` : \"left bottom\",\n  \"top-end\": arrow2 ? `${arrow2.x}px bottom` : \"right bottom\",\n  bottom: \"top center\",\n  \"bottom-start\": arrow2 ? `${arrow2.x}px top` : \"top left\",\n  \"bottom-end\": arrow2 ? `${arrow2.x}px top` : \"top right\",\n  left: \"right center\",\n  \"left-start\": arrow2 ? `right ${arrow2.y}px` : \"right top\",\n  \"left-end\": arrow2 ? `right ${arrow2.y}px` : \"right bottom\",\n  right: \"left center\",\n  \"right-start\": arrow2 ? `left ${arrow2.y}px` : \"left top\",\n  \"right-end\": arrow2 ? `left ${arrow2.y}px` : \"left bottom\"\n});\nvar transformOriginMiddleware = {\n  name: \"transformOrigin\",\n  fn({ placement, elements, middlewareData }) {\n    const { arrow: arrow2 } = middlewareData;\n    const transformOrigin = getTransformOrigin(arrow2)[placement];\n    const { floating } = elements;\n    floating.style.setProperty(cssVars.transformOrigin.variable, transformOrigin);\n    return {\n      data: { transformOrigin }\n    };\n  }\n};\nvar rectMiddleware = {\n  name: \"rects\",\n  fn({ rects }) {\n    return {\n      data: rects\n    };\n  }\n};\nvar shiftArrowMiddleware = (arrowEl) => {\n  if (!arrowEl) return;\n  return {\n    name: \"shiftArrow\",\n    fn({ placement, middlewareData }) {\n      if (!middlewareData.arrow) return {};\n      const { x, y } = middlewareData.arrow;\n      const dir = placement.split(\"-\")[0];\n      Object.assign(arrowEl.style, {\n        left: x != null ? `${x}px` : \"\",\n        top: y != null ? `${y}px` : \"\",\n        [dir]: `calc(100% + ${cssVars.arrowOffset.reference})`\n      });\n      return {};\n    }\n  };\n};\n\n// src/placement.ts\nfunction isValidPlacement(v) {\n  return /^(?:top|bottom|left|right)(?:-(?:start|end))?$/.test(v);\n}\nfunction getPlacementDetails(placement) {\n  const [side, align] = placement.split(\"-\");\n  return { side, align, hasAlign: align != null };\n}\nfunction getPlacementSide(placement) {\n  return placement.split(\"-\")[0];\n}\n\n// src/get-placement.ts\nvar defaultOptions = {\n  strategy: \"absolute\",\n  placement: \"bottom\",\n  listeners: true,\n  gutter: 8,\n  flip: true,\n  slide: true,\n  overlap: false,\n  sameWidth: false,\n  fitViewport: false,\n  overflowPadding: 8,\n  arrowPadding: 4\n};\nfunction roundByDpr(win, value) {\n  const dpr = win.devicePixelRatio || 1;\n  return Math.round(value * dpr) / dpr;\n}\nfunction getBoundaryMiddleware(opts) {\n  return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.runIfFn)(opts.boundary);\n}\nfunction getArrowMiddleware(arrowElement, opts) {\n  if (!arrowElement) return;\n  return (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__.arrow)({\n    element: arrowElement,\n    padding: opts.arrowPadding\n  });\n}\nfunction getOffsetMiddleware(arrowElement, opts) {\n  if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isNull)(opts.offset ?? opts.gutter)) return;\n  return (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__.offset)(({ placement }) => {\n    const arrowOffset = (arrowElement?.clientHeight || 0) / 2;\n    const gutter = opts.offset?.mainAxis ?? opts.gutter;\n    const mainAxis = typeof gutter === \"number\" ? gutter + arrowOffset : gutter ?? arrowOffset;\n    const { hasAlign } = getPlacementDetails(placement);\n    const shift2 = !hasAlign ? opts.shift : void 0;\n    const crossAxis = opts.offset?.crossAxis ?? shift2;\n    return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.compact)({\n      crossAxis,\n      mainAxis,\n      alignmentAxis: opts.shift\n    });\n  });\n}\nfunction getFlipMiddleware(opts) {\n  if (!opts.flip) return;\n  return (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__.flip)({\n    boundary: getBoundaryMiddleware(opts),\n    padding: opts.overflowPadding,\n    fallbackPlacements: opts.flip === true ? void 0 : opts.flip\n  });\n}\nfunction getShiftMiddleware(opts) {\n  if (!opts.slide && !opts.overlap) return;\n  return (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__.shift)({\n    boundary: getBoundaryMiddleware(opts),\n    mainAxis: opts.slide,\n    crossAxis: opts.overlap,\n    padding: opts.overflowPadding,\n    limiter: (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__.limitShift)()\n  });\n}\nfunction getSizeMiddleware(opts) {\n  return (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__.size)({\n    padding: opts.overflowPadding,\n    apply({ elements, rects, availableHeight, availableWidth }) {\n      const floating = elements.floating;\n      const referenceWidth = Math.round(rects.reference.width);\n      availableWidth = Math.floor(availableWidth);\n      availableHeight = Math.floor(availableHeight);\n      floating.style.setProperty(\"--reference-width\", `${referenceWidth}px`);\n      floating.style.setProperty(\"--available-width\", `${availableWidth}px`);\n      floating.style.setProperty(\"--available-height\", `${availableHeight}px`);\n    }\n  });\n}\nfunction hideWhenDetachedMiddleware(opts) {\n  if (!opts.hideWhenDetached) return;\n  return (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__.hide)({ strategy: \"referenceHidden\", boundary: opts.boundary?.() ?? \"clippingAncestors\" });\n}\nfunction getAutoUpdateOptions(opts) {\n  if (!opts) return {};\n  if (opts === true) {\n    return { ancestorResize: true, ancestorScroll: true, elementResize: true, layoutShift: true };\n  }\n  return opts;\n}\nfunction getPlacementImpl(referenceOrVirtual, floating, opts = {}) {\n  const reference = getAnchorElement(referenceOrVirtual, opts.getAnchorRect);\n  if (!floating || !reference) return;\n  const options = Object.assign({}, defaultOptions, opts);\n  const arrowEl = floating.querySelector(\"[data-part=arrow]\");\n  const middleware = [\n    getOffsetMiddleware(arrowEl, options),\n    getFlipMiddleware(options),\n    getShiftMiddleware(options),\n    getArrowMiddleware(arrowEl, options),\n    shiftArrowMiddleware(arrowEl),\n    transformOriginMiddleware,\n    getSizeMiddleware(options),\n    hideWhenDetachedMiddleware(options),\n    rectMiddleware\n  ];\n  const { placement, strategy, onComplete, onPositioned } = options;\n  const updatePosition = async () => {\n    if (!reference || !floating) return;\n    const pos = await (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__.computePosition)(reference, floating, {\n      placement,\n      middleware,\n      strategy\n    });\n    onComplete?.(pos);\n    onPositioned?.({ placed: true });\n    const win = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getWindow)(floating);\n    const x = roundByDpr(win, pos.x);\n    const y = roundByDpr(win, pos.y);\n    floating.style.setProperty(\"--x\", `${x}px`);\n    floating.style.setProperty(\"--y\", `${y}px`);\n    if (options.hideWhenDetached) {\n      const isHidden = pos.middlewareData.hide?.referenceHidden;\n      if (isHidden) {\n        floating.style.setProperty(\"visibility\", \"hidden\");\n        floating.style.setProperty(\"pointer-events\", \"none\");\n      } else {\n        floating.style.removeProperty(\"visibility\");\n        floating.style.removeProperty(\"pointer-events\");\n      }\n    }\n    const contentEl = floating.firstElementChild;\n    if (contentEl) {\n      const styles = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getComputedStyle)(contentEl);\n      floating.style.setProperty(\"--z-index\", styles.zIndex);\n    }\n  };\n  const update = async () => {\n    if (opts.updatePosition) {\n      await opts.updatePosition({ updatePosition });\n      onPositioned?.({ placed: true });\n    } else {\n      await updatePosition();\n    }\n  };\n  const autoUpdateOptions = getAutoUpdateOptions(options.listeners);\n  const cancelAutoUpdate = options.listeners ? (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__.autoUpdate)(reference, floating, update, autoUpdateOptions) : _zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.noop;\n  update();\n  return () => {\n    cancelAutoUpdate?.();\n    onPositioned?.({ placed: false });\n  };\n}\nfunction getPlacement(referenceOrFn, floatingOrFn, opts = {}) {\n  const { defer, ...options } = opts;\n  const func = defer ? _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.raf : (v) => v();\n  const cleanups = [];\n  cleanups.push(\n    func(() => {\n      const reference = typeof referenceOrFn === \"function\" ? referenceOrFn() : referenceOrFn;\n      const floating = typeof floatingOrFn === \"function\" ? floatingOrFn() : floatingOrFn;\n      cleanups.push(getPlacementImpl(reference, floating, options));\n    })\n  );\n  return () => {\n    cleanups.forEach((fn) => fn?.());\n  };\n}\n\n// src/get-styles.ts\nvar ARROW_FLOATING_STYLE = {\n  bottom: \"rotate(45deg)\",\n  left: \"rotate(135deg)\",\n  top: \"rotate(225deg)\",\n  right: \"rotate(315deg)\"\n};\nfunction getPlacementStyles(options = {}) {\n  const { placement, sameWidth, fitViewport, strategy = \"absolute\" } = options;\n  return {\n    arrow: {\n      position: \"absolute\",\n      width: cssVars.arrowSize.reference,\n      height: cssVars.arrowSize.reference,\n      [cssVars.arrowSizeHalf.variable]: `calc(${cssVars.arrowSize.reference} / 2)`,\n      [cssVars.arrowOffset.variable]: `calc(${cssVars.arrowSizeHalf.reference} * -1)`\n    },\n    arrowTip: {\n      // @ts-expect-error - Fix this\n      transform: placement ? ARROW_FLOATING_STYLE[placement.split(\"-\")[0]] : void 0,\n      background: cssVars.arrowBg.reference,\n      top: \"0\",\n      left: \"0\",\n      width: \"100%\",\n      height: \"100%\",\n      position: \"absolute\",\n      zIndex: \"inherit\"\n    },\n    floating: {\n      position: strategy,\n      isolation: \"isolate\",\n      minWidth: sameWidth ? void 0 : \"max-content\",\n      width: sameWidth ? \"var(--reference-width)\" : void 0,\n      maxWidth: fitViewport ? \"var(--available-width)\" : void 0,\n      maxHeight: fitViewport ? \"var(--available-height)\" : void 0,\n      pointerEvents: !placement ? \"none\" : void 0,\n      top: \"0px\",\n      left: \"0px\",\n      // move off-screen if placement is not defined\n      transform: placement ? \"translate3d(var(--x), var(--y), 0)\" : \"translate3d(0, -100vh, 0)\",\n      zIndex: \"var(--z-index)\"\n    }\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/popper/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/progress/dist/index.mjs":
/*!******************************************************!*\
  !*** ./node_modules/@zag-js/progress/dist/index.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n// src/progress.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"progress\").parts(\n  \"root\",\n  \"label\",\n  \"track\",\n  \"range\",\n  \"valueText\",\n  \"view\",\n  \"circle\",\n  \"circleTrack\",\n  \"circleRange\"\n);\nvar parts = anatomy.build();\n\n// src/progress.dom.ts\nvar getRootId = (ctx) => ctx.ids?.root ?? `progress-${ctx.id}`;\nvar getTrackId = (ctx) => ctx.ids?.track ?? `progress-${ctx.id}-track`;\nvar getLabelId = (ctx) => ctx.ids?.label ?? `progress-${ctx.id}-label`;\nvar getCircleId = (ctx) => ctx.ids?.circle ?? `progress-${ctx.id}-circle`;\n\n// src/progress.connect.ts\nfunction connect(service, normalize) {\n  const { context, computed, prop, send, scope } = service;\n  const percent = computed(\"percent\");\n  const percentAsString = computed(\"isIndeterminate\") ? \"\" : computed(\"formatter\").format(computed(\"percent\") / 100);\n  const max = prop(\"max\");\n  const min = prop(\"min\");\n  const orientation = prop(\"orientation\");\n  const translations = prop(\"translations\");\n  const indeterminate = computed(\"isIndeterminate\");\n  const value = context.get(\"value\");\n  const valueAsString = translations?.value({ value, max, percent, min }) ?? \"\";\n  const progressState = getProgressState(value, max);\n  const progressbarProps = {\n    role: \"progressbar\",\n    \"aria-label\": valueAsString,\n    \"data-max\": max,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    \"aria-valuenow\": value ?? void 0,\n    \"data-orientation\": orientation,\n    \"data-state\": progressState\n  };\n  const circleProps2 = getCircleProps(service);\n  return {\n    value,\n    valueAsString,\n    min,\n    max,\n    percent,\n    percentAsString,\n    indeterminate,\n    setValue(value2) {\n      send({ type: \"VALUE.SET\", value: value2 });\n    },\n    setToMax() {\n      send({ type: \"VALUE.SET\", value: max });\n    },\n    setToMin() {\n      send({ type: \"VALUE.SET\", value: min });\n    },\n    getRootProps() {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        ...parts.root.attrs,\n        id: getRootId(scope),\n        \"data-max\": max,\n        \"data-value\": value ?? void 0,\n        \"data-state\": progressState,\n        \"data-orientation\": orientation,\n        style: {\n          \"--percent\": indeterminate ? void 0 : percent\n        }\n      });\n    },\n    getLabelProps() {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        id: getLabelId(scope),\n        ...parts.label.attrs,\n        \"data-orientation\": orientation\n      });\n    },\n    getValueTextProps() {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        \"aria-live\": \"polite\",\n        ...parts.valueText.attrs\n      });\n    },\n    getTrackProps() {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        id: getTrackId(scope),\n        ...parts.track.attrs,\n        ...progressbarProps\n      });\n    },\n    getRangeProps() {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        ...parts.range.attrs,\n        \"data-orientation\": orientation,\n        \"data-state\": progressState,\n        style: {\n          [computed(\"isHorizontal\") ? \"width\" : \"height\"]: indeterminate ? void 0 : `${percent}%`\n        }\n      });\n    },\n    getCircleProps() {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        id: getCircleId(scope),\n        ...parts.circle.attrs,\n        ...progressbarProps,\n        ...circleProps2.root\n      });\n    },\n    getCircleTrackProps() {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        \"data-orientation\": orientation,\n        ...parts.circleTrack.attrs,\n        ...circleProps2.track\n      });\n    },\n    getCircleRangeProps() {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        ...parts.circleRange.attrs,\n        ...circleProps2.range,\n        \"data-state\": progressState\n      });\n    },\n    getViewProps(props2) {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        ...parts.view.attrs,\n        \"data-state\": props2.state,\n        hidden: props2.state !== progressState\n      });\n    }\n  };\n}\nfunction getProgressState(value, maxValue) {\n  return value == null ? \"indeterminate\" : value === maxValue ? \"complete\" : \"loading\";\n}\nvar circleProps = {\n  style: {\n    \"--radius\": \"calc(var(--size) / 2 - var(--thickness) / 2)\",\n    cx: \"calc(var(--size) / 2)\",\n    cy: \"calc(var(--size) / 2)\",\n    r: \"var(--radius)\",\n    fill: \"transparent\",\n    strokeWidth: \"var(--thickness)\"\n  }\n};\nvar rootProps = {\n  style: {\n    width: \"var(--size)\",\n    height: \"var(--size)\"\n  }\n};\nfunction getCircleProps(service) {\n  const { context, computed } = service;\n  return {\n    root: rootProps,\n    track: circleProps,\n    range: {\n      opacity: context.get(\"value\") === 0 ? 0 : void 0,\n      style: {\n        ...circleProps.style,\n        \"--percent\": computed(\"percent\"),\n        \"--circumference\": `calc(2 * 3.14159 * var(--radius))`,\n        \"--offset\": `calc(var(--circumference) * (100 - var(--percent)) / 100)`,\n        strokeDashoffset: `calc(var(--circumference) * ((100 - var(--percent)) / 100))`,\n        strokeDasharray: computed(\"isIndeterminate\") ? void 0 : `var(--circumference)`,\n        transformOrigin: \"center\",\n        transform: \"rotate(-90deg)\"\n      }\n    }\n  };\n}\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_1__.createMachine)({\n  props({ props: props2 }) {\n    const min = props2.min ?? 0;\n    const max = props2.max ?? 100;\n    return {\n      ...props2,\n      max,\n      min,\n      defaultValue: props2.defaultValue ?? midValue(min, max),\n      orientation: \"horizontal\",\n      formatOptions: {\n        style: \"percent\",\n        ...props2.formatOptions\n      },\n      translations: {\n        value: ({ percent }) => percent === -1 ? \"loading...\" : `${percent} percent`,\n        ...props2.translations\n      }\n    };\n  },\n  initialState() {\n    return \"idle\";\n  },\n  entry: [\"validateContext\"],\n  context({ bindable, prop }) {\n    return {\n      value: bindable(() => ({\n        defaultValue: prop(\"defaultValue\"),\n        value: prop(\"value\"),\n        onChange(value) {\n          prop(\"onValueChange\")?.({ value });\n        }\n      }))\n    };\n  },\n  computed: {\n    isIndeterminate: ({ context }) => context.get(\"value\") === null,\n    percent({ context, prop }) {\n      const value = context.get(\"value\");\n      if (!(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isNumber)(value)) return -1;\n      return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.getValuePercent)(value, prop(\"min\"), prop(\"max\")) * 100;\n    },\n    formatter: (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_1__.memo)(\n      ({ prop }) => [prop(\"locale\"), prop(\"formatOptions\")],\n      (locale, formatOptions) => new Intl.NumberFormat(locale, formatOptions)\n    ),\n    isHorizontal: ({ prop }) => prop(\"orientation\") === \"horizontal\"\n  },\n  states: {\n    idle: {\n      on: {\n        \"VALUE.SET\": {\n          actions: [\"setValue\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    actions: {\n      setValue: ({ context, event, prop }) => {\n        const value = event.value === null ? null : Math.max(0, Math.min(event.value, prop(\"max\")));\n        context.set(\"value\", value);\n      },\n      validateContext: ({ context, prop }) => {\n        const max = prop(\"max\");\n        const min = prop(\"min\");\n        const value = context.get(\"value\");\n        if (value == null) return;\n        if (!isValidNumber(max)) {\n          throw new Error(`[progress] The max value passed \\`${max}\\` is not a valid number`);\n        }\n        if (!isValidMax(value, max)) {\n          throw new Error(`[progress] The value passed \\`${value}\\` exceeds the max value \\`${max}\\``);\n        }\n        if (!isValidMin(value, min)) {\n          throw new Error(`[progress] The value passed \\`${value}\\` exceeds the min value \\`${min}\\``);\n        }\n      }\n    }\n  }\n});\nvar isValidNumber = (max) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isNumber)(max) && !isNaN(max);\nvar isValidMax = (value, max) => isValidNumber(value) && value <= max;\nvar isValidMin = (value, min) => isValidNumber(value) && value >= min;\nvar midValue = (min, max) => min + (max - min) / 2;\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_3__.createProps)()([\n  \"dir\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"max\",\n  \"min\",\n  \"orientation\",\n  \"translations\",\n  \"value\",\n  \"onValueChange\",\n  \"defaultValue\",\n  \"formatOptions\",\n  \"locale\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/progress/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/qr-code/dist/index.mjs":
/*!*****************************************************!*\
  !*** ./node_modules/@zag-js/qr-code/dist/index.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var uqr__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uqr */ \"(ssr)/./node_modules/uqr/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n\n\n\n\n// src/qr-code.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"qr-code\").parts(\"root\", \"frame\", \"pattern\", \"overlay\", \"downloadTrigger\");\nvar parts = anatomy.build();\n\n// src/qr-code.dom.ts\nvar getRootId = (scope) => scope.ids?.root ?? `qrcode:${scope.id}:root`;\nvar getFrameId = (scope) => scope.ids?.frame ?? `qrcode:${scope.id}:frame`;\nvar getFrameEl = (scope) => scope.getById(getFrameId(scope));\n\n// src/qr-code.connect.ts\nfunction connect(service, normalize) {\n  const { context, computed, send, scope, prop } = service;\n  const encoded = computed(\"encoded\");\n  const pixelSize = prop(\"pixelSize\");\n  const height = encoded.size * pixelSize;\n  const width = encoded.size * pixelSize;\n  const paths = [];\n  for (let row = 0; row < encoded.size; row++) {\n    for (let col = 0; col < encoded.size; col++) {\n      const x = col * pixelSize;\n      const y = row * pixelSize;\n      if (encoded.data[row][col]) {\n        paths.push(`M${x},${y}h${pixelSize}v${pixelSize}h-${pixelSize}z`);\n      }\n    }\n  }\n  return {\n    value: context.get(\"value\"),\n    setValue(value) {\n      send({ type: \"VALUE.SET\", value });\n    },\n    getDataUrl(type, quality) {\n      const svgEl = getFrameEl(scope);\n      return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getDataUrl)(svgEl, { type, quality });\n    },\n    getRootProps() {\n      return normalize.element({\n        id: getRootId(scope),\n        ...parts.root.attrs,\n        style: {\n          \"--qrcode-pixel-size\": `${pixelSize}px`,\n          \"--qrcode-width\": `${width}px`,\n          \"--qrcode-height\": `${height}px`,\n          position: \"relative\"\n        }\n      });\n    },\n    getFrameProps() {\n      return normalize.svg({\n        id: getFrameId(scope),\n        ...parts.frame.attrs,\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: `0 0 ${width} ${height}`\n      });\n    },\n    getPatternProps() {\n      return normalize.path({\n        d: paths.join(\"\"),\n        ...parts.pattern.attrs\n      });\n    },\n    getOverlayProps() {\n      return normalize.element({\n        ...parts.overlay.attrs,\n        style: {\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          translate: \"-50% -50%\"\n        }\n      });\n    },\n    getDownloadTriggerProps(props2) {\n      return normalize.button({\n        type: \"button\",\n        ...parts.downloadTrigger.attrs,\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send({ type: \"DOWNLOAD_TRIGGER.CLICK\", ...props2 });\n        }\n      });\n    }\n  };\n}\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_2__.createMachine)({\n  props({ props: props2 }) {\n    return {\n      defaultValue: \"\",\n      pixelSize: 10,\n      ...props2\n    };\n  },\n  initialState() {\n    return \"idle\";\n  },\n  context({ prop, bindable }) {\n    return {\n      value: bindable(() => ({\n        value: prop(\"value\"),\n        defaultValue: prop(\"defaultValue\"),\n        onChange(value) {\n          prop(\"onValueChange\")?.({ value });\n        }\n      }))\n    };\n  },\n  computed: {\n    encoded: (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_2__.memo)(\n      ({ context, prop }) => [context.get(\"value\"), prop(\"encoding\")],\n      (value, encoding) => (0,uqr__WEBPACK_IMPORTED_MODULE_3__.encode)(value, encoding)\n    )\n  },\n  states: {\n    idle: {\n      on: {\n        \"VALUE.SET\": {\n          actions: [\"setValue\"]\n        },\n        \"DOWNLOAD_TRIGGER.CLICK\": {\n          actions: [\"downloadQrCode\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    actions: {\n      setValue({ context, event }) {\n        context.set(\"value\", event.value);\n      },\n      downloadQrCode({ event, scope }) {\n        const { mimeType, quality, fileName } = event;\n        const svgEl = getFrameEl(scope);\n        const doc = scope.getDoc();\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getDataUrl)(svgEl, { type: mimeType, quality }).then((dataUri) => {\n          const a = doc.createElement(\"a\");\n          a.href = dataUri;\n          a.rel = \"noopener\";\n          a.download = fileName;\n          a.click();\n          setTimeout(() => {\n            a.remove();\n          }, 0);\n        });\n      }\n    }\n  }\n});\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_4__.createProps)()([\n  \"ids\",\n  \"defaultValue\",\n  \"value\",\n  \"id\",\n  \"encoding\",\n  \"dir\",\n  \"getRootNode\",\n  \"onValueChange\",\n  \"pixelSize\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_5__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/qr-code/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/radio-group/dist/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@zag-js/radio-group/dist/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   itemProps: () => (/* binding */ itemProps),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitItemProps: () => (/* binding */ splitItemProps),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/focus-visible */ \"(ssr)/./node_modules/@zag-js/focus-visible/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n// src/radio-group.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"radio-group\").parts(\n  \"root\",\n  \"label\",\n  \"item\",\n  \"itemText\",\n  \"itemControl\",\n  \"indicator\"\n);\nvar parts = anatomy.build();\nvar getRootId = (ctx) => ctx.ids?.root ?? `radio-group:${ctx.id}`;\nvar getLabelId = (ctx) => ctx.ids?.label ?? `radio-group:${ctx.id}:label`;\nvar getItemId = (ctx, value) => ctx.ids?.item?.(value) ?? `radio-group:${ctx.id}:radio:${value}`;\nvar getItemHiddenInputId = (ctx, value) => ctx.ids?.itemHiddenInput?.(value) ?? `radio-group:${ctx.id}:radio:input:${value}`;\nvar getItemControlId = (ctx, value) => ctx.ids?.itemControl?.(value) ?? `radio-group:${ctx.id}:radio:control:${value}`;\nvar getItemLabelId = (ctx, value) => ctx.ids?.itemLabel?.(value) ?? `radio-group:${ctx.id}:radio:label:${value}`;\nvar getIndicatorId = (ctx) => ctx.ids?.indicator ?? `radio-group:${ctx.id}:indicator`;\nvar getRootEl = (ctx) => ctx.getById(getRootId(ctx));\nvar getItemHiddenInputEl = (ctx, value) => ctx.getById(getItemHiddenInputId(ctx, value));\nvar getIndicatorEl = (ctx) => ctx.getById(getIndicatorId(ctx));\nvar getFirstEnabledInputEl = (ctx) => getRootEl(ctx)?.querySelector(\"input:not(:disabled)\");\nvar getFirstEnabledAndCheckedInputEl = (ctx) => getRootEl(ctx)?.querySelector(\"input:not(:disabled):checked\");\nvar getInputEls = (ctx) => {\n  const ownerId = CSS.escape(getRootId(ctx));\n  const selector = `input[type=radio][data-ownedby='${ownerId}']:not([disabled])`;\n  return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.queryAll)(getRootEl(ctx), selector);\n};\nvar getRadioEl = (ctx, value) => {\n  if (!value) return;\n  return ctx.getById(getItemId(ctx, value));\n};\nvar getOffsetRect = (el) => ({\n  left: el?.offsetLeft ?? 0,\n  top: el?.offsetTop ?? 0,\n  width: el?.offsetWidth ?? 0,\n  height: el?.offsetHeight ?? 0\n});\nvar resolveRect = (rect) => ({\n  width: `${rect.width}px`,\n  height: `${rect.height}px`,\n  left: `${rect.left}px`,\n  top: `${rect.top}px`\n});\n\n// src/radio-group.connect.ts\nfunction connect(service, normalize) {\n  const { context, send, computed, prop, scope } = service;\n  const groupDisabled = computed(\"isDisabled\");\n  const readOnly = prop(\"readOnly\");\n  function getItemState(props2) {\n    const focused = context.get(\"focusedValue\") === props2.value;\n    const focusVisible = focused && (0,_zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_2__.isFocusVisible)();\n    return {\n      value: props2.value,\n      invalid: !!props2.invalid,\n      disabled: !!props2.disabled || groupDisabled,\n      checked: context.get(\"value\") === props2.value,\n      focused,\n      focusVisible,\n      hovered: context.get(\"hoveredValue\") === props2.value,\n      active: context.get(\"activeValue\") === props2.value\n    };\n  }\n  function getItemDataAttrs(props2) {\n    const itemState = getItemState(props2);\n    return {\n      \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.focused),\n      \"data-focus-visible\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.focusVisible),\n      \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.disabled),\n      \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(readOnly),\n      \"data-state\": itemState.checked ? \"checked\" : \"unchecked\",\n      \"data-hover\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.hovered),\n      \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.invalid),\n      \"data-orientation\": prop(\"orientation\"),\n      \"data-ssr\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(context.get(\"ssr\"))\n    };\n  }\n  const focus = () => {\n    const nodeToFocus = getFirstEnabledAndCheckedInputEl(scope) ?? getFirstEnabledInputEl(scope);\n    nodeToFocus?.focus();\n  };\n  return {\n    focus,\n    value: context.get(\"value\"),\n    setValue(value) {\n      send({ type: \"SET_VALUE\", value, isTrusted: false });\n    },\n    clearValue() {\n      send({ type: \"SET_VALUE\", value: null, isTrusted: false });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        role: \"radiogroup\",\n        id: getRootId(scope),\n        \"aria-labelledby\": getLabelId(scope),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(groupDisabled),\n        \"aria-orientation\": prop(\"orientation\"),\n        dir: prop(\"dir\"),\n        style: {\n          position: \"relative\"\n        }\n      });\n    },\n    getLabelProps() {\n      return normalize.element({\n        ...parts.label.attrs,\n        dir: prop(\"dir\"),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(groupDisabled),\n        id: getLabelId(scope),\n        onClick: focus\n      });\n    },\n    getItemState,\n    getItemProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.label({\n        ...parts.item.attrs,\n        dir: prop(\"dir\"),\n        id: getItemId(scope, props2.value),\n        htmlFor: getItemHiddenInputId(scope, props2.value),\n        ...getItemDataAttrs(props2),\n        onPointerMove() {\n          if (itemState.disabled) return;\n          if (itemState.hovered) return;\n          send({ type: \"SET_HOVERED\", value: props2.value, hovered: true });\n        },\n        onPointerLeave() {\n          if (itemState.disabled) return;\n          send({ type: \"SET_HOVERED\", value: null });\n        },\n        onPointerDown(event) {\n          if (itemState.disabled) return;\n          if (itemState.focused && event.pointerType === \"mouse\") {\n            event.preventDefault();\n          }\n          send({ type: \"SET_ACTIVE\", value: props2.value, active: true });\n        },\n        onPointerUp() {\n          if (itemState.disabled) return;\n          send({ type: \"SET_ACTIVE\", value: null });\n        },\n        onClick() {\n          if (!itemState.disabled && (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isSafari)()) {\n            getItemHiddenInputEl(scope, props2.value)?.focus();\n          }\n        }\n      });\n    },\n    getItemTextProps(props2) {\n      return normalize.element({\n        ...parts.itemText.attrs,\n        dir: prop(\"dir\"),\n        id: getItemLabelId(scope, props2.value),\n        ...getItemDataAttrs(props2)\n      });\n    },\n    getItemControlProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        ...parts.itemControl.attrs,\n        dir: prop(\"dir\"),\n        id: getItemControlId(scope, props2.value),\n        \"data-active\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.active),\n        \"aria-hidden\": true,\n        ...getItemDataAttrs(props2)\n      });\n    },\n    getItemHiddenInputProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.input({\n        \"data-ownedby\": getRootId(scope),\n        id: getItemHiddenInputId(scope, props2.value),\n        type: \"radio\",\n        name: prop(\"name\") || prop(\"id\"),\n        form: prop(\"form\"),\n        value: props2.value,\n        onClick(event) {\n          if (readOnly) {\n            event.preventDefault();\n            return;\n          }\n          if (event.currentTarget.checked) {\n            send({ type: \"SET_VALUE\", value: props2.value, isTrusted: true });\n          }\n        },\n        onBlur() {\n          send({ type: \"SET_FOCUSED\", value: null, focused: false });\n        },\n        onFocus() {\n          send({ type: \"SET_FOCUSED\", value: props2.value, focused: true });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (event.key === \" \") {\n            send({ type: \"SET_ACTIVE\", value: props2.value, active: true });\n          }\n        },\n        onKeyUp(event) {\n          if (event.defaultPrevented) return;\n          if (event.key === \" \") {\n            send({ type: \"SET_ACTIVE\", value: null });\n          }\n        },\n        disabled: itemState.disabled,\n        defaultChecked: itemState.checked,\n        style: _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.visuallyHiddenStyle\n      });\n    },\n    getIndicatorProps() {\n      const rect = context.get(\"indicatorRect\");\n      return normalize.element({\n        id: getIndicatorId(scope),\n        ...parts.indicator.attrs,\n        dir: prop(\"dir\"),\n        hidden: context.get(\"value\") == null,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(groupDisabled),\n        \"data-orientation\": prop(\"orientation\"),\n        style: {\n          \"--transition-property\": \"left, top, width, height\",\n          \"--left\": rect?.left,\n          \"--top\": rect?.top,\n          \"--width\": rect?.width,\n          \"--height\": rect?.height,\n          position: \"absolute\",\n          willChange: \"var(--transition-property)\",\n          transitionProperty: \"var(--transition-property)\",\n          transitionDuration: context.get(\"canIndicatorTransition\") ? \"var(--transition-duration, 150ms)\" : \"0ms\",\n          transitionTimingFunction: \"var(--transition-timing-function)\",\n          [prop(\"orientation\") === \"horizontal\" ? \"left\" : \"top\"]: prop(\"orientation\") === \"horizontal\" ? \"var(--left)\" : \"var(--top)\"\n        }\n      });\n    }\n  };\n}\nvar { not } = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createGuards)();\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)({\n  props({ props: props2 }) {\n    return {\n      orientation: \"vertical\",\n      ...props2\n    };\n  },\n  initialState() {\n    return \"idle\";\n  },\n  context({ prop, bindable }) {\n    return {\n      value: bindable(() => ({\n        defaultValue: prop(\"defaultValue\"),\n        value: prop(\"value\"),\n        onChange(value) {\n          prop(\"onValueChange\")?.({ value });\n        }\n      })),\n      activeValue: bindable(() => ({\n        defaultValue: null\n      })),\n      focusedValue: bindable(() => ({\n        defaultValue: null\n      })),\n      hoveredValue: bindable(() => ({\n        defaultValue: null\n      })),\n      indicatorRect: bindable(() => ({\n        defaultValue: {}\n      })),\n      canIndicatorTransition: bindable(() => ({\n        defaultValue: false\n      })),\n      fieldsetDisabled: bindable(() => ({\n        defaultValue: false\n      })),\n      ssr: bindable(() => ({\n        defaultValue: true\n      }))\n    };\n  },\n  refs() {\n    return {\n      indicatorCleanup: null\n    };\n  },\n  computed: {\n    isDisabled: ({ prop, context }) => !!prop(\"disabled\") || context.get(\"fieldsetDisabled\")\n  },\n  entry: [\"syncIndicatorRect\", \"syncSsr\"],\n  exit: [\"cleanupObserver\"],\n  effects: [\"trackFormControlState\", \"trackFocusVisible\"],\n  watch({ track, action, context }) {\n    track([() => context.get(\"value\")], () => {\n      action([\"setIndicatorTransition\", \"syncIndicatorRect\", \"syncInputElements\"]);\n    });\n  },\n  on: {\n    SET_VALUE: [\n      {\n        guard: not(\"isTrusted\"),\n        actions: [\"setValue\", \"dispatchChangeEvent\"]\n      },\n      {\n        actions: [\"setValue\"]\n      }\n    ],\n    SET_HOVERED: {\n      actions: [\"setHovered\"]\n    },\n    SET_ACTIVE: {\n      actions: [\"setActive\"]\n    },\n    SET_FOCUSED: {\n      actions: [\"setFocused\"]\n    }\n  },\n  states: {\n    idle: {}\n  },\n  implementations: {\n    guards: {\n      isTrusted: ({ event }) => !!event.isTrusted\n    },\n    effects: {\n      trackFormControlState({ context, scope }) {\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackFormControl)(getRootEl(scope), {\n          onFieldsetDisabledChange(disabled) {\n            context.set(\"fieldsetDisabled\", disabled);\n          },\n          onFormReset() {\n            context.set(\"value\", context.initial(\"value\"));\n          }\n        });\n      },\n      trackFocusVisible({ scope }) {\n        return (0,_zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_2__.trackFocusVisible)({ root: scope.getRootNode?.() });\n      }\n    },\n    actions: {\n      setValue({ context, event }) {\n        context.set(\"value\", event.value);\n      },\n      setHovered({ context, event }) {\n        context.set(\"hoveredValue\", event.value);\n      },\n      setActive({ context, event }) {\n        context.set(\"activeValue\", event.value);\n      },\n      setFocused({ context, event }) {\n        context.set(\"focusedValue\", event.value);\n      },\n      syncInputElements({ context, scope }) {\n        const inputs = getInputEls(scope);\n        inputs.forEach((input) => {\n          input.checked = input.value === context.get(\"value\");\n        });\n      },\n      setIndicatorTransition({ context }) {\n        context.set(\"canIndicatorTransition\", (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.isString)(context.get(\"value\")));\n      },\n      cleanupObserver({ refs }) {\n        refs.get(\"indicatorCleanup\")?.();\n      },\n      syncSsr({ context }) {\n        context.set(\"ssr\", false);\n      },\n      syncIndicatorRect({ context, scope, refs }) {\n        refs.get(\"indicatorCleanup\")?.();\n        if (!getIndicatorEl(scope)) return;\n        const value = context.get(\"value\");\n        const radioEl = getRadioEl(scope, value);\n        if (value == null || !radioEl) {\n          context.set(\"canIndicatorTransition\", false);\n          context.set(\"indicatorRect\", {});\n          return;\n        }\n        const indicatorCleanup = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackElementRect)([radioEl], {\n          measure(el) {\n            return getOffsetRect(el);\n          },\n          onEntry({ rects }) {\n            context.set(\"indicatorRect\", resolveRect(rects[0]));\n          }\n        });\n        refs.set(\"indicatorCleanup\", indicatorCleanup);\n      },\n      dispatchChangeEvent({ context, scope }) {\n        const inputEls = getInputEls(scope);\n        inputEls.forEach((inputEl) => {\n          const checked = inputEl.value === context.get(\"value\");\n          if (checked === inputEl.checked) return;\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dispatchInputCheckedEvent)(inputEl, { checked });\n        });\n      }\n    }\n  }\n});\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_5__.createProps)()([\n  \"dir\",\n  \"disabled\",\n  \"form\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"name\",\n  \"onValueChange\",\n  \"orientation\",\n  \"readOnly\",\n  \"value\",\n  \"defaultValue\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(props);\nvar itemProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_5__.createProps)()([\"value\", \"disabled\", \"invalid\"]);\nvar splitItemProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(itemProps);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/radio-group/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/rating-group/dist/index.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/@zag-js/rating-group/dist/index.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   itemProps: () => (/* binding */ itemProps),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitItemProps: () => (/* binding */ splitItemProps),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n\n\n\n// src/rating-group.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"rating-group\").parts(\"root\", \"label\", \"item\", \"control\");\nvar parts = anatomy.build();\nvar getRootId = (ctx) => ctx.ids?.root ?? `rating:${ctx.id}`;\nvar getLabelId = (ctx) => ctx.ids?.label ?? `rating:${ctx.id}:label`;\nvar getHiddenInputId = (ctx) => ctx.ids?.hiddenInput ?? `rating:${ctx.id}:input`;\nvar getControlId = (ctx) => ctx.ids?.control ?? `rating:${ctx.id}:control`;\nvar getItemId = (ctx, id) => ctx.ids?.item?.(id) ?? `rating:${ctx.id}:item:${id}`;\nvar getControlEl = (ctx) => ctx.getById(getControlId(ctx));\nvar getRadioEl = (ctx, value) => {\n  const selector = `[role=radio][aria-posinset='${Math.ceil(value)}']`;\n  return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.query)(getControlEl(ctx), selector);\n};\nvar getHiddenInputEl = (ctx) => ctx.getById(getHiddenInputId(ctx));\nvar dispatchChangeEvent = (ctx, value) => {\n  const inputEl = getHiddenInputEl(ctx);\n  if (!inputEl) return;\n  (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dispatchInputValueEvent)(inputEl, { value });\n};\n\n// src/rating-group.connect.ts\nfunction connect(service, normalize) {\n  const { context, send, prop, scope, computed } = service;\n  const interactive = computed(\"isInteractive\");\n  const disabled = computed(\"isDisabled\");\n  const readOnly = prop(\"readOnly\");\n  const value = context.get(\"value\");\n  const hoveredValue = context.get(\"hoveredValue\");\n  const translations = prop(\"translations\");\n  function getItemState(props2) {\n    const currentValue = computed(\"isHovering\") ? hoveredValue : value;\n    const equal = Math.ceil(currentValue) === props2.index;\n    const highlighted = props2.index <= currentValue || equal;\n    const half = equal && Math.abs(currentValue - props2.index) === 0.5;\n    return {\n      highlighted,\n      half,\n      checked: equal || value === -1 && props2.index === 1\n    };\n  }\n  return {\n    hovering: computed(\"isHovering\"),\n    value,\n    hoveredValue,\n    count: prop(\"count\"),\n    items: Array.from({ length: prop(\"count\") }).map((_, index) => index + 1),\n    setValue(value2) {\n      send({ type: \"SET_VALUE\", value: value2 });\n    },\n    clearValue() {\n      send({ type: \"CLEAR_VALUE\" });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        dir: prop(\"dir\"),\n        id: getRootId(scope)\n      });\n    },\n    getHiddenInputProps() {\n      return normalize.input({\n        name: prop(\"name\"),\n        form: prop(\"form\"),\n        type: \"text\",\n        hidden: true,\n        disabled,\n        readOnly,\n        required: prop(\"required\"),\n        id: getHiddenInputId(scope),\n        defaultValue: value\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        dir: prop(\"dir\"),\n        id: getLabelId(scope),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        htmlFor: getHiddenInputId(scope),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          event.preventDefault();\n          const radioEl = getRadioEl(scope, Math.max(1, context.get(\"value\")));\n          radioEl?.focus({ preventScroll: true });\n        }\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        id: getControlId(scope),\n        ...parts.control.attrs,\n        dir: prop(\"dir\"),\n        role: \"radiogroup\",\n        \"aria-orientation\": \"horizontal\",\n        \"aria-labelledby\": getLabelId(scope),\n        \"aria-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.ariaAttr)(readOnly),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(readOnly),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        onPointerMove(event) {\n          if (!interactive) return;\n          if (event.pointerType === \"touch\") return;\n          send({ type: \"GROUP_POINTER_OVER\" });\n        },\n        onPointerLeave(event) {\n          if (!interactive) return;\n          if (event.pointerType === \"touch\") return;\n          send({ type: \"GROUP_POINTER_LEAVE\" });\n        }\n      });\n    },\n    getItemState,\n    getItemProps(props2) {\n      const { index } = props2;\n      const itemState = getItemState(props2);\n      const valueText = translations.ratingValueText(index);\n      return normalize.element({\n        ...parts.item.attrs,\n        dir: prop(\"dir\"),\n        id: getItemId(scope, index.toString()),\n        role: \"radio\",\n        tabIndex: (() => {\n          if (readOnly) return itemState.checked ? 0 : void 0;\n          if (disabled) return void 0;\n          return itemState.checked ? 0 : -1;\n        })(),\n        \"aria-roledescription\": \"rating\",\n        \"aria-label\": valueText,\n        \"aria-disabled\": disabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(readOnly),\n        \"aria-setsize\": prop(\"count\"),\n        \"aria-checked\": itemState.checked,\n        \"data-checked\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.checked),\n        \"aria-posinset\": index,\n        \"data-highlighted\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.highlighted),\n        \"data-half\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.half),\n        onPointerDown(event) {\n          if (!interactive) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isLeftClick)(event)) return;\n          event.preventDefault();\n        },\n        onPointerMove(event) {\n          if (!interactive) return;\n          const point = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventPoint)(event);\n          const relativePoint = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getRelativePoint)(point, event.currentTarget);\n          const percentX = relativePoint.getPercentValue({\n            orientation: \"horizontal\",\n            dir: prop(\"dir\")\n          });\n          const isMidway = percentX < 0.5;\n          send({ type: \"POINTER_OVER\", index, isMidway });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          const keyMap = {\n            ArrowLeft() {\n              send({ type: \"ARROW_LEFT\" });\n            },\n            ArrowRight() {\n              send({ type: \"ARROW_RIGHT\" });\n            },\n            ArrowUp() {\n              send({ type: \"ARROW_LEFT\" });\n            },\n            ArrowDown() {\n              send({ type: \"ARROW_RIGHT\" });\n            },\n            Space() {\n              send({ type: \"SPACE\", value: index });\n            },\n            Home() {\n              send({ type: \"HOME\" });\n            },\n            End() {\n              send({ type: \"END\" });\n            }\n          };\n          const key = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventKey)(event, { dir: prop(\"dir\") });\n          const exec = keyMap[key];\n          if (exec) {\n            event.preventDefault();\n            exec(event);\n          }\n        },\n        onClick() {\n          if (!interactive) return;\n          send({ type: \"CLICK\", value: index });\n        },\n        onFocus() {\n          if (!interactive) return;\n          send({ type: \"FOCUS\" });\n        },\n        onBlur() {\n          if (!interactive) return;\n          send({ type: \"BLUR\" });\n        }\n      });\n    }\n  };\n}\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_2__.createMachine)({\n  props({ props: props2 }) {\n    return {\n      name: \"rating\",\n      count: 5,\n      dir: \"ltr\",\n      defaultValue: -1,\n      ...props2,\n      translations: {\n        ratingValueText: (index) => `${index} stars`,\n        ...props2.translations\n      }\n    };\n  },\n  initialState() {\n    return \"idle\";\n  },\n  context({ prop, bindable }) {\n    return {\n      value: bindable(() => ({\n        defaultValue: prop(\"defaultValue\"),\n        value: prop(\"value\"),\n        onChange(value) {\n          prop(\"onValueChange\")?.({ value });\n        }\n      })),\n      hoveredValue: bindable(() => ({\n        defaultValue: -1,\n        onChange(value) {\n          prop(\"onHoverChange\")?.({ hoveredValue: value });\n        }\n      })),\n      fieldsetDisabled: bindable(() => ({\n        defaultValue: false\n      }))\n    };\n  },\n  watch({ track, action, prop, context }) {\n    track([() => prop(\"allowHalf\")], () => {\n      action([\"roundValueIfNeeded\"]);\n    });\n    track([() => context.get(\"value\")], () => {\n      action([\"dispatchChangeEvent\"]);\n    });\n  },\n  computed: {\n    isDisabled: ({ context, prop }) => !!prop(\"disabled\") || context.get(\"fieldsetDisabled\"),\n    isInteractive: ({ computed, prop }) => !(computed(\"isDisabled\") || prop(\"readOnly\")),\n    isHovering: ({ context }) => context.get(\"hoveredValue\") > -1\n  },\n  effects: [\"trackFormControlState\"],\n  on: {\n    SET_VALUE: {\n      actions: [\"setValue\"]\n    },\n    CLEAR_VALUE: {\n      actions: [\"clearValue\"]\n    }\n  },\n  states: {\n    idle: {\n      entry: [\"clearHoveredValue\"],\n      on: {\n        GROUP_POINTER_OVER: {\n          target: \"hover\"\n        },\n        FOCUS: {\n          target: \"focus\"\n        },\n        CLICK: {\n          actions: [\"setValue\", \"focusActiveRadio\"]\n        }\n      }\n    },\n    focus: {\n      on: {\n        POINTER_OVER: {\n          actions: [\"setHoveredValue\"]\n        },\n        GROUP_POINTER_LEAVE: {\n          actions: [\"clearHoveredValue\"]\n        },\n        BLUR: {\n          target: \"idle\"\n        },\n        SPACE: {\n          guard: \"isValueEmpty\",\n          actions: [\"setValue\"]\n        },\n        CLICK: {\n          actions: [\"setValue\", \"focusActiveRadio\"]\n        },\n        ARROW_LEFT: {\n          actions: [\"setPrevValue\", \"focusActiveRadio\"]\n        },\n        ARROW_RIGHT: {\n          actions: [\"setNextValue\", \"focusActiveRadio\"]\n        },\n        HOME: {\n          actions: [\"setValueToMin\", \"focusActiveRadio\"]\n        },\n        END: {\n          actions: [\"setValueToMax\", \"focusActiveRadio\"]\n        }\n      }\n    },\n    hover: {\n      on: {\n        POINTER_OVER: {\n          actions: [\"setHoveredValue\"]\n        },\n        GROUP_POINTER_LEAVE: [\n          {\n            guard: \"isRadioFocused\",\n            target: \"focus\",\n            actions: [\"clearHoveredValue\"]\n          },\n          {\n            target: \"idle\",\n            actions: [\"clearHoveredValue\"]\n          }\n        ],\n        CLICK: {\n          actions: [\"setValue\", \"focusActiveRadio\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      isInteractive: ({ prop }) => !(prop(\"disabled\") || prop(\"readOnly\")),\n      isHoveredValueEmpty: ({ context }) => context.get(\"hoveredValue\") === -1,\n      isValueEmpty: ({ context }) => context.get(\"value\") <= 0,\n      isRadioFocused: ({ scope }) => !!getControlEl(scope)?.contains(scope.getActiveElement())\n    },\n    effects: {\n      trackFormControlState({ context, scope }) {\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackFormControl)(getHiddenInputEl(scope), {\n          onFieldsetDisabledChange(disabled) {\n            context.set(\"fieldsetDisabled\", disabled);\n          },\n          onFormReset() {\n            context.set(\"value\", context.initial(\"value\"));\n          }\n        });\n      }\n    },\n    actions: {\n      clearHoveredValue({ context }) {\n        context.set(\"hoveredValue\", -1);\n      },\n      focusActiveRadio({ scope, context }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => getRadioEl(scope, context.get(\"value\"))?.focus());\n      },\n      setPrevValue({ context, prop }) {\n        const factor = prop(\"allowHalf\") ? 0.5 : 1;\n        context.set(\"value\", Math.max(0, context.get(\"value\") - factor));\n      },\n      setNextValue({ context, prop }) {\n        const factor = prop(\"allowHalf\") ? 0.5 : 1;\n        const value = context.get(\"value\") === -1 ? 0 : context.get(\"value\");\n        context.set(\"value\", Math.min(prop(\"count\"), value + factor));\n      },\n      setValueToMin({ context }) {\n        context.set(\"value\", 1);\n      },\n      setValueToMax({ context, prop }) {\n        context.set(\"value\", prop(\"count\"));\n      },\n      setValue({ context, event }) {\n        const hoveredValue = context.get(\"hoveredValue\");\n        const value = hoveredValue === -1 ? event.value : hoveredValue;\n        context.set(\"value\", value);\n      },\n      clearValue({ context }) {\n        context.set(\"value\", -1);\n      },\n      setHoveredValue({ context, prop, event }) {\n        const half = prop(\"allowHalf\") && event.isMidway;\n        const factor = half ? 0.5 : 0;\n        context.set(\"hoveredValue\", event.index - factor);\n      },\n      roundValueIfNeeded({ context, prop }) {\n        if (prop(\"allowHalf\")) return;\n        context.set(\"value\", Math.round(context.get(\"value\")));\n      },\n      dispatchChangeEvent({ context, scope }) {\n        dispatchChangeEvent(scope, context.get(\"value\"));\n      }\n    }\n  }\n});\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_3__.createProps)()([\n  \"allowHalf\",\n  \"autoFocus\",\n  \"count\",\n  \"dir\",\n  \"disabled\",\n  \"form\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"name\",\n  \"onHoverChange\",\n  \"onValueChange\",\n  \"required\",\n  \"readOnly\",\n  \"translations\",\n  \"value\",\n  \"defaultValue\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(props);\nvar itemProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_3__.createProps)()([\"index\"]);\nvar splitItemProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(itemProps);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9yYXRpbmctZ3JvdXAvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQWdEO0FBQ3lIO0FBQzVIO0FBQ0Q7QUFDSzs7QUFFakQ7QUFDQSxjQUFjLDhEQUFhO0FBQzNCO0FBQ0Esb0RBQW9ELE9BQU87QUFDM0Qsc0RBQXNELE9BQU87QUFDN0Qsa0VBQWtFLE9BQU87QUFDekUsMERBQTBELE9BQU87QUFDakUsOERBQThELE9BQU8sUUFBUSxHQUFHO0FBQ2hGO0FBQ0E7QUFDQSxrREFBa0QsaUJBQWlCO0FBQ25FLFNBQVMsd0RBQUs7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRSwwRUFBdUIsWUFBWSxPQUFPO0FBQzVDOztBQUVBO0FBQ0E7QUFDQSxVQUFVLHVDQUF1QztBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix1QkFBdUI7QUFDL0M7QUFDQSxhQUFhLGtDQUFrQztBQUMvQyxLQUFLO0FBQ0w7QUFDQSxhQUFhLHFCQUFxQjtBQUNsQyxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QiwyREFBUTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIscUJBQXFCO0FBQ2hEO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLDJEQUFRO0FBQ2pDLHlCQUF5QiwyREFBUTtBQUNqQyx5QkFBeUIsMkRBQVE7QUFDakM7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLDRCQUE0QjtBQUM3QyxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLDZCQUE2QjtBQUM5QztBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBLGNBQWMsUUFBUTtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QiwyREFBUTtBQUNqQyx5QkFBeUIsMkRBQVE7QUFDakM7QUFDQTtBQUNBLHdCQUF3QiwyREFBUTtBQUNoQztBQUNBLDRCQUE0QiwyREFBUTtBQUNwQyxxQkFBcUIsMkRBQVE7QUFDN0I7QUFDQTtBQUNBLGVBQWUsOERBQVc7QUFDMUI7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLHdCQUF3QixnRUFBYTtBQUNyQyxnQ0FBZ0MsbUVBQWdCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBLGlCQUFpQix1Q0FBdUM7QUFDeEQsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsb0JBQW9CO0FBQ3pDLGFBQWE7QUFDYjtBQUNBLHFCQUFxQixxQkFBcUI7QUFDMUMsYUFBYTtBQUNiO0FBQ0EscUJBQXFCLG9CQUFvQjtBQUN6QyxhQUFhO0FBQ2I7QUFDQSxxQkFBcUIscUJBQXFCO0FBQzFDLGFBQWE7QUFDYjtBQUNBLHFCQUFxQiw2QkFBNkI7QUFDbEQsYUFBYTtBQUNiO0FBQ0EscUJBQXFCLGNBQWM7QUFDbkMsYUFBYTtBQUNiO0FBQ0EscUJBQXFCLGFBQWE7QUFDbEM7QUFDQTtBQUNBLHNCQUFzQiw4REFBVyxVQUFVLGtCQUFrQjtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxpQkFBaUIsNkJBQTZCO0FBQzlDLFNBQVM7QUFDVDtBQUNBO0FBQ0EsaUJBQWlCLGVBQWU7QUFDaEMsU0FBUztBQUNUO0FBQ0E7QUFDQSxpQkFBaUIsY0FBYztBQUMvQjtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxjQUFjLDJEQUFhO0FBQzNCLFVBQVUsZUFBZTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxPQUFPO0FBQzlDO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNILFlBQVksZ0JBQWdCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsT0FBTztBQUMzQztBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MscUJBQXFCO0FBQ3pEO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxHQUFHO0FBQ0gsVUFBVSw4QkFBOEI7QUFDeEM7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBLG1CQUFtQixlQUFlO0FBQ2xDLHNCQUFzQixnQkFBZ0I7QUFDdEMsbUJBQW1CLFNBQVM7QUFDNUIsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0Esd0JBQXdCLE1BQU07QUFDOUIsOEJBQThCLFNBQVM7QUFDdkMsdUJBQXVCLFNBQVM7QUFDaEMseUJBQXlCLE9BQU87QUFDaEMsS0FBSztBQUNMO0FBQ0EsOEJBQThCLGdCQUFnQjtBQUM5QyxlQUFlLG1FQUFnQjtBQUMvQjtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNBLDBCQUEwQixTQUFTO0FBQ25DO0FBQ0EsT0FBTztBQUNQLHlCQUF5QixnQkFBZ0I7QUFDekMsUUFBUSxzREFBRztBQUNYLE9BQU87QUFDUCxxQkFBcUIsZUFBZTtBQUNwQztBQUNBO0FBQ0EsT0FBTztBQUNQLHFCQUFxQixlQUFlO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxzQkFBc0IsU0FBUztBQUMvQjtBQUNBLE9BQU87QUFDUCxzQkFBc0IsZUFBZTtBQUNyQztBQUNBLE9BQU87QUFDUCxpQkFBaUIsZ0JBQWdCO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxtQkFBbUIsU0FBUztBQUM1QjtBQUNBLE9BQU87QUFDUCx3QkFBd0Isc0JBQXNCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCwyQkFBMkIsZUFBZTtBQUMxQztBQUNBO0FBQ0EsT0FBTztBQUNQLDRCQUE0QixnQkFBZ0I7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsWUFBWSwwREFBVztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsK0RBQWdCO0FBQ2pDLGdCQUFnQiwwREFBVztBQUMzQixxQkFBcUIsK0RBQWdCOztBQUU4QyIsInNvdXJjZXMiOlsiL1VzZXJzL3JhdW5hcXBsYWhhL0Rlc2t0b3AvcGljay1hLWJvdC0yMDI1L25vZGVfbW9kdWxlcy9AemFnLWpzL3JhdGluZy1ncm91cC9kaXN0L2luZGV4Lm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVBbmF0b215IH0gZnJvbSAnQHphZy1qcy9hbmF0b215JztcbmltcG9ydCB7IHJhZiwgdHJhY2tGb3JtQ29udHJvbCwgZGlzcGF0Y2hJbnB1dFZhbHVlRXZlbnQsIHF1ZXJ5LCBkYXRhQXR0ciwgZ2V0RXZlbnRLZXksIGdldEV2ZW50UG9pbnQsIGdldFJlbGF0aXZlUG9pbnQsIGlzTGVmdENsaWNrLCBhcmlhQXR0ciB9IGZyb20gJ0B6YWctanMvZG9tLXF1ZXJ5JztcbmltcG9ydCB7IGNyZWF0ZU1hY2hpbmUgfSBmcm9tICdAemFnLWpzL2NvcmUnO1xuaW1wb3J0IHsgY3JlYXRlUHJvcHMgfSBmcm9tICdAemFnLWpzL3R5cGVzJztcbmltcG9ydCB7IGNyZWF0ZVNwbGl0UHJvcHMgfSBmcm9tICdAemFnLWpzL3V0aWxzJztcblxuLy8gc3JjL3JhdGluZy1ncm91cC5hbmF0b215LnRzXG52YXIgYW5hdG9teSA9IGNyZWF0ZUFuYXRvbXkoXCJyYXRpbmctZ3JvdXBcIikucGFydHMoXCJyb290XCIsIFwibGFiZWxcIiwgXCJpdGVtXCIsIFwiY29udHJvbFwiKTtcbnZhciBwYXJ0cyA9IGFuYXRvbXkuYnVpbGQoKTtcbnZhciBnZXRSb290SWQgPSAoY3R4KSA9PiBjdHguaWRzPy5yb290ID8/IGByYXRpbmc6JHtjdHguaWR9YDtcbnZhciBnZXRMYWJlbElkID0gKGN0eCkgPT4gY3R4Lmlkcz8ubGFiZWwgPz8gYHJhdGluZzoke2N0eC5pZH06bGFiZWxgO1xudmFyIGdldEhpZGRlbklucHV0SWQgPSAoY3R4KSA9PiBjdHguaWRzPy5oaWRkZW5JbnB1dCA/PyBgcmF0aW5nOiR7Y3R4LmlkfTppbnB1dGA7XG52YXIgZ2V0Q29udHJvbElkID0gKGN0eCkgPT4gY3R4Lmlkcz8uY29udHJvbCA/PyBgcmF0aW5nOiR7Y3R4LmlkfTpjb250cm9sYDtcbnZhciBnZXRJdGVtSWQgPSAoY3R4LCBpZCkgPT4gY3R4Lmlkcz8uaXRlbT8uKGlkKSA/PyBgcmF0aW5nOiR7Y3R4LmlkfTppdGVtOiR7aWR9YDtcbnZhciBnZXRDb250cm9sRWwgPSAoY3R4KSA9PiBjdHguZ2V0QnlJZChnZXRDb250cm9sSWQoY3R4KSk7XG52YXIgZ2V0UmFkaW9FbCA9IChjdHgsIHZhbHVlKSA9PiB7XG4gIGNvbnN0IHNlbGVjdG9yID0gYFtyb2xlPXJhZGlvXVthcmlhLXBvc2luc2V0PScke01hdGguY2VpbCh2YWx1ZSl9J11gO1xuICByZXR1cm4gcXVlcnkoZ2V0Q29udHJvbEVsKGN0eCksIHNlbGVjdG9yKTtcbn07XG52YXIgZ2V0SGlkZGVuSW5wdXRFbCA9IChjdHgpID0+IGN0eC5nZXRCeUlkKGdldEhpZGRlbklucHV0SWQoY3R4KSk7XG52YXIgZGlzcGF0Y2hDaGFuZ2VFdmVudCA9IChjdHgsIHZhbHVlKSA9PiB7XG4gIGNvbnN0IGlucHV0RWwgPSBnZXRIaWRkZW5JbnB1dEVsKGN0eCk7XG4gIGlmICghaW5wdXRFbCkgcmV0dXJuO1xuICBkaXNwYXRjaElucHV0VmFsdWVFdmVudChpbnB1dEVsLCB7IHZhbHVlIH0pO1xufTtcblxuLy8gc3JjL3JhdGluZy1ncm91cC5jb25uZWN0LnRzXG5mdW5jdGlvbiBjb25uZWN0KHNlcnZpY2UsIG5vcm1hbGl6ZSkge1xuICBjb25zdCB7IGNvbnRleHQsIHNlbmQsIHByb3AsIHNjb3BlLCBjb21wdXRlZCB9ID0gc2VydmljZTtcbiAgY29uc3QgaW50ZXJhY3RpdmUgPSBjb21wdXRlZChcImlzSW50ZXJhY3RpdmVcIik7XG4gIGNvbnN0IGRpc2FibGVkID0gY29tcHV0ZWQoXCJpc0Rpc2FibGVkXCIpO1xuICBjb25zdCByZWFkT25seSA9IHByb3AoXCJyZWFkT25seVwiKTtcbiAgY29uc3QgdmFsdWUgPSBjb250ZXh0LmdldChcInZhbHVlXCIpO1xuICBjb25zdCBob3ZlcmVkVmFsdWUgPSBjb250ZXh0LmdldChcImhvdmVyZWRWYWx1ZVwiKTtcbiAgY29uc3QgdHJhbnNsYXRpb25zID0gcHJvcChcInRyYW5zbGF0aW9uc1wiKTtcbiAgZnVuY3Rpb24gZ2V0SXRlbVN0YXRlKHByb3BzMikge1xuICAgIGNvbnN0IGN1cnJlbnRWYWx1ZSA9IGNvbXB1dGVkKFwiaXNIb3ZlcmluZ1wiKSA/IGhvdmVyZWRWYWx1ZSA6IHZhbHVlO1xuICAgIGNvbnN0IGVxdWFsID0gTWF0aC5jZWlsKGN1cnJlbnRWYWx1ZSkgPT09IHByb3BzMi5pbmRleDtcbiAgICBjb25zdCBoaWdobGlnaHRlZCA9IHByb3BzMi5pbmRleCA8PSBjdXJyZW50VmFsdWUgfHwgZXF1YWw7XG4gICAgY29uc3QgaGFsZiA9IGVxdWFsICYmIE1hdGguYWJzKGN1cnJlbnRWYWx1ZSAtIHByb3BzMi5pbmRleCkgPT09IDAuNTtcbiAgICByZXR1cm4ge1xuICAgICAgaGlnaGxpZ2h0ZWQsXG4gICAgICBoYWxmLFxuICAgICAgY2hlY2tlZDogZXF1YWwgfHwgdmFsdWUgPT09IC0xICYmIHByb3BzMi5pbmRleCA9PT0gMVxuICAgIH07XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBob3ZlcmluZzogY29tcHV0ZWQoXCJpc0hvdmVyaW5nXCIpLFxuICAgIHZhbHVlLFxuICAgIGhvdmVyZWRWYWx1ZSxcbiAgICBjb3VudDogcHJvcChcImNvdW50XCIpLFxuICAgIGl0ZW1zOiBBcnJheS5mcm9tKHsgbGVuZ3RoOiBwcm9wKFwiY291bnRcIikgfSkubWFwKChfLCBpbmRleCkgPT4gaW5kZXggKyAxKSxcbiAgICBzZXRWYWx1ZSh2YWx1ZTIpIHtcbiAgICAgIHNlbmQoeyB0eXBlOiBcIlNFVF9WQUxVRVwiLCB2YWx1ZTogdmFsdWUyIH0pO1xuICAgIH0sXG4gICAgY2xlYXJWYWx1ZSgpIHtcbiAgICAgIHNlbmQoeyB0eXBlOiBcIkNMRUFSX1ZBTFVFXCIgfSk7XG4gICAgfSxcbiAgICBnZXRSb290UHJvcHMoKSB7XG4gICAgICByZXR1cm4gbm9ybWFsaXplLmVsZW1lbnQoe1xuICAgICAgICAuLi5wYXJ0cy5yb290LmF0dHJzLFxuICAgICAgICBkaXI6IHByb3AoXCJkaXJcIiksXG4gICAgICAgIGlkOiBnZXRSb290SWQoc2NvcGUpXG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldEhpZGRlbklucHV0UHJvcHMoKSB7XG4gICAgICByZXR1cm4gbm9ybWFsaXplLmlucHV0KHtcbiAgICAgICAgbmFtZTogcHJvcChcIm5hbWVcIiksXG4gICAgICAgIGZvcm06IHByb3AoXCJmb3JtXCIpLFxuICAgICAgICB0eXBlOiBcInRleHRcIixcbiAgICAgICAgaGlkZGVuOiB0cnVlLFxuICAgICAgICBkaXNhYmxlZCxcbiAgICAgICAgcmVhZE9ubHksXG4gICAgICAgIHJlcXVpcmVkOiBwcm9wKFwicmVxdWlyZWRcIiksXG4gICAgICAgIGlkOiBnZXRIaWRkZW5JbnB1dElkKHNjb3BlKSxcbiAgICAgICAgZGVmYXVsdFZhbHVlOiB2YWx1ZVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXRMYWJlbFByb3BzKCkge1xuICAgICAgcmV0dXJuIG5vcm1hbGl6ZS5sYWJlbCh7XG4gICAgICAgIC4uLnBhcnRzLmxhYmVsLmF0dHJzLFxuICAgICAgICBkaXI6IHByb3AoXCJkaXJcIiksXG4gICAgICAgIGlkOiBnZXRMYWJlbElkKHNjb3BlKSxcbiAgICAgICAgXCJkYXRhLWRpc2FibGVkXCI6IGRhdGFBdHRyKGRpc2FibGVkKSxcbiAgICAgICAgaHRtbEZvcjogZ2V0SGlkZGVuSW5wdXRJZChzY29wZSksXG4gICAgICAgIG9uQ2xpY2soZXZlbnQpIHtcbiAgICAgICAgICBpZiAoZXZlbnQuZGVmYXVsdFByZXZlbnRlZCkgcmV0dXJuO1xuICAgICAgICAgIGlmICghaW50ZXJhY3RpdmUpIHJldHVybjtcbiAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgIGNvbnN0IHJhZGlvRWwgPSBnZXRSYWRpb0VsKHNjb3BlLCBNYXRoLm1heCgxLCBjb250ZXh0LmdldChcInZhbHVlXCIpKSk7XG4gICAgICAgICAgcmFkaW9FbD8uZm9jdXMoeyBwcmV2ZW50U2Nyb2xsOiB0cnVlIH0pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldENvbnRyb2xQcm9wcygpIHtcbiAgICAgIHJldHVybiBub3JtYWxpemUuZWxlbWVudCh7XG4gICAgICAgIGlkOiBnZXRDb250cm9sSWQoc2NvcGUpLFxuICAgICAgICAuLi5wYXJ0cy5jb250cm9sLmF0dHJzLFxuICAgICAgICBkaXI6IHByb3AoXCJkaXJcIiksXG4gICAgICAgIHJvbGU6IFwicmFkaW9ncm91cFwiLFxuICAgICAgICBcImFyaWEtb3JpZW50YXRpb25cIjogXCJob3Jpem9udGFsXCIsXG4gICAgICAgIFwiYXJpYS1sYWJlbGxlZGJ5XCI6IGdldExhYmVsSWQoc2NvcGUpLFxuICAgICAgICBcImFyaWEtcmVhZG9ubHlcIjogYXJpYUF0dHIocmVhZE9ubHkpLFxuICAgICAgICBcImRhdGEtcmVhZG9ubHlcIjogZGF0YUF0dHIocmVhZE9ubHkpLFxuICAgICAgICBcImRhdGEtZGlzYWJsZWRcIjogZGF0YUF0dHIoZGlzYWJsZWQpLFxuICAgICAgICBvblBvaW50ZXJNb3ZlKGV2ZW50KSB7XG4gICAgICAgICAgaWYgKCFpbnRlcmFjdGl2ZSkgcmV0dXJuO1xuICAgICAgICAgIGlmIChldmVudC5wb2ludGVyVHlwZSA9PT0gXCJ0b3VjaFwiKSByZXR1cm47XG4gICAgICAgICAgc2VuZCh7IHR5cGU6IFwiR1JPVVBfUE9JTlRFUl9PVkVSXCIgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIG9uUG9pbnRlckxlYXZlKGV2ZW50KSB7XG4gICAgICAgICAgaWYgKCFpbnRlcmFjdGl2ZSkgcmV0dXJuO1xuICAgICAgICAgIGlmIChldmVudC5wb2ludGVyVHlwZSA9PT0gXCJ0b3VjaFwiKSByZXR1cm47XG4gICAgICAgICAgc2VuZCh7IHR5cGU6IFwiR1JPVVBfUE9JTlRFUl9MRUFWRVwiIH0pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldEl0ZW1TdGF0ZSxcbiAgICBnZXRJdGVtUHJvcHMocHJvcHMyKSB7XG4gICAgICBjb25zdCB7IGluZGV4IH0gPSBwcm9wczI7XG4gICAgICBjb25zdCBpdGVtU3RhdGUgPSBnZXRJdGVtU3RhdGUocHJvcHMyKTtcbiAgICAgIGNvbnN0IHZhbHVlVGV4dCA9IHRyYW5zbGF0aW9ucy5yYXRpbmdWYWx1ZVRleHQoaW5kZXgpO1xuICAgICAgcmV0dXJuIG5vcm1hbGl6ZS5lbGVtZW50KHtcbiAgICAgICAgLi4ucGFydHMuaXRlbS5hdHRycyxcbiAgICAgICAgZGlyOiBwcm9wKFwiZGlyXCIpLFxuICAgICAgICBpZDogZ2V0SXRlbUlkKHNjb3BlLCBpbmRleC50b1N0cmluZygpKSxcbiAgICAgICAgcm9sZTogXCJyYWRpb1wiLFxuICAgICAgICB0YWJJbmRleDogKCgpID0+IHtcbiAgICAgICAgICBpZiAocmVhZE9ubHkpIHJldHVybiBpdGVtU3RhdGUuY2hlY2tlZCA/IDAgOiB2b2lkIDA7XG4gICAgICAgICAgaWYgKGRpc2FibGVkKSByZXR1cm4gdm9pZCAwO1xuICAgICAgICAgIHJldHVybiBpdGVtU3RhdGUuY2hlY2tlZCA/IDAgOiAtMTtcbiAgICAgICAgfSkoKSxcbiAgICAgICAgXCJhcmlhLXJvbGVkZXNjcmlwdGlvblwiOiBcInJhdGluZ1wiLFxuICAgICAgICBcImFyaWEtbGFiZWxcIjogdmFsdWVUZXh0LFxuICAgICAgICBcImFyaWEtZGlzYWJsZWRcIjogZGlzYWJsZWQsXG4gICAgICAgIFwiZGF0YS1kaXNhYmxlZFwiOiBkYXRhQXR0cihkaXNhYmxlZCksXG4gICAgICAgIFwiZGF0YS1yZWFkb25seVwiOiBkYXRhQXR0cihyZWFkT25seSksXG4gICAgICAgIFwiYXJpYS1zZXRzaXplXCI6IHByb3AoXCJjb3VudFwiKSxcbiAgICAgICAgXCJhcmlhLWNoZWNrZWRcIjogaXRlbVN0YXRlLmNoZWNrZWQsXG4gICAgICAgIFwiZGF0YS1jaGVja2VkXCI6IGRhdGFBdHRyKGl0ZW1TdGF0ZS5jaGVja2VkKSxcbiAgICAgICAgXCJhcmlhLXBvc2luc2V0XCI6IGluZGV4LFxuICAgICAgICBcImRhdGEtaGlnaGxpZ2h0ZWRcIjogZGF0YUF0dHIoaXRlbVN0YXRlLmhpZ2hsaWdodGVkKSxcbiAgICAgICAgXCJkYXRhLWhhbGZcIjogZGF0YUF0dHIoaXRlbVN0YXRlLmhhbGYpLFxuICAgICAgICBvblBvaW50ZXJEb3duKGV2ZW50KSB7XG4gICAgICAgICAgaWYgKCFpbnRlcmFjdGl2ZSkgcmV0dXJuO1xuICAgICAgICAgIGlmICghaXNMZWZ0Q2xpY2soZXZlbnQpKSByZXR1cm47XG4gICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgfSxcbiAgICAgICAgb25Qb2ludGVyTW92ZShldmVudCkge1xuICAgICAgICAgIGlmICghaW50ZXJhY3RpdmUpIHJldHVybjtcbiAgICAgICAgICBjb25zdCBwb2ludCA9IGdldEV2ZW50UG9pbnQoZXZlbnQpO1xuICAgICAgICAgIGNvbnN0IHJlbGF0aXZlUG9pbnQgPSBnZXRSZWxhdGl2ZVBvaW50KHBvaW50LCBldmVudC5jdXJyZW50VGFyZ2V0KTtcbiAgICAgICAgICBjb25zdCBwZXJjZW50WCA9IHJlbGF0aXZlUG9pbnQuZ2V0UGVyY2VudFZhbHVlKHtcbiAgICAgICAgICAgIG9yaWVudGF0aW9uOiBcImhvcml6b250YWxcIixcbiAgICAgICAgICAgIGRpcjogcHJvcChcImRpclwiKVxuICAgICAgICAgIH0pO1xuICAgICAgICAgIGNvbnN0IGlzTWlkd2F5ID0gcGVyY2VudFggPCAwLjU7XG4gICAgICAgICAgc2VuZCh7IHR5cGU6IFwiUE9JTlRFUl9PVkVSXCIsIGluZGV4LCBpc01pZHdheSB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgb25LZXlEb3duKGV2ZW50KSB7XG4gICAgICAgICAgaWYgKGV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQpIHJldHVybjtcbiAgICAgICAgICBpZiAoIWludGVyYWN0aXZlKSByZXR1cm47XG4gICAgICAgICAgY29uc3Qga2V5TWFwID0ge1xuICAgICAgICAgICAgQXJyb3dMZWZ0KCkge1xuICAgICAgICAgICAgICBzZW5kKHsgdHlwZTogXCJBUlJPV19MRUZUXCIgfSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgQXJyb3dSaWdodCgpIHtcbiAgICAgICAgICAgICAgc2VuZCh7IHR5cGU6IFwiQVJST1dfUklHSFRcIiB9KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBBcnJvd1VwKCkge1xuICAgICAgICAgICAgICBzZW5kKHsgdHlwZTogXCJBUlJPV19MRUZUXCIgfSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgQXJyb3dEb3duKCkge1xuICAgICAgICAgICAgICBzZW5kKHsgdHlwZTogXCJBUlJPV19SSUdIVFwiIH0pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFNwYWNlKCkge1xuICAgICAgICAgICAgICBzZW5kKHsgdHlwZTogXCJTUEFDRVwiLCB2YWx1ZTogaW5kZXggfSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgSG9tZSgpIHtcbiAgICAgICAgICAgICAgc2VuZCh7IHR5cGU6IFwiSE9NRVwiIH0pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIEVuZCgpIHtcbiAgICAgICAgICAgICAgc2VuZCh7IHR5cGU6IFwiRU5EXCIgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfTtcbiAgICAgICAgICBjb25zdCBrZXkgPSBnZXRFdmVudEtleShldmVudCwgeyBkaXI6IHByb3AoXCJkaXJcIikgfSk7XG4gICAgICAgICAgY29uc3QgZXhlYyA9IGtleU1hcFtrZXldO1xuICAgICAgICAgIGlmIChleGVjKSB7XG4gICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgZXhlYyhldmVudCk7XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBvbkNsaWNrKCkge1xuICAgICAgICAgIGlmICghaW50ZXJhY3RpdmUpIHJldHVybjtcbiAgICAgICAgICBzZW5kKHsgdHlwZTogXCJDTElDS1wiLCB2YWx1ZTogaW5kZXggfSk7XG4gICAgICAgIH0sXG4gICAgICAgIG9uRm9jdXMoKSB7XG4gICAgICAgICAgaWYgKCFpbnRlcmFjdGl2ZSkgcmV0dXJuO1xuICAgICAgICAgIHNlbmQoeyB0eXBlOiBcIkZPQ1VTXCIgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIG9uQmx1cigpIHtcbiAgICAgICAgICBpZiAoIWludGVyYWN0aXZlKSByZXR1cm47XG4gICAgICAgICAgc2VuZCh7IHR5cGU6IFwiQkxVUlwiIH0pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG59XG52YXIgbWFjaGluZSA9IGNyZWF0ZU1hY2hpbmUoe1xuICBwcm9wcyh7IHByb3BzOiBwcm9wczIgfSkge1xuICAgIHJldHVybiB7XG4gICAgICBuYW1lOiBcInJhdGluZ1wiLFxuICAgICAgY291bnQ6IDUsXG4gICAgICBkaXI6IFwibHRyXCIsXG4gICAgICBkZWZhdWx0VmFsdWU6IC0xLFxuICAgICAgLi4ucHJvcHMyLFxuICAgICAgdHJhbnNsYXRpb25zOiB7XG4gICAgICAgIHJhdGluZ1ZhbHVlVGV4dDogKGluZGV4KSA9PiBgJHtpbmRleH0gc3RhcnNgLFxuICAgICAgICAuLi5wcm9wczIudHJhbnNsYXRpb25zXG4gICAgICB9XG4gICAgfTtcbiAgfSxcbiAgaW5pdGlhbFN0YXRlKCkge1xuICAgIHJldHVybiBcImlkbGVcIjtcbiAgfSxcbiAgY29udGV4dCh7IHByb3AsIGJpbmRhYmxlIH0pIHtcbiAgICByZXR1cm4ge1xuICAgICAgdmFsdWU6IGJpbmRhYmxlKCgpID0+ICh7XG4gICAgICAgIGRlZmF1bHRWYWx1ZTogcHJvcChcImRlZmF1bHRWYWx1ZVwiKSxcbiAgICAgICAgdmFsdWU6IHByb3AoXCJ2YWx1ZVwiKSxcbiAgICAgICAgb25DaGFuZ2UodmFsdWUpIHtcbiAgICAgICAgICBwcm9wKFwib25WYWx1ZUNoYW5nZVwiKT8uKHsgdmFsdWUgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pKSxcbiAgICAgIGhvdmVyZWRWYWx1ZTogYmluZGFibGUoKCkgPT4gKHtcbiAgICAgICAgZGVmYXVsdFZhbHVlOiAtMSxcbiAgICAgICAgb25DaGFuZ2UodmFsdWUpIHtcbiAgICAgICAgICBwcm9wKFwib25Ib3ZlckNoYW5nZVwiKT8uKHsgaG92ZXJlZFZhbHVlOiB2YWx1ZSB9KTtcbiAgICAgICAgfVxuICAgICAgfSkpLFxuICAgICAgZmllbGRzZXREaXNhYmxlZDogYmluZGFibGUoKCkgPT4gKHtcbiAgICAgICAgZGVmYXVsdFZhbHVlOiBmYWxzZVxuICAgICAgfSkpXG4gICAgfTtcbiAgfSxcbiAgd2F0Y2goeyB0cmFjaywgYWN0aW9uLCBwcm9wLCBjb250ZXh0IH0pIHtcbiAgICB0cmFjayhbKCkgPT4gcHJvcChcImFsbG93SGFsZlwiKV0sICgpID0+IHtcbiAgICAgIGFjdGlvbihbXCJyb3VuZFZhbHVlSWZOZWVkZWRcIl0pO1xuICAgIH0pO1xuICAgIHRyYWNrKFsoKSA9PiBjb250ZXh0LmdldChcInZhbHVlXCIpXSwgKCkgPT4ge1xuICAgICAgYWN0aW9uKFtcImRpc3BhdGNoQ2hhbmdlRXZlbnRcIl0pO1xuICAgIH0pO1xuICB9LFxuICBjb21wdXRlZDoge1xuICAgIGlzRGlzYWJsZWQ6ICh7IGNvbnRleHQsIHByb3AgfSkgPT4gISFwcm9wKFwiZGlzYWJsZWRcIikgfHwgY29udGV4dC5nZXQoXCJmaWVsZHNldERpc2FibGVkXCIpLFxuICAgIGlzSW50ZXJhY3RpdmU6ICh7IGNvbXB1dGVkLCBwcm9wIH0pID0+ICEoY29tcHV0ZWQoXCJpc0Rpc2FibGVkXCIpIHx8IHByb3AoXCJyZWFkT25seVwiKSksXG4gICAgaXNIb3ZlcmluZzogKHsgY29udGV4dCB9KSA9PiBjb250ZXh0LmdldChcImhvdmVyZWRWYWx1ZVwiKSA+IC0xXG4gIH0sXG4gIGVmZmVjdHM6IFtcInRyYWNrRm9ybUNvbnRyb2xTdGF0ZVwiXSxcbiAgb246IHtcbiAgICBTRVRfVkFMVUU6IHtcbiAgICAgIGFjdGlvbnM6IFtcInNldFZhbHVlXCJdXG4gICAgfSxcbiAgICBDTEVBUl9WQUxVRToge1xuICAgICAgYWN0aW9uczogW1wiY2xlYXJWYWx1ZVwiXVxuICAgIH1cbiAgfSxcbiAgc3RhdGVzOiB7XG4gICAgaWRsZToge1xuICAgICAgZW50cnk6IFtcImNsZWFySG92ZXJlZFZhbHVlXCJdLFxuICAgICAgb246IHtcbiAgICAgICAgR1JPVVBfUE9JTlRFUl9PVkVSOiB7XG4gICAgICAgICAgdGFyZ2V0OiBcImhvdmVyXCJcbiAgICAgICAgfSxcbiAgICAgICAgRk9DVVM6IHtcbiAgICAgICAgICB0YXJnZXQ6IFwiZm9jdXNcIlxuICAgICAgICB9LFxuICAgICAgICBDTElDSzoge1xuICAgICAgICAgIGFjdGlvbnM6IFtcInNldFZhbHVlXCIsIFwiZm9jdXNBY3RpdmVSYWRpb1wiXVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBmb2N1czoge1xuICAgICAgb246IHtcbiAgICAgICAgUE9JTlRFUl9PVkVSOiB7XG4gICAgICAgICAgYWN0aW9uczogW1wic2V0SG92ZXJlZFZhbHVlXCJdXG4gICAgICAgIH0sXG4gICAgICAgIEdST1VQX1BPSU5URVJfTEVBVkU6IHtcbiAgICAgICAgICBhY3Rpb25zOiBbXCJjbGVhckhvdmVyZWRWYWx1ZVwiXVxuICAgICAgICB9LFxuICAgICAgICBCTFVSOiB7XG4gICAgICAgICAgdGFyZ2V0OiBcImlkbGVcIlxuICAgICAgICB9LFxuICAgICAgICBTUEFDRToge1xuICAgICAgICAgIGd1YXJkOiBcImlzVmFsdWVFbXB0eVwiLFxuICAgICAgICAgIGFjdGlvbnM6IFtcInNldFZhbHVlXCJdXG4gICAgICAgIH0sXG4gICAgICAgIENMSUNLOiB7XG4gICAgICAgICAgYWN0aW9uczogW1wic2V0VmFsdWVcIiwgXCJmb2N1c0FjdGl2ZVJhZGlvXCJdXG4gICAgICAgIH0sXG4gICAgICAgIEFSUk9XX0xFRlQ6IHtcbiAgICAgICAgICBhY3Rpb25zOiBbXCJzZXRQcmV2VmFsdWVcIiwgXCJmb2N1c0FjdGl2ZVJhZGlvXCJdXG4gICAgICAgIH0sXG4gICAgICAgIEFSUk9XX1JJR0hUOiB7XG4gICAgICAgICAgYWN0aW9uczogW1wic2V0TmV4dFZhbHVlXCIsIFwiZm9jdXNBY3RpdmVSYWRpb1wiXVxuICAgICAgICB9LFxuICAgICAgICBIT01FOiB7XG4gICAgICAgICAgYWN0aW9uczogW1wic2V0VmFsdWVUb01pblwiLCBcImZvY3VzQWN0aXZlUmFkaW9cIl1cbiAgICAgICAgfSxcbiAgICAgICAgRU5EOiB7XG4gICAgICAgICAgYWN0aW9uczogW1wic2V0VmFsdWVUb01heFwiLCBcImZvY3VzQWN0aXZlUmFkaW9cIl1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgaG92ZXI6IHtcbiAgICAgIG9uOiB7XG4gICAgICAgIFBPSU5URVJfT1ZFUjoge1xuICAgICAgICAgIGFjdGlvbnM6IFtcInNldEhvdmVyZWRWYWx1ZVwiXVxuICAgICAgICB9LFxuICAgICAgICBHUk9VUF9QT0lOVEVSX0xFQVZFOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgZ3VhcmQ6IFwiaXNSYWRpb0ZvY3VzZWRcIixcbiAgICAgICAgICAgIHRhcmdldDogXCJmb2N1c1wiLFxuICAgICAgICAgICAgYWN0aW9uczogW1wiY2xlYXJIb3ZlcmVkVmFsdWVcIl1cbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHRhcmdldDogXCJpZGxlXCIsXG4gICAgICAgICAgICBhY3Rpb25zOiBbXCJjbGVhckhvdmVyZWRWYWx1ZVwiXVxuICAgICAgICAgIH1cbiAgICAgICAgXSxcbiAgICAgICAgQ0xJQ0s6IHtcbiAgICAgICAgICBhY3Rpb25zOiBbXCJzZXRWYWx1ZVwiLCBcImZvY3VzQWN0aXZlUmFkaW9cIl1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgaW1wbGVtZW50YXRpb25zOiB7XG4gICAgZ3VhcmRzOiB7XG4gICAgICBpc0ludGVyYWN0aXZlOiAoeyBwcm9wIH0pID0+ICEocHJvcChcImRpc2FibGVkXCIpIHx8IHByb3AoXCJyZWFkT25seVwiKSksXG4gICAgICBpc0hvdmVyZWRWYWx1ZUVtcHR5OiAoeyBjb250ZXh0IH0pID0+IGNvbnRleHQuZ2V0KFwiaG92ZXJlZFZhbHVlXCIpID09PSAtMSxcbiAgICAgIGlzVmFsdWVFbXB0eTogKHsgY29udGV4dCB9KSA9PiBjb250ZXh0LmdldChcInZhbHVlXCIpIDw9IDAsXG4gICAgICBpc1JhZGlvRm9jdXNlZDogKHsgc2NvcGUgfSkgPT4gISFnZXRDb250cm9sRWwoc2NvcGUpPy5jb250YWlucyhzY29wZS5nZXRBY3RpdmVFbGVtZW50KCkpXG4gICAgfSxcbiAgICBlZmZlY3RzOiB7XG4gICAgICB0cmFja0Zvcm1Db250cm9sU3RhdGUoeyBjb250ZXh0LCBzY29wZSB9KSB7XG4gICAgICAgIHJldHVybiB0cmFja0Zvcm1Db250cm9sKGdldEhpZGRlbklucHV0RWwoc2NvcGUpLCB7XG4gICAgICAgICAgb25GaWVsZHNldERpc2FibGVkQ2hhbmdlKGRpc2FibGVkKSB7XG4gICAgICAgICAgICBjb250ZXh0LnNldChcImZpZWxkc2V0RGlzYWJsZWRcIiwgZGlzYWJsZWQpO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgb25Gb3JtUmVzZXQoKSB7XG4gICAgICAgICAgICBjb250ZXh0LnNldChcInZhbHVlXCIsIGNvbnRleHQuaW5pdGlhbChcInZhbHVlXCIpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0sXG4gICAgYWN0aW9uczoge1xuICAgICAgY2xlYXJIb3ZlcmVkVmFsdWUoeyBjb250ZXh0IH0pIHtcbiAgICAgICAgY29udGV4dC5zZXQoXCJob3ZlcmVkVmFsdWVcIiwgLTEpO1xuICAgICAgfSxcbiAgICAgIGZvY3VzQWN0aXZlUmFkaW8oeyBzY29wZSwgY29udGV4dCB9KSB7XG4gICAgICAgIHJhZigoKSA9PiBnZXRSYWRpb0VsKHNjb3BlLCBjb250ZXh0LmdldChcInZhbHVlXCIpKT8uZm9jdXMoKSk7XG4gICAgICB9LFxuICAgICAgc2V0UHJldlZhbHVlKHsgY29udGV4dCwgcHJvcCB9KSB7XG4gICAgICAgIGNvbnN0IGZhY3RvciA9IHByb3AoXCJhbGxvd0hhbGZcIikgPyAwLjUgOiAxO1xuICAgICAgICBjb250ZXh0LnNldChcInZhbHVlXCIsIE1hdGgubWF4KDAsIGNvbnRleHQuZ2V0KFwidmFsdWVcIikgLSBmYWN0b3IpKTtcbiAgICAgIH0sXG4gICAgICBzZXROZXh0VmFsdWUoeyBjb250ZXh0LCBwcm9wIH0pIHtcbiAgICAgICAgY29uc3QgZmFjdG9yID0gcHJvcChcImFsbG93SGFsZlwiKSA/IDAuNSA6IDE7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gY29udGV4dC5nZXQoXCJ2YWx1ZVwiKSA9PT0gLTEgPyAwIDogY29udGV4dC5nZXQoXCJ2YWx1ZVwiKTtcbiAgICAgICAgY29udGV4dC5zZXQoXCJ2YWx1ZVwiLCBNYXRoLm1pbihwcm9wKFwiY291bnRcIiksIHZhbHVlICsgZmFjdG9yKSk7XG4gICAgICB9LFxuICAgICAgc2V0VmFsdWVUb01pbih7IGNvbnRleHQgfSkge1xuICAgICAgICBjb250ZXh0LnNldChcInZhbHVlXCIsIDEpO1xuICAgICAgfSxcbiAgICAgIHNldFZhbHVlVG9NYXgoeyBjb250ZXh0LCBwcm9wIH0pIHtcbiAgICAgICAgY29udGV4dC5zZXQoXCJ2YWx1ZVwiLCBwcm9wKFwiY291bnRcIikpO1xuICAgICAgfSxcbiAgICAgIHNldFZhbHVlKHsgY29udGV4dCwgZXZlbnQgfSkge1xuICAgICAgICBjb25zdCBob3ZlcmVkVmFsdWUgPSBjb250ZXh0LmdldChcImhvdmVyZWRWYWx1ZVwiKTtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBob3ZlcmVkVmFsdWUgPT09IC0xID8gZXZlbnQudmFsdWUgOiBob3ZlcmVkVmFsdWU7XG4gICAgICAgIGNvbnRleHQuc2V0KFwidmFsdWVcIiwgdmFsdWUpO1xuICAgICAgfSxcbiAgICAgIGNsZWFyVmFsdWUoeyBjb250ZXh0IH0pIHtcbiAgICAgICAgY29udGV4dC5zZXQoXCJ2YWx1ZVwiLCAtMSk7XG4gICAgICB9LFxuICAgICAgc2V0SG92ZXJlZFZhbHVlKHsgY29udGV4dCwgcHJvcCwgZXZlbnQgfSkge1xuICAgICAgICBjb25zdCBoYWxmID0gcHJvcChcImFsbG93SGFsZlwiKSAmJiBldmVudC5pc01pZHdheTtcbiAgICAgICAgY29uc3QgZmFjdG9yID0gaGFsZiA/IDAuNSA6IDA7XG4gICAgICAgIGNvbnRleHQuc2V0KFwiaG92ZXJlZFZhbHVlXCIsIGV2ZW50LmluZGV4IC0gZmFjdG9yKTtcbiAgICAgIH0sXG4gICAgICByb3VuZFZhbHVlSWZOZWVkZWQoeyBjb250ZXh0LCBwcm9wIH0pIHtcbiAgICAgICAgaWYgKHByb3AoXCJhbGxvd0hhbGZcIikpIHJldHVybjtcbiAgICAgICAgY29udGV4dC5zZXQoXCJ2YWx1ZVwiLCBNYXRoLnJvdW5kKGNvbnRleHQuZ2V0KFwidmFsdWVcIikpKTtcbiAgICAgIH0sXG4gICAgICBkaXNwYXRjaENoYW5nZUV2ZW50KHsgY29udGV4dCwgc2NvcGUgfSkge1xuICAgICAgICBkaXNwYXRjaENoYW5nZUV2ZW50KHNjb3BlLCBjb250ZXh0LmdldChcInZhbHVlXCIpKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn0pO1xudmFyIHByb3BzID0gY3JlYXRlUHJvcHMoKShbXG4gIFwiYWxsb3dIYWxmXCIsXG4gIFwiYXV0b0ZvY3VzXCIsXG4gIFwiY291bnRcIixcbiAgXCJkaXJcIixcbiAgXCJkaXNhYmxlZFwiLFxuICBcImZvcm1cIixcbiAgXCJnZXRSb290Tm9kZVwiLFxuICBcImlkXCIsXG4gIFwiaWRzXCIsXG4gIFwibmFtZVwiLFxuICBcIm9uSG92ZXJDaGFuZ2VcIixcbiAgXCJvblZhbHVlQ2hhbmdlXCIsXG4gIFwicmVxdWlyZWRcIixcbiAgXCJyZWFkT25seVwiLFxuICBcInRyYW5zbGF0aW9uc1wiLFxuICBcInZhbHVlXCIsXG4gIFwiZGVmYXVsdFZhbHVlXCJcbl0pO1xudmFyIHNwbGl0UHJvcHMgPSBjcmVhdGVTcGxpdFByb3BzKHByb3BzKTtcbnZhciBpdGVtUHJvcHMgPSBjcmVhdGVQcm9wcygpKFtcImluZGV4XCJdKTtcbnZhciBzcGxpdEl0ZW1Qcm9wcyA9IGNyZWF0ZVNwbGl0UHJvcHMoaXRlbVByb3BzKTtcblxuZXhwb3J0IHsgYW5hdG9teSwgY29ubmVjdCwgaXRlbVByb3BzLCBtYWNoaW5lLCBwcm9wcywgc3BsaXRJdGVtUHJvcHMsIHNwbGl0UHJvcHMgfTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/rating-group/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/rect-utils/dist/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@zag-js/rect-utils/dist/index.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AffineTransform: () => (/* binding */ AffineTransform),\n/* harmony export */   addPoints: () => (/* binding */ addPoints),\n/* harmony export */   alignRect: () => (/* binding */ alignRect),\n/* harmony export */   clampPoint: () => (/* binding */ clampPoint),\n/* harmony export */   clampSize: () => (/* binding */ clampSize),\n/* harmony export */   closest: () => (/* binding */ closest),\n/* harmony export */   closestSideToPoint: () => (/* binding */ closestSideToPoint),\n/* harmony export */   closestSideToRect: () => (/* binding */ closestSideToRect),\n/* harmony export */   collisions: () => (/* binding */ collisions),\n/* harmony export */   constrainRect: () => (/* binding */ constrainRect),\n/* harmony export */   contains: () => (/* binding */ contains),\n/* harmony export */   containsPoint: () => (/* binding */ containsPoint),\n/* harmony export */   containsRect: () => (/* binding */ containsRect),\n/* harmony export */   createPoint: () => (/* binding */ createPoint),\n/* harmony export */   createRect: () => (/* binding */ createRect),\n/* harmony export */   debugPolygon: () => (/* binding */ debugPolygon),\n/* harmony export */   distance: () => (/* binding */ distance),\n/* harmony export */   distanceBtwEdges: () => (/* binding */ distanceBtwEdges),\n/* harmony export */   distanceFromPoint: () => (/* binding */ distanceFromPoint),\n/* harmony export */   distanceFromRect: () => (/* binding */ distanceFromRect),\n/* harmony export */   expand: () => (/* binding */ expand),\n/* harmony export */   fromRange: () => (/* binding */ fromRange),\n/* harmony export */   getElementPolygon: () => (/* binding */ getElementPolygon),\n/* harmony export */   getElementRect: () => (/* binding */ getElementRect),\n/* harmony export */   getPointAngle: () => (/* binding */ getPointAngle),\n/* harmony export */   getRectCenters: () => (/* binding */ getRectCenters),\n/* harmony export */   getRectCorners: () => (/* binding */ getRectCorners),\n/* harmony export */   getRectEdges: () => (/* binding */ getRectEdges),\n/* harmony export */   getRectFromPoints: () => (/* binding */ getRectFromPoints),\n/* harmony export */   getRotationRect: () => (/* binding */ getRotationRect),\n/* harmony export */   getViewportRect: () => (/* binding */ getViewportRect),\n/* harmony export */   getWindowRect: () => (/* binding */ getWindowRect),\n/* harmony export */   inset: () => (/* binding */ inset),\n/* harmony export */   intersection: () => (/* binding */ intersection),\n/* harmony export */   intersects: () => (/* binding */ intersects),\n/* harmony export */   isPoint: () => (/* binding */ isPoint),\n/* harmony export */   isPointEqual: () => (/* binding */ isPointEqual),\n/* harmony export */   isPointInPolygon: () => (/* binding */ isPointInPolygon),\n/* harmony export */   isRect: () => (/* binding */ isRect),\n/* harmony export */   isRectEqual: () => (/* binding */ isRectEqual),\n/* harmony export */   isSizeEqual: () => (/* binding */ isSizeEqual),\n/* harmony export */   isSymmetric: () => (/* binding */ isSymmetric),\n/* harmony export */   resizeRect: () => (/* binding */ resizeRect),\n/* harmony export */   rotate: () => (/* binding */ rotate),\n/* harmony export */   shift: () => (/* binding */ shift),\n/* harmony export */   shrink: () => (/* binding */ shrink),\n/* harmony export */   subtractPoints: () => (/* binding */ subtractPoints),\n/* harmony export */   toRad: () => (/* binding */ toRad),\n/* harmony export */   union: () => (/* binding */ union)\n/* harmony export */ });\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n// src/affine-transform.ts\nvar AffineTransform = class _AffineTransform {\n  constructor([m00, m01, m02, m10, m11, m12] = [0, 0, 0, 0, 0, 0]) {\n    __publicField(this, \"m00\");\n    __publicField(this, \"m01\");\n    __publicField(this, \"m02\");\n    __publicField(this, \"m10\");\n    __publicField(this, \"m11\");\n    __publicField(this, \"m12\");\n    __publicField(this, \"rotate\", (...args) => {\n      return this.prepend(_AffineTransform.rotate(...args));\n    });\n    __publicField(this, \"scale\", (...args) => {\n      return this.prepend(_AffineTransform.scale(...args));\n    });\n    __publicField(this, \"translate\", (...args) => {\n      return this.prepend(_AffineTransform.translate(...args));\n    });\n    this.m00 = m00;\n    this.m01 = m01;\n    this.m02 = m02;\n    this.m10 = m10;\n    this.m11 = m11;\n    this.m12 = m12;\n  }\n  applyTo(point) {\n    const { x, y } = point;\n    const { m00, m01, m02, m10, m11, m12 } = this;\n    return {\n      x: m00 * x + m01 * y + m02,\n      y: m10 * x + m11 * y + m12\n    };\n  }\n  prepend(other) {\n    return new _AffineTransform([\n      this.m00 * other.m00 + this.m01 * other.m10,\n      // m00\n      this.m00 * other.m01 + this.m01 * other.m11,\n      // m01\n      this.m00 * other.m02 + this.m01 * other.m12 + this.m02,\n      // m02\n      this.m10 * other.m00 + this.m11 * other.m10,\n      // m10\n      this.m10 * other.m01 + this.m11 * other.m11,\n      // m11\n      this.m10 * other.m02 + this.m11 * other.m12 + this.m12\n      // m12\n    ]);\n  }\n  append(other) {\n    return new _AffineTransform([\n      other.m00 * this.m00 + other.m01 * this.m10,\n      // m00\n      other.m00 * this.m01 + other.m01 * this.m11,\n      // m01\n      other.m00 * this.m02 + other.m01 * this.m12 + other.m02,\n      // m02\n      other.m10 * this.m00 + other.m11 * this.m10,\n      // m10\n      other.m10 * this.m01 + other.m11 * this.m11,\n      // m11\n      other.m10 * this.m02 + other.m11 * this.m12 + other.m12\n      // m12\n    ]);\n  }\n  get determinant() {\n    return this.m00 * this.m11 - this.m01 * this.m10;\n  }\n  get isInvertible() {\n    const det = this.determinant;\n    return isFinite(det) && isFinite(this.m02) && isFinite(this.m12) && det !== 0;\n  }\n  invert() {\n    const det = this.determinant;\n    return new _AffineTransform([\n      this.m11 / det,\n      // m00\n      -this.m01 / det,\n      // m01\n      (this.m01 * this.m12 - this.m11 * this.m02) / det,\n      // m02\n      -this.m10 / det,\n      // m10\n      this.m00 / det,\n      // m11\n      (this.m10 * this.m02 - this.m00 * this.m12) / det\n      // m12\n    ]);\n  }\n  get array() {\n    return [this.m00, this.m01, this.m02, this.m10, this.m11, this.m12, 0, 0, 1];\n  }\n  get float32Array() {\n    return new Float32Array(this.array);\n  }\n  // Static\n  static get identity() {\n    return new _AffineTransform([1, 0, 0, 0, 1, 0]);\n  }\n  static rotate(theta, origin) {\n    const rotation = new _AffineTransform([Math.cos(theta), -Math.sin(theta), 0, Math.sin(theta), Math.cos(theta), 0]);\n    if (origin && (origin.x !== 0 || origin.y !== 0)) {\n      return _AffineTransform.multiply(\n        _AffineTransform.translate(origin.x, origin.y),\n        rotation,\n        _AffineTransform.translate(-origin.x, -origin.y)\n      );\n    }\n    return rotation;\n  }\n  static scale(sx, sy = sx, origin = { x: 0, y: 0 }) {\n    const scale = new _AffineTransform([sx, 0, 0, 0, sy, 0]);\n    if (origin.x !== 0 || origin.y !== 0) {\n      return _AffineTransform.multiply(\n        _AffineTransform.translate(origin.x, origin.y),\n        scale,\n        _AffineTransform.translate(-origin.x, -origin.y)\n      );\n    }\n    return scale;\n  }\n  static translate(tx, ty) {\n    return new _AffineTransform([1, 0, tx, 0, 1, ty]);\n  }\n  static multiply(...[first, ...rest]) {\n    if (!first) return _AffineTransform.identity;\n    return rest.reduce((result, item) => result.prepend(item), first);\n  }\n  get a() {\n    return this.m00;\n  }\n  get b() {\n    return this.m10;\n  }\n  get c() {\n    return this.m01;\n  }\n  get d() {\n    return this.m11;\n  }\n  get tx() {\n    return this.m02;\n  }\n  get ty() {\n    return this.m12;\n  }\n  get scaleComponents() {\n    return { x: this.a, y: this.d };\n  }\n  get translationComponents() {\n    return { x: this.tx, y: this.ty };\n  }\n  get skewComponents() {\n    return { x: this.c, y: this.b };\n  }\n  toString() {\n    return `matrix(${this.a}, ${this.b}, ${this.c}, ${this.d}, ${this.tx}, ${this.ty})`;\n  }\n};\n\n// src/align.ts\nfunction hAlign(a, ref, h) {\n  let x = ref.minX;\n  if (h === \"left-inside\") x = ref.minX;\n  if (h === \"left-outside\") x = ref.minX - ref.width;\n  if (h === \"right-inside\") x = ref.maxX - ref.width;\n  if (h === \"right-outside\") x = ref.maxX;\n  if (h === \"center\") x = ref.midX - ref.width / 2;\n  return { ...a, x };\n}\nfunction vAlign(a, ref, v) {\n  let y = ref.minY;\n  if (v === \"top-inside\") y = ref.minY;\n  if (v === \"top-outside\") y = ref.minY - a.height;\n  if (v === \"bottom-inside\") y = ref.maxY - a.height;\n  if (v === \"bottom-outside\") y = ref.maxY;\n  if (v === \"center\") y = ref.midY - a.height / 2;\n  return { ...a, y };\n}\nfunction alignRect(a, ref, options) {\n  const { h, v } = options;\n  return vAlign(hAlign(a, ref, h), ref, v);\n}\n\n// src/angle.ts\nfunction getPointAngle(rect, point, reference = rect.center) {\n  const x = point.x - reference.x;\n  const y = point.y - reference.y;\n  const deg = Math.atan2(x, y) * (180 / Math.PI) + 180;\n  return 360 - deg;\n}\n\n// src/clamp.ts\nvar clamp = (value, min3, max2) => Math.min(Math.max(value, min3), max2);\nvar clampPoint = (position, size, boundaryRect) => {\n  const x = clamp(position.x, boundaryRect.x, boundaryRect.x + boundaryRect.width - size.width);\n  const y = clamp(position.y, boundaryRect.y, boundaryRect.y + boundaryRect.height - size.height);\n  return { x, y };\n};\nvar defaultMinSize = {\n  width: 0,\n  height: 0\n};\nvar defaultMaxSize = {\n  width: Infinity,\n  height: Infinity\n};\nvar clampSize = (size, minSize = defaultMinSize, maxSize = defaultMaxSize) => {\n  return {\n    width: Math.min(Math.max(size.width, minSize.width), maxSize.width),\n    height: Math.min(Math.max(size.height, minSize.height), maxSize.height)\n  };\n};\n\n// src/rect.ts\nvar createPoint = (x, y) => ({ x, y });\nvar subtractPoints = (a, b) => {\n  if (!b) return a;\n  return createPoint(a.x - b.x, a.y - b.y);\n};\nvar addPoints = (a, b) => createPoint(a.x + b.x, a.y + b.y);\nfunction isPoint(v) {\n  return Reflect.has(v, \"x\") && Reflect.has(v, \"y\");\n}\nfunction createRect(r) {\n  const { x, y, width, height } = r;\n  const midX = x + width / 2;\n  const midY = y + height / 2;\n  return {\n    x,\n    y,\n    width,\n    height,\n    minX: x,\n    minY: y,\n    maxX: x + width,\n    maxY: y + height,\n    midX,\n    midY,\n    center: createPoint(midX, midY)\n  };\n}\nfunction isRect(v) {\n  return Reflect.has(v, \"x\") && Reflect.has(v, \"y\") && Reflect.has(v, \"width\") && Reflect.has(v, \"height\");\n}\nfunction getRectCenters(v) {\n  const top = createPoint(v.midX, v.minY);\n  const right = createPoint(v.maxX, v.midY);\n  const bottom = createPoint(v.midX, v.maxY);\n  const left = createPoint(v.minX, v.midY);\n  return { top, right, bottom, left };\n}\nfunction getRectCorners(v) {\n  const top = createPoint(v.minX, v.minY);\n  const right = createPoint(v.maxX, v.minY);\n  const bottom = createPoint(v.maxX, v.maxY);\n  const left = createPoint(v.minX, v.maxY);\n  return { top, right, bottom, left };\n}\nfunction getRectEdges(v) {\n  const c = getRectCorners(v);\n  const top = [c.top, c.right];\n  const right = [c.right, c.bottom];\n  const bottom = [c.left, c.bottom];\n  const left = [c.top, c.left];\n  return { top, right, bottom, left };\n}\n\n// src/intersection.ts\nfunction intersects(a, b) {\n  return a.x < b.maxX && a.y < b.maxY && a.maxX > b.x && a.maxY > b.y;\n}\nfunction intersection(a, b) {\n  const x = Math.max(a.x, b.x);\n  const y = Math.max(a.y, b.y);\n  const x2 = Math.min(a.x + a.width, b.x + b.width);\n  const y2 = Math.min(a.y + a.height, b.y + b.height);\n  return createRect({ x, y, width: x2 - x, height: y2 - y });\n}\nfunction collisions(a, b) {\n  return {\n    top: a.minY <= b.minY,\n    right: a.maxX >= b.maxX,\n    bottom: a.maxY >= b.maxY,\n    left: a.minX <= b.minX\n  };\n}\n\n// src/distance.ts\nfunction distance(a, b = { x: 0, y: 0 }) {\n  return Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2));\n}\nfunction distanceFromPoint(r, p) {\n  let x = 0;\n  let y = 0;\n  if (p.x < r.x) x = r.x - p.x;\n  else if (p.x > r.maxX) x = p.x - r.maxX;\n  if (p.y < r.y) y = r.y - p.y;\n  else if (p.y > r.maxY) y = p.y - r.maxY;\n  return { x, y, value: distance({ x, y }) };\n}\nfunction distanceFromRect(a, b) {\n  if (intersects(a, b)) return { x: 0, y: 0, value: 0 };\n  const left = a.x < b.x ? a : b;\n  const right = b.x < a.x ? a : b;\n  const upper = a.y < b.y ? a : b;\n  const lower = b.y < a.y ? a : b;\n  let x = left.x === right.x ? 0 : right.x - left.maxX;\n  x = Math.max(0, x);\n  let y = upper.y === lower.y ? 0 : lower.y - upper.maxY;\n  y = Math.max(0, y);\n  return { x, y, value: distance({ x, y }) };\n}\nfunction distanceBtwEdges(a, b) {\n  return {\n    left: b.x - a.x,\n    top: b.y - a.y,\n    right: a.maxX - b.maxX,\n    bottom: a.maxY - b.maxY\n  };\n}\n\n// src/closest.ts\nfunction closest(...pts) {\n  return (a) => {\n    const ds = pts.map((b) => distance(b, a));\n    const c = Math.min.apply(Math, ds);\n    return pts[ds.indexOf(c)];\n  };\n}\nfunction closestSideToRect(ref, r) {\n  if (r.maxX <= ref.minX) return \"left\";\n  if (r.minX >= ref.maxX) return \"right\";\n  if (r.maxY <= ref.minY) return \"top\";\n  if (r.minY >= ref.maxY) return \"bottom\";\n  return \"left\";\n}\nfunction closestSideToPoint(ref, p) {\n  const { x, y } = p;\n  const dl = x - ref.minX;\n  const dr = ref.maxX - x;\n  const dt = y - ref.minY;\n  const db = ref.maxY - y;\n  let closest2 = dl;\n  let side = \"left\";\n  if (dr < closest2) {\n    closest2 = dr;\n    side = \"right\";\n  }\n  if (dt < closest2) {\n    closest2 = dt;\n    side = \"top\";\n  }\n  if (db < closest2) {\n    side = \"bottom\";\n  }\n  return side;\n}\n\n// src/constrain.ts\nvar constrainRect = (rect, boundary) => {\n  const left = Math.max(boundary.x, Math.min(rect.x, boundary.x + boundary.width - rect.width));\n  const top = Math.max(boundary.y, Math.min(rect.y, boundary.y + boundary.height - rect.height));\n  return {\n    x: left,\n    y: top,\n    width: Math.min(rect.width, boundary.width),\n    height: Math.min(rect.height, boundary.height)\n  };\n};\n\n// src/contains.ts\nfunction containsPoint(r, p) {\n  return r.minX <= p.x && p.x <= r.maxX && r.minY <= p.y && p.y <= r.maxY;\n}\nfunction containsRect(a, b) {\n  return Object.values(getRectCorners(b)).every((c) => containsPoint(a, c));\n}\nfunction contains(r, v) {\n  return isRect(v) ? containsRect(r, v) : containsPoint(r, v);\n}\n\n// src/equality.ts\nvar isSizeEqual = (a, b) => {\n  return a.width === b?.width && a.height === b?.height;\n};\nvar isPointEqual = (a, b) => {\n  return a.x === b?.x && a.y === b?.y;\n};\nvar isRectEqual = (a, b) => {\n  return isPointEqual(a, b) && isSizeEqual(a, b);\n};\n\n// src/from-element.ts\nvar styleCache = /* @__PURE__ */ new WeakMap();\nfunction getCacheComputedStyle(el) {\n  if (!styleCache.has(el)) {\n    const win = el.ownerDocument.defaultView || window;\n    styleCache.set(el, win.getComputedStyle(el));\n  }\n  return styleCache.get(el);\n}\nfunction getElementRect(el, opts = {}) {\n  return createRect(getClientRect(el, opts));\n}\nfunction getClientRect(el, opts = {}) {\n  const { excludeScrollbar = false, excludeBorders = false } = opts;\n  const { x, y, width, height } = el.getBoundingClientRect();\n  const r = { x, y, width, height };\n  const style = getCacheComputedStyle(el);\n  const { borderLeftWidth, borderTopWidth, borderRightWidth, borderBottomWidth } = style;\n  const borderXWidth = sum(borderLeftWidth, borderRightWidth);\n  const borderYWidth = sum(borderTopWidth, borderBottomWidth);\n  if (excludeBorders) {\n    r.width -= borderXWidth;\n    r.height -= borderYWidth;\n    r.x += px(borderLeftWidth);\n    r.y += px(borderTopWidth);\n  }\n  if (excludeScrollbar) {\n    const scrollbarWidth = el.offsetWidth - el.clientWidth - borderXWidth;\n    const scrollbarHeight = el.offsetHeight - el.clientHeight - borderYWidth;\n    r.width -= scrollbarWidth;\n    r.height -= scrollbarHeight;\n  }\n  return r;\n}\nvar px = (v) => parseFloat(v.replace(\"px\", \"\"));\nvar sum = (...vals) => vals.reduce((sum2, v) => sum2 + (v ? px(v) : 0), 0);\n\n// src/from-points.ts\nfunction getRectFromPoints(...pts) {\n  const xs = pts.map((p) => p.x);\n  const ys = pts.map((p) => p.y);\n  const x = Math.min(...xs);\n  const y = Math.min(...ys);\n  const width = Math.max(...xs) - x;\n  const height = Math.max(...ys) - y;\n  return createRect({ x, y, width, height });\n}\n\n// src/union.ts\nvar { min, max } = Math;\nfunction union(...rs) {\n  const pMin = {\n    x: min(...rs.map((r) => r.minX)),\n    y: min(...rs.map((r) => r.minY))\n  };\n  const pMax = {\n    x: max(...rs.map((r) => r.maxX)),\n    y: max(...rs.map((r) => r.maxY))\n  };\n  return getRectFromPoints(pMin, pMax);\n}\n\n// src/from-range.ts\nfunction fromRange(range) {\n  let rs = [];\n  const rects = Array.from(range.getClientRects());\n  if (rects.length) {\n    rs = rs.concat(rects.map(createRect));\n    return union.apply(void 0, rs);\n  }\n  let start = range.startContainer;\n  if (start.nodeType === Node.TEXT_NODE) {\n    start = start.parentNode;\n  }\n  if (start instanceof HTMLElement) {\n    const r = getElementRect(start);\n    rs.push({ ...r, x: r.maxX, width: 0 });\n  }\n  return union.apply(void 0, rs);\n}\n\n// src/from-rotation.ts\nfunction toRad(d) {\n  return d % 360 * Math.PI / 180;\n}\nfunction rotate(a, d, c) {\n  const r = toRad(d);\n  const sin = Math.sin(r);\n  const cos = Math.cos(r);\n  const x = a.x - c.x;\n  const y = a.y - c.y;\n  return {\n    x: c.x + x * cos - y * sin,\n    y: c.y + x * sin + y * cos\n  };\n}\nfunction getRotationRect(r, deg) {\n  const rr = Object.values(getRectCorners(r)).map((p) => rotate(p, deg, r.center));\n  const xs = rr.map((p) => p.x);\n  const ys = rr.map((p) => p.y);\n  const minX = Math.min(...xs);\n  const minY = Math.min(...ys);\n  const maxX = Math.max(...xs);\n  const maxY = Math.max(...ys);\n  return createRect({\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  });\n}\n\n// src/from-window.ts\nfunction getWindowRect(win, opts = {}) {\n  return createRect(getViewportRect(win, opts));\n}\nfunction getViewportRect(win, opts) {\n  const { excludeScrollbar = false } = opts;\n  const { innerWidth, innerHeight, document: doc, visualViewport } = win;\n  const width = visualViewport?.width || innerWidth;\n  const height = visualViewport?.height || innerHeight;\n  const rect = { x: 0, y: 0, width, height };\n  if (excludeScrollbar) {\n    const scrollbarWidth = innerWidth - doc.documentElement.clientWidth;\n    const scrollbarHeight = innerHeight - doc.documentElement.clientHeight;\n    rect.width -= scrollbarWidth;\n    rect.height -= scrollbarHeight;\n  }\n  return rect;\n}\n\n// src/operations.ts\nvar isSymmetric = (v) => \"dx\" in v || \"dy\" in v;\nfunction inset(r, i) {\n  const v = isSymmetric(i) ? { left: i.dx, right: i.dx, top: i.dy, bottom: i.dy } : i;\n  const { top = 0, right = 0, bottom = 0, left = 0 } = v;\n  return createRect({\n    x: r.x + left,\n    y: r.y + top,\n    width: r.width - left - right,\n    height: r.height - top - bottom\n  });\n}\nfunction expand(r, v) {\n  const value = typeof v === \"number\" ? { dx: -v, dy: -v } : v;\n  return inset(r, value);\n}\nfunction shrink(r, v) {\n  const value = typeof v === \"number\" ? { dx: -v, dy: -v } : v;\n  return inset(r, value);\n}\nfunction shift(r, o) {\n  const { x = 0, y = 0 } = o;\n  return createRect({\n    x: r.x + x,\n    y: r.y + y,\n    width: r.width,\n    height: r.height\n  });\n}\n\n// src/polygon.ts\nfunction getElementPolygon(rectValue, placement) {\n  const rect = createRect(rectValue);\n  const { top, right, left, bottom } = getRectCorners(rect);\n  const [base] = placement.split(\"-\");\n  return {\n    top: [left, top, right, bottom],\n    right: [top, right, bottom, left],\n    bottom: [top, left, bottom, right],\n    left: [right, top, left, bottom]\n  }[base];\n}\nfunction isPointInPolygon(polygon, point) {\n  const { x, y } = point;\n  let c = false;\n  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n    const xi = polygon[i].x;\n    const yi = polygon[i].y;\n    const xj = polygon[j].x;\n    const yj = polygon[j].y;\n    if (yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi) {\n      c = !c;\n    }\n  }\n  return c;\n}\nfunction createPolygonElement() {\n  const id = \"debug-polygon\";\n  const existingPolygon = document.getElementById(id);\n  if (existingPolygon) {\n    return existingPolygon;\n  }\n  const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n  Object.assign(svg.style, {\n    top: \"0\",\n    left: \"0\",\n    width: \"100%\",\n    height: \"100%\",\n    opacity: \"0.15\",\n    position: \"fixed\",\n    pointerEvents: \"none\",\n    fill: \"red\"\n  });\n  const polygon = document.createElementNS(\"http://www.w3.org/2000/svg\", \"polygon\");\n  polygon.setAttribute(\"id\", id);\n  polygon.setAttribute(\"points\", \"0,0 0,0\");\n  svg.appendChild(polygon);\n  document.body.appendChild(svg);\n  return polygon;\n}\nfunction debugPolygon(polygon) {\n  const el = createPolygonElement();\n  const points = polygon.map((point) => `${point.x},${point.y}`).join(\" \");\n  el.setAttribute(\"points\", points);\n  return () => {\n    el.remove();\n  };\n}\n\n// src/compass.ts\nvar compassDirectionMap = {\n  n: { x: 0.5, y: 0 },\n  ne: { x: 1, y: 0 },\n  e: { x: 1, y: 0.5 },\n  se: { x: 1, y: 1 },\n  s: { x: 0.5, y: 1 },\n  sw: { x: 0, y: 1 },\n  w: { x: 0, y: 0.5 },\n  nw: { x: 0, y: 0 }\n};\nvar oppositeDirectionMap = {\n  n: \"s\",\n  ne: \"sw\",\n  e: \"w\",\n  se: \"nw\",\n  s: \"n\",\n  sw: \"ne\",\n  w: \"e\",\n  nw: \"se\"\n};\n\n// src/resize.ts\nvar { sign, abs, min: min2 } = Math;\nfunction getRectExtentPoint(rect, direction) {\n  const { minX, minY, maxX, maxY, midX, midY } = rect;\n  const x = direction.includes(\"w\") ? minX : direction.includes(\"e\") ? maxX : midX;\n  const y = direction.includes(\"n\") ? minY : direction.includes(\"s\") ? maxY : midY;\n  return { x, y };\n}\nfunction getOppositeDirection(direction) {\n  return oppositeDirectionMap[direction];\n}\nfunction resizeRect(rect, offset, direction, opts) {\n  const { scalingOriginMode, lockAspectRatio } = opts;\n  const extent = getRectExtentPoint(rect, direction);\n  const oppositeDirection = getOppositeDirection(direction);\n  const oppositeExtent = getRectExtentPoint(rect, oppositeDirection);\n  if (scalingOriginMode === \"center\") {\n    offset = { x: offset.x * 2, y: offset.y * 2 };\n  }\n  const newExtent = {\n    x: extent.x + offset.x,\n    y: extent.y + offset.y\n  };\n  const multiplier = {\n    x: compassDirectionMap[direction].x * 2 - 1,\n    y: compassDirectionMap[direction].y * 2 - 1\n  };\n  const newSize = {\n    width: newExtent.x - oppositeExtent.x,\n    height: newExtent.y - oppositeExtent.y\n  };\n  const scaleX = multiplier.x * newSize.width / rect.width;\n  const scaleY = multiplier.y * newSize.height / rect.height;\n  const largestMagnitude = abs(scaleX) > abs(scaleY) ? scaleX : scaleY;\n  const scale = lockAspectRatio ? { x: largestMagnitude, y: largestMagnitude } : {\n    x: extent.x === oppositeExtent.x ? 1 : scaleX,\n    y: extent.y === oppositeExtent.y ? 1 : scaleY\n  };\n  if (extent.y === oppositeExtent.y) {\n    scale.y = abs(scale.y);\n  } else if (sign(scale.y) !== sign(scaleY)) {\n    scale.y *= -1;\n  }\n  if (extent.x === oppositeExtent.x) {\n    scale.x = abs(scale.x);\n  } else if (sign(scale.x) !== sign(scaleX)) {\n    scale.x *= -1;\n  }\n  switch (scalingOriginMode) {\n    case \"extent\":\n      return transformRect(rect, AffineTransform.scale(scale.x, scale.y, oppositeExtent), false);\n    case \"center\":\n      return transformRect(\n        rect,\n        AffineTransform.scale(scale.x, scale.y, {\n          x: rect.midX,\n          y: rect.midY\n        }),\n        false\n      );\n  }\n}\nfunction createRectFromPoints(initialPoint, finalPoint, normalized = true) {\n  if (normalized) {\n    return {\n      x: min2(finalPoint.x, initialPoint.x),\n      y: min2(finalPoint.y, initialPoint.y),\n      width: abs(finalPoint.x - initialPoint.x),\n      height: abs(finalPoint.y - initialPoint.y)\n    };\n  }\n  return {\n    x: initialPoint.x,\n    y: initialPoint.y,\n    width: finalPoint.x - initialPoint.x,\n    height: finalPoint.y - initialPoint.y\n  };\n}\nfunction transformRect(rect, transform, normalized = true) {\n  const p1 = transform.applyTo({ x: rect.minX, y: rect.minY });\n  const p2 = transform.applyTo({ x: rect.maxX, y: rect.maxY });\n  return createRectFromPoints(p1, p2, normalized);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/rect-utils/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/remove-scroll/dist/index.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/@zag-js/remove-scroll/dist/index.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   preventBodyScroll: () => (/* binding */ preventBodyScroll)\n/* harmony export */ });\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n\n\n// src/index.ts\nvar LOCK_CLASSNAME = \"data-scroll-lock\";\nfunction getPaddingProperty(documentElement) {\n  const documentLeft = documentElement.getBoundingClientRect().left;\n  const scrollbarX = Math.round(documentLeft) + documentElement.scrollLeft;\n  return scrollbarX ? \"paddingLeft\" : \"paddingRight\";\n}\nfunction preventBodyScroll(_document) {\n  const doc = _document ?? document;\n  const win = doc.defaultView ?? window;\n  const { documentElement, body } = doc;\n  const locked = body.hasAttribute(LOCK_CLASSNAME);\n  if (locked) return;\n  const scrollbarWidth = win.innerWidth - documentElement.clientWidth;\n  body.setAttribute(LOCK_CLASSNAME, \"\");\n  const setScrollbarWidthProperty = () => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.setStyleProperty)(documentElement, \"--scrollbar-width\", `${scrollbarWidth}px`);\n  const paddingProperty = getPaddingProperty(documentElement);\n  const setBodyStyle = () => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.setStyle)(body, {\n    overflow: \"hidden\",\n    [paddingProperty]: `${scrollbarWidth}px`\n  });\n  const setBodyStyleIOS = () => {\n    const { scrollX, scrollY, visualViewport } = win;\n    const offsetLeft = visualViewport?.offsetLeft ?? 0;\n    const offsetTop = visualViewport?.offsetTop ?? 0;\n    const restoreStyle = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.setStyle)(body, {\n      position: \"fixed\",\n      overflow: \"hidden\",\n      top: `${-(scrollY - Math.floor(offsetTop))}px`,\n      left: `${-(scrollX - Math.floor(offsetLeft))}px`,\n      right: \"0\",\n      [paddingProperty]: `${scrollbarWidth}px`\n    });\n    return () => {\n      restoreStyle?.();\n      win.scrollTo({ left: scrollX, top: scrollY, behavior: \"instant\" });\n    };\n  };\n  const cleanups = [setScrollbarWidthProperty(), (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isIos)() ? setBodyStyleIOS() : setBodyStyle()];\n  return () => {\n    cleanups.forEach((fn) => fn?.());\n    body.removeAttribute(LOCK_CLASSNAME);\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9yZW1vdmUtc2Nyb2xsL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXNFOztBQUV0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsd0JBQXdCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLG1FQUFnQiwwQ0FBMEMsZUFBZTtBQUNuSDtBQUNBLDZCQUE2QiwyREFBUTtBQUNyQztBQUNBLDBCQUEwQixlQUFlO0FBQ3pDLEdBQUc7QUFDSDtBQUNBLFlBQVksbUNBQW1DO0FBQy9DO0FBQ0E7QUFDQSx5QkFBeUIsMkRBQVE7QUFDakM7QUFDQTtBQUNBLGNBQWMsbUNBQW1DO0FBQ2pELGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0EsNEJBQTRCLGVBQWU7QUFDM0MsS0FBSztBQUNMO0FBQ0E7QUFDQSxxQkFBcUIsa0RBQWtEO0FBQ3ZFO0FBQ0E7QUFDQSxpREFBaUQsd0RBQUs7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFNkIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9yYXVuYXFwbGFoYS9EZXNrdG9wL3BpY2stYS1ib3QtMjAyNS9ub2RlX21vZHVsZXMvQHphZy1qcy9yZW1vdmUtc2Nyb2xsL2Rpc3QvaW5kZXgubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNldFN0eWxlUHJvcGVydHksIHNldFN0eWxlLCBpc0lvcyB9IGZyb20gJ0B6YWctanMvZG9tLXF1ZXJ5JztcblxuLy8gc3JjL2luZGV4LnRzXG52YXIgTE9DS19DTEFTU05BTUUgPSBcImRhdGEtc2Nyb2xsLWxvY2tcIjtcbmZ1bmN0aW9uIGdldFBhZGRpbmdQcm9wZXJ0eShkb2N1bWVudEVsZW1lbnQpIHtcbiAgY29uc3QgZG9jdW1lbnRMZWZ0ID0gZG9jdW1lbnRFbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQ7XG4gIGNvbnN0IHNjcm9sbGJhclggPSBNYXRoLnJvdW5kKGRvY3VtZW50TGVmdCkgKyBkb2N1bWVudEVsZW1lbnQuc2Nyb2xsTGVmdDtcbiAgcmV0dXJuIHNjcm9sbGJhclggPyBcInBhZGRpbmdMZWZ0XCIgOiBcInBhZGRpbmdSaWdodFwiO1xufVxuZnVuY3Rpb24gcHJldmVudEJvZHlTY3JvbGwoX2RvY3VtZW50KSB7XG4gIGNvbnN0IGRvYyA9IF9kb2N1bWVudCA/PyBkb2N1bWVudDtcbiAgY29uc3Qgd2luID0gZG9jLmRlZmF1bHRWaWV3ID8/IHdpbmRvdztcbiAgY29uc3QgeyBkb2N1bWVudEVsZW1lbnQsIGJvZHkgfSA9IGRvYztcbiAgY29uc3QgbG9ja2VkID0gYm9keS5oYXNBdHRyaWJ1dGUoTE9DS19DTEFTU05BTUUpO1xuICBpZiAobG9ja2VkKSByZXR1cm47XG4gIGNvbnN0IHNjcm9sbGJhcldpZHRoID0gd2luLmlubmVyV2lkdGggLSBkb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGg7XG4gIGJvZHkuc2V0QXR0cmlidXRlKExPQ0tfQ0xBU1NOQU1FLCBcIlwiKTtcbiAgY29uc3Qgc2V0U2Nyb2xsYmFyV2lkdGhQcm9wZXJ0eSA9ICgpID0+IHNldFN0eWxlUHJvcGVydHkoZG9jdW1lbnRFbGVtZW50LCBcIi0tc2Nyb2xsYmFyLXdpZHRoXCIsIGAke3Njcm9sbGJhcldpZHRofXB4YCk7XG4gIGNvbnN0IHBhZGRpbmdQcm9wZXJ0eSA9IGdldFBhZGRpbmdQcm9wZXJ0eShkb2N1bWVudEVsZW1lbnQpO1xuICBjb25zdCBzZXRCb2R5U3R5bGUgPSAoKSA9PiBzZXRTdHlsZShib2R5LCB7XG4gICAgb3ZlcmZsb3c6IFwiaGlkZGVuXCIsXG4gICAgW3BhZGRpbmdQcm9wZXJ0eV06IGAke3Njcm9sbGJhcldpZHRofXB4YFxuICB9KTtcbiAgY29uc3Qgc2V0Qm9keVN0eWxlSU9TID0gKCkgPT4ge1xuICAgIGNvbnN0IHsgc2Nyb2xsWCwgc2Nyb2xsWSwgdmlzdWFsVmlld3BvcnQgfSA9IHdpbjtcbiAgICBjb25zdCBvZmZzZXRMZWZ0ID0gdmlzdWFsVmlld3BvcnQ/Lm9mZnNldExlZnQgPz8gMDtcbiAgICBjb25zdCBvZmZzZXRUb3AgPSB2aXN1YWxWaWV3cG9ydD8ub2Zmc2V0VG9wID8/IDA7XG4gICAgY29uc3QgcmVzdG9yZVN0eWxlID0gc2V0U3R5bGUoYm9keSwge1xuICAgICAgcG9zaXRpb246IFwiZml4ZWRcIixcbiAgICAgIG92ZXJmbG93OiBcImhpZGRlblwiLFxuICAgICAgdG9wOiBgJHstKHNjcm9sbFkgLSBNYXRoLmZsb29yKG9mZnNldFRvcCkpfXB4YCxcbiAgICAgIGxlZnQ6IGAkey0oc2Nyb2xsWCAtIE1hdGguZmxvb3Iob2Zmc2V0TGVmdCkpfXB4YCxcbiAgICAgIHJpZ2h0OiBcIjBcIixcbiAgICAgIFtwYWRkaW5nUHJvcGVydHldOiBgJHtzY3JvbGxiYXJXaWR0aH1weGBcbiAgICB9KTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgcmVzdG9yZVN0eWxlPy4oKTtcbiAgICAgIHdpbi5zY3JvbGxUbyh7IGxlZnQ6IHNjcm9sbFgsIHRvcDogc2Nyb2xsWSwgYmVoYXZpb3I6IFwiaW5zdGFudFwiIH0pO1xuICAgIH07XG4gIH07XG4gIGNvbnN0IGNsZWFudXBzID0gW3NldFNjcm9sbGJhcldpZHRoUHJvcGVydHkoKSwgaXNJb3MoKSA/IHNldEJvZHlTdHlsZUlPUygpIDogc2V0Qm9keVN0eWxlKCldO1xuICByZXR1cm4gKCkgPT4ge1xuICAgIGNsZWFudXBzLmZvckVhY2goKGZuKSA9PiBmbj8uKCkpO1xuICAgIGJvZHkucmVtb3ZlQXR0cmlidXRlKExPQ0tfQ0xBU1NOQU1FKTtcbiAgfTtcbn1cblxuZXhwb3J0IHsgcHJldmVudEJvZHlTY3JvbGwgfTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/remove-scroll/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/select/dist/index.mjs":
/*!****************************************************!*\
  !*** ./node_modules/@zag-js/select/dist/index.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   collection: () => (/* binding */ collection),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   itemGroupLabelProps: () => (/* binding */ itemGroupLabelProps),\n/* harmony export */   itemGroupProps: () => (/* binding */ itemGroupProps),\n/* harmony export */   itemProps: () => (/* binding */ itemProps),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitItemGroupLabelProps: () => (/* binding */ splitItemGroupLabelProps),\n/* harmony export */   splitItemGroupProps: () => (/* binding */ splitItemGroupProps),\n/* harmony export */   splitItemProps: () => (/* binding */ splitItemProps),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/collection */ \"(ssr)/./node_modules/@zag-js/collection/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_popper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/popper */ \"(ssr)/./node_modules/@zag-js/popper/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_dismissable__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/dismissable */ \"(ssr)/./node_modules/@zag-js/dismissable/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n\n\n// src/select.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"select\").parts(\n  \"label\",\n  \"positioner\",\n  \"trigger\",\n  \"indicator\",\n  \"clearTrigger\",\n  \"item\",\n  \"itemText\",\n  \"itemIndicator\",\n  \"itemGroup\",\n  \"itemGroupLabel\",\n  \"list\",\n  \"content\",\n  \"root\",\n  \"control\",\n  \"valueText\"\n);\nvar parts = anatomy.build();\nvar collection = (options) => {\n  return new _zag_js_collection__WEBPACK_IMPORTED_MODULE_1__.ListCollection(options);\n};\ncollection.empty = () => {\n  return new _zag_js_collection__WEBPACK_IMPORTED_MODULE_1__.ListCollection({ items: [] });\n};\n\n// src/select.dom.ts\nvar getRootId = (ctx) => ctx.ids?.root ?? `select:${ctx.id}`;\nvar getContentId = (ctx) => ctx.ids?.content ?? `select:${ctx.id}:content`;\nvar getTriggerId = (ctx) => ctx.ids?.trigger ?? `select:${ctx.id}:trigger`;\nvar getClearTriggerId = (ctx) => ctx.ids?.clearTrigger ?? `select:${ctx.id}:clear-trigger`;\nvar getLabelId = (ctx) => ctx.ids?.label ?? `select:${ctx.id}:label`;\nvar getControlId = (ctx) => ctx.ids?.control ?? `select:${ctx.id}:control`;\nvar getItemId = (ctx, id) => ctx.ids?.item?.(id) ?? `select:${ctx.id}:option:${id}`;\nvar getHiddenSelectId = (ctx) => ctx.ids?.hiddenSelect ?? `select:${ctx.id}:select`;\nvar getPositionerId = (ctx) => ctx.ids?.positioner ?? `select:${ctx.id}:positioner`;\nvar getItemGroupId = (ctx, id) => ctx.ids?.itemGroup?.(id) ?? `select:${ctx.id}:optgroup:${id}`;\nvar getItemGroupLabelId = (ctx, id) => ctx.ids?.itemGroupLabel?.(id) ?? `select:${ctx.id}:optgroup-label:${id}`;\nvar getHiddenSelectEl = (ctx) => ctx.getById(getHiddenSelectId(ctx));\nvar getContentEl = (ctx) => ctx.getById(getContentId(ctx));\nvar getTriggerEl = (ctx) => ctx.getById(getTriggerId(ctx));\nvar getClearTriggerEl = (ctx) => ctx.getById(getClearTriggerId(ctx));\nvar getPositionerEl = (ctx) => ctx.getById(getPositionerId(ctx));\nvar getItemEl = (ctx, id) => ctx.getById(getItemId(ctx, id));\n\n// src/select.connect.ts\nfunction connect(service, normalize) {\n  const { context, prop, scope, state, computed, send } = service;\n  const disabled = prop(\"disabled\") || context.get(\"fieldsetDisabled\");\n  const invalid = prop(\"invalid\");\n  const readOnly = prop(\"readOnly\");\n  const composite = prop(\"composite\");\n  const collection2 = prop(\"collection\");\n  const open = state.hasTag(\"open\");\n  const focused = state.matches(\"focused\");\n  const highlightedValue = context.get(\"highlightedValue\");\n  const highlightedItem = context.get(\"highlightedItem\");\n  const selectedItems = context.get(\"selectedItems\");\n  const currentPlacement = context.get(\"currentPlacement\");\n  const isTypingAhead = computed(\"isTypingAhead\");\n  const interactive = computed(\"isInteractive\");\n  const ariaActiveDescendant = highlightedValue ? getItemId(scope, highlightedValue) : void 0;\n  function getItemState(props2) {\n    const _disabled = collection2.getItemDisabled(props2.item);\n    const value = collection2.getItemValue(props2.item);\n    (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.ensure)(value, () => `[zag-js] No value found for item ${JSON.stringify(props2.item)}`);\n    return {\n      value,\n      disabled: Boolean(disabled || _disabled),\n      highlighted: highlightedValue === value,\n      selected: context.get(\"value\").includes(value)\n    };\n  }\n  const popperStyles = (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacementStyles)({\n    ...prop(\"positioning\"),\n    placement: currentPlacement\n  });\n  return {\n    open,\n    focused,\n    empty: context.get(\"value\").length === 0,\n    highlightedItem,\n    highlightedValue,\n    selectedItems,\n    hasSelectedItems: computed(\"hasSelectedItems\"),\n    value: context.get(\"value\"),\n    valueAsString: context.get(\"valueAsString\"),\n    collection: collection2,\n    multiple: !!prop(\"multiple\"),\n    disabled: !!disabled,\n    reposition(options = {}) {\n      send({ type: \"POSITIONING.SET\", options });\n    },\n    focus() {\n      getTriggerEl(scope)?.focus({ preventScroll: true });\n    },\n    setOpen(nextOpen) {\n      const open2 = state.hasTag(\"open\");\n      if (open2 === nextOpen) return;\n      send({ type: nextOpen ? \"OPEN\" : \"CLOSE\" });\n    },\n    selectValue(value) {\n      send({ type: \"ITEM.SELECT\", value });\n    },\n    setValue(value) {\n      send({ type: \"VALUE.SET\", value });\n    },\n    selectAll() {\n      send({ type: \"VALUE.SET\", value: collection2.getValues() });\n    },\n    highlightValue(value) {\n      send({ type: \"HIGHLIGHTED_VALUE.SET\", value });\n    },\n    clearValue(value) {\n      if (value) {\n        send({ type: \"ITEM.CLEAR\", value });\n      } else {\n        send({ type: \"VALUE.CLEAR\" });\n      }\n    },\n    getItemState,\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        dir: prop(\"dir\"),\n        id: getRootId(scope),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(invalid),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(readOnly)\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        dir: prop(\"dir\"),\n        id: getLabelId(scope),\n        ...parts.label.attrs,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(invalid),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(readOnly),\n        htmlFor: getHiddenSelectId(scope),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          getTriggerEl(scope)?.focus({ preventScroll: true });\n        }\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        dir: prop(\"dir\"),\n        id: getControlId(scope),\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(focused),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(invalid)\n      });\n    },\n    getValueTextProps() {\n      return normalize.element({\n        ...parts.valueText.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(invalid),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(focused)\n      });\n    },\n    getTriggerProps() {\n      return normalize.button({\n        id: getTriggerId(scope),\n        disabled,\n        dir: prop(\"dir\"),\n        type: \"button\",\n        role: \"combobox\",\n        \"aria-controls\": getContentId(scope),\n        \"aria-expanded\": open,\n        \"aria-haspopup\": \"listbox\",\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-invalid\": invalid,\n        \"aria-labelledby\": getLabelId(scope),\n        ...parts.trigger.attrs,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(invalid),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(readOnly),\n        \"data-placement\": currentPlacement,\n        \"data-placeholder-shown\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(!computed(\"hasSelectedItems\")),\n        onClick(event) {\n          if (!interactive) return;\n          if (event.defaultPrevented) return;\n          send({ type: \"TRIGGER.CLICK\" });\n        },\n        onFocus() {\n          send({ type: \"TRIGGER.FOCUS\" });\n        },\n        onBlur() {\n          send({ type: \"TRIGGER.BLUR\" });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          const keyMap = {\n            ArrowUp() {\n              send({ type: \"TRIGGER.ARROW_UP\" });\n            },\n            ArrowDown(event2) {\n              send({ type: event2.altKey ? \"OPEN\" : \"TRIGGER.ARROW_DOWN\" });\n            },\n            ArrowLeft() {\n              send({ type: \"TRIGGER.ARROW_LEFT\" });\n            },\n            ArrowRight() {\n              send({ type: \"TRIGGER.ARROW_RIGHT\" });\n            },\n            Home() {\n              send({ type: \"TRIGGER.HOME\" });\n            },\n            End() {\n              send({ type: \"TRIGGER.END\" });\n            },\n            Enter() {\n              send({ type: \"TRIGGER.ENTER\" });\n            },\n            Space(event2) {\n              if (isTypingAhead) {\n                send({ type: \"TRIGGER.TYPEAHEAD\", key: event2.key });\n              } else {\n                send({ type: \"TRIGGER.ENTER\" });\n              }\n            }\n          };\n          const exec = keyMap[(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.getEventKey)(event, {\n            dir: prop(\"dir\"),\n            orientation: \"vertical\"\n          })];\n          if (exec) {\n            exec(event);\n            event.preventDefault();\n            return;\n          }\n          if (_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.getByTypeahead.isValidEvent(event)) {\n            send({ type: \"TRIGGER.TYPEAHEAD\", key: event.key });\n            event.preventDefault();\n          }\n        }\n      });\n    },\n    getIndicatorProps() {\n      return normalize.element({\n        ...parts.indicator.attrs,\n        dir: prop(\"dir\"),\n        \"aria-hidden\": true,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(invalid),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(readOnly)\n      });\n    },\n    getItemProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        id: getItemId(scope, itemState.value),\n        role: \"option\",\n        ...parts.item.attrs,\n        dir: prop(\"dir\"),\n        \"data-value\": itemState.value,\n        \"aria-selected\": itemState.selected,\n        \"data-state\": itemState.selected ? \"checked\" : \"unchecked\",\n        \"data-highlighted\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(itemState.highlighted),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(itemState.disabled),\n        \"aria-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.ariaAttr)(itemState.disabled),\n        onPointerMove(event) {\n          if (itemState.disabled || event.pointerType !== \"mouse\") return;\n          if (itemState.value === highlightedValue) return;\n          send({ type: \"ITEM.POINTER_MOVE\", value: itemState.value });\n        },\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (itemState.disabled) return;\n          send({ type: \"ITEM.CLICK\", src: \"pointerup\", value: itemState.value });\n        },\n        onPointerLeave(event) {\n          if (itemState.disabled) return;\n          if (props2.persistFocus) return;\n          if (event.pointerType !== \"mouse\") return;\n          const pointerMoved = service.event.previous()?.type.includes(\"POINTER\");\n          if (!pointerMoved) return;\n          send({ type: \"ITEM.POINTER_LEAVE\" });\n        }\n      });\n    },\n    getItemTextProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        ...parts.itemText.attrs,\n        \"data-state\": itemState.selected ? \"checked\" : \"unchecked\",\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(itemState.disabled),\n        \"data-highlighted\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(itemState.highlighted)\n      });\n    },\n    getItemIndicatorProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        \"aria-hidden\": true,\n        ...parts.itemIndicator.attrs,\n        \"data-state\": itemState.selected ? \"checked\" : \"unchecked\",\n        hidden: !itemState.selected\n      });\n    },\n    getItemGroupLabelProps(props2) {\n      const { htmlFor } = props2;\n      return normalize.element({\n        ...parts.itemGroupLabel.attrs,\n        id: getItemGroupLabelId(scope, htmlFor),\n        dir: prop(\"dir\"),\n        role: \"presentation\"\n      });\n    },\n    getItemGroupProps(props2) {\n      const { id } = props2;\n      return normalize.element({\n        ...parts.itemGroup.attrs,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(disabled),\n        id: getItemGroupId(scope, id),\n        \"aria-labelledby\": getItemGroupLabelId(scope, id),\n        role: \"group\",\n        dir: prop(\"dir\")\n      });\n    },\n    getClearTriggerProps() {\n      return normalize.button({\n        ...parts.clearTrigger.attrs,\n        id: getClearTriggerId(scope),\n        type: \"button\",\n        \"aria-label\": \"Clear value\",\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(invalid),\n        disabled,\n        hidden: !computed(\"hasSelectedItems\"),\n        dir: prop(\"dir\"),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send({ type: \"CLEAR.CLICK\" });\n        }\n      });\n    },\n    getHiddenSelectProps() {\n      const value = context.get(\"value\");\n      const defaultValue = prop(\"multiple\") ? value : value?.[0];\n      return normalize.select({\n        name: prop(\"name\"),\n        form: prop(\"form\"),\n        disabled,\n        multiple: prop(\"multiple\"),\n        required: prop(\"required\"),\n        \"aria-hidden\": true,\n        id: getHiddenSelectId(scope),\n        defaultValue,\n        style: _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.visuallyHiddenStyle,\n        tabIndex: -1,\n        // Some browser extensions will focus the hidden select.\n        // Let's forward the focus to the trigger.\n        onFocus() {\n          getTriggerEl(scope)?.focus({ preventScroll: true });\n        },\n        \"aria-labelledby\": getLabelId(scope)\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        ...parts.positioner.attrs,\n        dir: prop(\"dir\"),\n        id: getPositionerId(scope),\n        style: popperStyles.floating\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        hidden: !open,\n        dir: prop(\"dir\"),\n        id: getContentId(scope),\n        role: composite ? \"listbox\" : \"dialog\",\n        ...parts.content.attrs,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-placement\": currentPlacement,\n        \"data-activedescendant\": ariaActiveDescendant,\n        \"aria-activedescendant\": composite ? ariaActiveDescendant : void 0,\n        \"aria-multiselectable\": prop(\"multiple\") && composite ? true : void 0,\n        \"aria-labelledby\": getLabelId(scope),\n        tabIndex: 0,\n        onKeyDown(event) {\n          if (!interactive) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.isSelfTarget)(event)) return;\n          if (event.key === \"Tab\") {\n            const valid = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.isValidTabEvent)(event);\n            if (!valid) {\n              event.preventDefault();\n              return;\n            }\n          }\n          const keyMap = {\n            ArrowUp() {\n              send({ type: \"CONTENT.ARROW_UP\" });\n            },\n            ArrowDown() {\n              send({ type: \"CONTENT.ARROW_DOWN\" });\n            },\n            Home() {\n              send({ type: \"CONTENT.HOME\" });\n            },\n            End() {\n              send({ type: \"CONTENT.END\" });\n            },\n            Enter() {\n              send({ type: \"ITEM.CLICK\", src: \"keydown.enter\" });\n            },\n            Space(event2) {\n              if (isTypingAhead) {\n                send({ type: \"CONTENT.TYPEAHEAD\", key: event2.key });\n              } else {\n                keyMap.Enter?.(event2);\n              }\n            }\n          };\n          const exec = keyMap[(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.getEventKey)(event)];\n          if (exec) {\n            exec(event);\n            event.preventDefault();\n            return;\n          }\n          const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.getEventTarget)(event);\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.isEditableElement)(target)) {\n            return;\n          }\n          if (_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.getByTypeahead.isValidEvent(event)) {\n            send({ type: \"CONTENT.TYPEAHEAD\", key: event.key });\n            event.preventDefault();\n          }\n        }\n      });\n    },\n    getListProps() {\n      return normalize.element({\n        ...parts.list.attrs,\n        tabIndex: 0,\n        role: !composite ? \"listbox\" : void 0,\n        \"aria-labelledby\": getTriggerId(scope),\n        \"aria-activedescendant\": !composite ? ariaActiveDescendant : void 0,\n        \"aria-multiselectable\": !composite && prop(\"multiple\") ? true : void 0\n      });\n    }\n  };\n}\nvar { and, not, or } = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_5__.createGuards)();\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_5__.createMachine)({\n  props({ props: props2 }) {\n    return {\n      loopFocus: false,\n      closeOnSelect: !props2.multiple,\n      composite: true,\n      defaultValue: [],\n      ...props2,\n      collection: props2.collection ?? collection.empty(),\n      positioning: {\n        placement: \"bottom-start\",\n        gutter: 8,\n        ...props2.positioning\n      }\n    };\n  },\n  context({ prop, bindable }) {\n    return {\n      value: bindable(() => ({\n        defaultValue: prop(\"defaultValue\"),\n        value: prop(\"value\"),\n        isEqual: _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isEqual,\n        onChange(value) {\n          const items = prop(\"collection\").findMany(value);\n          return prop(\"onValueChange\")?.({ value, items });\n        }\n      })),\n      highlightedValue: bindable(() => ({\n        defaultValue: prop(\"defaultHighlightedValue\") || null,\n        value: prop(\"highlightedValue\"),\n        onChange(value) {\n          prop(\"onHighlightChange\")?.({\n            highlightedValue: value,\n            highlightedItem: prop(\"collection\").find(value),\n            highlightedIndex: prop(\"collection\").indexOf(value)\n          });\n        }\n      })),\n      currentPlacement: bindable(() => ({\n        defaultValue: void 0\n      })),\n      fieldsetDisabled: bindable(() => ({\n        defaultValue: false\n      })),\n      highlightedItem: bindable(() => ({\n        defaultValue: null\n      })),\n      selectedItems: bindable(() => {\n        const value = prop(\"value\") ?? prop(\"defaultValue\") ?? [];\n        const items = prop(\"collection\").findMany(value);\n        return { defaultValue: items };\n      }),\n      valueAsString: bindable(() => {\n        const value = prop(\"value\") ?? prop(\"defaultValue\") ?? [];\n        return { defaultValue: prop(\"collection\").stringifyMany(value) };\n      })\n    };\n  },\n  refs() {\n    return {\n      typeahead: { ..._zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.getByTypeahead.defaultOptions }\n    };\n  },\n  computed: {\n    hasSelectedItems: ({ context }) => context.get(\"value\").length > 0,\n    isTypingAhead: ({ refs }) => refs.get(\"typeahead\").keysSoFar !== \"\",\n    isDisabled: ({ prop, context }) => !!prop(\"disabled\") || !!context.get(\"fieldsetDisabled\"),\n    isInteractive: ({ prop }) => !(prop(\"disabled\") || prop(\"readOnly\"))\n  },\n  initialState({ prop }) {\n    const open = prop(\"open\") || prop(\"defaultOpen\");\n    return open ? \"open\" : \"idle\";\n  },\n  entry: [\"syncSelectElement\"],\n  watch({ context, prop, track, action }) {\n    track([() => context.get(\"value\").toString()], () => {\n      action([\"syncSelectedItems\", \"syncSelectElement\", \"dispatchChangeEvent\"]);\n    });\n    track([() => prop(\"open\")], () => {\n      action([\"toggleVisibility\"]);\n    });\n    track([() => context.get(\"highlightedValue\")], () => {\n      action([\"syncHighlightedItem\"]);\n    });\n    track([() => prop(\"collection\").toString()], () => {\n      action([\"syncCollection\"]);\n    });\n  },\n  on: {\n    \"HIGHLIGHTED_VALUE.SET\": {\n      actions: [\"setHighlightedItem\"]\n    },\n    \"ITEM.SELECT\": {\n      actions: [\"selectItem\"]\n    },\n    \"ITEM.CLEAR\": {\n      actions: [\"clearItem\"]\n    },\n    \"VALUE.SET\": {\n      actions: [\"setSelectedItems\"]\n    },\n    \"VALUE.CLEAR\": {\n      actions: [\"clearSelectedItems\"]\n    },\n    \"CLEAR.CLICK\": {\n      actions: [\"clearSelectedItems\", \"focusTriggerEl\"]\n    }\n  },\n  effects: [\"trackFormControlState\"],\n  states: {\n    idle: {\n      tags: [\"closed\"],\n      on: {\n        \"CONTROLLED.OPEN\": [\n          {\n            guard: \"isTriggerClickEvent\",\n            target: \"open\",\n            actions: [\"setInitialFocus\", \"highlightFirstSelectedItem\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"setInitialFocus\"]\n          }\n        ],\n        \"TRIGGER.CLICK\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"invokeOnOpen\", \"setInitialFocus\", \"highlightFirstSelectedItem\"]\n          }\n        ],\n        \"TRIGGER.FOCUS\": {\n          target: \"focused\"\n        },\n        OPEN: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"setInitialFocus\", \"invokeOnOpen\"]\n          }\n        ]\n      }\n    },\n    focused: {\n      tags: [\"closed\"],\n      on: {\n        \"CONTROLLED.OPEN\": [\n          {\n            guard: \"isTriggerClickEvent\",\n            target: \"open\",\n            actions: [\"setInitialFocus\", \"highlightFirstSelectedItem\"]\n          },\n          {\n            guard: \"isTriggerArrowUpEvent\",\n            target: \"open\",\n            actions: [\"setInitialFocus\", \"highlightComputedLastItem\"]\n          },\n          {\n            guard: or(\"isTriggerArrowDownEvent\", \"isTriggerEnterEvent\"),\n            target: \"open\",\n            actions: [\"setInitialFocus\", \"highlightComputedFirstItem\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"setInitialFocus\"]\n          }\n        ],\n        OPEN: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"setInitialFocus\", \"invokeOnOpen\"]\n          }\n        ],\n        \"TRIGGER.BLUR\": {\n          target: \"idle\"\n        },\n        \"TRIGGER.CLICK\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"setInitialFocus\", \"invokeOnOpen\", \"highlightFirstSelectedItem\"]\n          }\n        ],\n        \"TRIGGER.ENTER\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"setInitialFocus\", \"invokeOnOpen\", \"highlightComputedFirstItem\"]\n          }\n        ],\n        \"TRIGGER.ARROW_UP\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"setInitialFocus\", \"invokeOnOpen\", \"highlightComputedLastItem\"]\n          }\n        ],\n        \"TRIGGER.ARROW_DOWN\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"setInitialFocus\", \"invokeOnOpen\", \"highlightComputedFirstItem\"]\n          }\n        ],\n        \"TRIGGER.ARROW_LEFT\": [\n          {\n            guard: and(not(\"multiple\"), \"hasSelectedItems\"),\n            actions: [\"selectPreviousItem\"]\n          },\n          {\n            guard: not(\"multiple\"),\n            actions: [\"selectLastItem\"]\n          }\n        ],\n        \"TRIGGER.ARROW_RIGHT\": [\n          {\n            guard: and(not(\"multiple\"), \"hasSelectedItems\"),\n            actions: [\"selectNextItem\"]\n          },\n          {\n            guard: not(\"multiple\"),\n            actions: [\"selectFirstItem\"]\n          }\n        ],\n        \"TRIGGER.HOME\": {\n          guard: not(\"multiple\"),\n          actions: [\"selectFirstItem\"]\n        },\n        \"TRIGGER.END\": {\n          guard: not(\"multiple\"),\n          actions: [\"selectLastItem\"]\n        },\n        \"TRIGGER.TYPEAHEAD\": {\n          guard: not(\"multiple\"),\n          actions: [\"selectMatchingItem\"]\n        }\n      }\n    },\n    open: {\n      tags: [\"open\"],\n      exit: [\"scrollContentToTop\"],\n      effects: [\"trackDismissableElement\", \"computePlacement\", \"scrollToHighlightedItem\"],\n      on: {\n        \"CONTROLLED.CLOSE\": [\n          {\n            guard: \"restoreFocus\",\n            target: \"focused\",\n            actions: [\"focusTriggerEl\", \"clearHighlightedItem\"]\n          },\n          {\n            target: \"idle\",\n            actions: [\"clearHighlightedItem\"]\n          }\n        ],\n        CLOSE: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            guard: \"restoreFocus\",\n            target: \"focused\",\n            actions: [\"invokeOnClose\", \"focusTriggerEl\", \"clearHighlightedItem\"]\n          },\n          {\n            target: \"idle\",\n            actions: [\"invokeOnClose\", \"clearHighlightedItem\"]\n          }\n        ],\n        \"TRIGGER.CLICK\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"focused\",\n            actions: [\"invokeOnClose\", \"clearHighlightedItem\"]\n          }\n        ],\n        \"ITEM.CLICK\": [\n          {\n            guard: and(\"closeOnSelect\", \"isOpenControlled\"),\n            actions: [\"selectHighlightedItem\", \"invokeOnClose\"]\n          },\n          {\n            guard: \"closeOnSelect\",\n            target: \"focused\",\n            actions: [\"selectHighlightedItem\", \"invokeOnClose\", \"focusTriggerEl\", \"clearHighlightedItem\"]\n          },\n          {\n            actions: [\"selectHighlightedItem\"]\n          }\n        ],\n        \"CONTENT.HOME\": {\n          actions: [\"highlightFirstItem\"]\n        },\n        \"CONTENT.END\": {\n          actions: [\"highlightLastItem\"]\n        },\n        \"CONTENT.ARROW_DOWN\": [\n          {\n            guard: and(\"hasHighlightedItem\", \"loop\", \"isLastItemHighlighted\"),\n            actions: [\"highlightFirstItem\"]\n          },\n          {\n            guard: \"hasHighlightedItem\",\n            actions: [\"highlightNextItem\"]\n          },\n          {\n            actions: [\"highlightFirstItem\"]\n          }\n        ],\n        \"CONTENT.ARROW_UP\": [\n          {\n            guard: and(\"hasHighlightedItem\", \"loop\", \"isFirstItemHighlighted\"),\n            actions: [\"highlightLastItem\"]\n          },\n          {\n            guard: \"hasHighlightedItem\",\n            actions: [\"highlightPreviousItem\"]\n          },\n          {\n            actions: [\"highlightLastItem\"]\n          }\n        ],\n        \"CONTENT.TYPEAHEAD\": {\n          actions: [\"highlightMatchingItem\"]\n        },\n        \"ITEM.POINTER_MOVE\": {\n          actions: [\"highlightItem\"]\n        },\n        \"ITEM.POINTER_LEAVE\": {\n          actions: [\"clearHighlightedItem\"]\n        },\n        \"POSITIONING.SET\": {\n          actions: [\"reposition\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      loop: ({ prop }) => !!prop(\"loopFocus\"),\n      multiple: ({ prop }) => !!prop(\"multiple\"),\n      hasSelectedItems: ({ computed }) => !!computed(\"hasSelectedItems\"),\n      hasHighlightedItem: ({ context }) => context.get(\"highlightedValue\") != null,\n      isFirstItemHighlighted: ({ context, prop }) => context.get(\"highlightedValue\") === prop(\"collection\").firstValue,\n      isLastItemHighlighted: ({ context, prop }) => context.get(\"highlightedValue\") === prop(\"collection\").lastValue,\n      closeOnSelect: ({ prop, event }) => !!(event.closeOnSelect ?? prop(\"closeOnSelect\")),\n      restoreFocus: ({ event }) => restoreFocusFn(event),\n      // guard assertions (for controlled mode)\n      isOpenControlled: ({ prop }) => prop(\"open\") !== void 0,\n      isTriggerClickEvent: ({ event }) => event.previousEvent?.type === \"TRIGGER.CLICK\",\n      isTriggerEnterEvent: ({ event }) => event.previousEvent?.type === \"TRIGGER.ENTER\",\n      isTriggerArrowUpEvent: ({ event }) => event.previousEvent?.type === \"TRIGGER.ARROW_UP\",\n      isTriggerArrowDownEvent: ({ event }) => event.previousEvent?.type === \"TRIGGER.ARROW_DOWN\"\n    },\n    effects: {\n      trackFormControlState({ context, scope }) {\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.trackFormControl)(getHiddenSelectEl(scope), {\n          onFieldsetDisabledChange(disabled) {\n            context.set(\"fieldsetDisabled\", disabled);\n          },\n          onFormReset() {\n            const value = context.initial(\"value\");\n            context.set(\"value\", value);\n          }\n        });\n      },\n      trackDismissableElement({ scope, send, prop }) {\n        const contentEl = () => getContentEl(scope);\n        let restoreFocus = true;\n        return (0,_zag_js_dismissable__WEBPACK_IMPORTED_MODULE_6__.trackDismissableElement)(contentEl, {\n          defer: true,\n          exclude: [getTriggerEl(scope), getClearTriggerEl(scope)],\n          onFocusOutside: prop(\"onFocusOutside\"),\n          onPointerDownOutside: prop(\"onPointerDownOutside\"),\n          onInteractOutside(event) {\n            prop(\"onInteractOutside\")?.(event);\n            restoreFocus = !(event.detail.focusable || event.detail.contextmenu);\n          },\n          onDismiss() {\n            send({ type: \"CLOSE\", src: \"interact-outside\", restoreFocus });\n          }\n        });\n      },\n      computePlacement({ context, prop, scope }) {\n        const positioning = prop(\"positioning\");\n        context.set(\"currentPlacement\", positioning.placement);\n        const triggerEl = () => getTriggerEl(scope);\n        const positionerEl = () => getPositionerEl(scope);\n        return (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacement)(triggerEl, positionerEl, {\n          defer: true,\n          ...positioning,\n          onComplete(data) {\n            context.set(\"currentPlacement\", data.placement);\n          }\n        });\n      },\n      scrollToHighlightedItem({ context, prop, scope, event }) {\n        const exec = (immediate) => {\n          const highlightedValue = context.get(\"highlightedValue\");\n          if (highlightedValue == null) return;\n          if (event.current().type.includes(\"POINTER\")) return;\n          const optionEl = getItemEl(scope, highlightedValue);\n          const contentEl2 = getContentEl(scope);\n          const scrollToIndexFn = prop(\"scrollToIndexFn\");\n          if (scrollToIndexFn) {\n            const highlightedIndex = prop(\"collection\").indexOf(highlightedValue);\n            scrollToIndexFn?.({ index: highlightedIndex, immediate });\n            return;\n          }\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.scrollIntoView)(optionEl, { rootEl: contentEl2, block: \"nearest\" });\n        };\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.raf)(() => exec(true));\n        const contentEl = () => getContentEl(scope);\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.observeAttributes)(contentEl, {\n          defer: true,\n          attributes: [\"data-activedescendant\"],\n          callback() {\n            exec(false);\n          }\n        });\n      }\n    },\n    actions: {\n      reposition({ context, prop, scope, event }) {\n        const positionerEl = () => getPositionerEl(scope);\n        (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacement)(getTriggerEl(scope), positionerEl, {\n          ...prop(\"positioning\"),\n          ...event.options,\n          defer: true,\n          listeners: false,\n          onComplete(data) {\n            context.set(\"currentPlacement\", data.placement);\n          }\n        });\n      },\n      toggleVisibility({ send, prop, event }) {\n        send({ type: prop(\"open\") ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\", previousEvent: event });\n      },\n      highlightPreviousItem({ context, prop }) {\n        const highlightedValue = context.get(\"highlightedValue\");\n        if (highlightedValue == null) return;\n        const value = prop(\"collection\").getPreviousValue(highlightedValue, 1, prop(\"loopFocus\"));\n        context.set(\"highlightedValue\", value);\n      },\n      highlightNextItem({ context, prop }) {\n        const highlightedValue = context.get(\"highlightedValue\");\n        if (highlightedValue == null) return;\n        const value = prop(\"collection\").getNextValue(highlightedValue, 1, prop(\"loopFocus\"));\n        context.set(\"highlightedValue\", value);\n      },\n      highlightFirstItem({ context, prop }) {\n        const value = prop(\"collection\").firstValue;\n        context.set(\"highlightedValue\", value);\n      },\n      highlightLastItem({ context, prop }) {\n        const value = prop(\"collection\").lastValue;\n        context.set(\"highlightedValue\", value);\n      },\n      setInitialFocus({ scope }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.raf)(() => {\n          const element = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.getInitialFocus)({\n            root: getContentEl(scope)\n          });\n          element?.focus({ preventScroll: true });\n        });\n      },\n      focusTriggerEl({ event, scope }) {\n        if (!restoreFocusFn(event)) return;\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.raf)(() => {\n          const element = getTriggerEl(scope);\n          element?.focus({ preventScroll: true });\n        });\n      },\n      selectHighlightedItem({ context, prop, event }) {\n        let value = event.value ?? context.get(\"highlightedValue\");\n        if (value == null) return;\n        prop(\"onSelect\")?.({ value });\n        const nullable = prop(\"deselectable\") && !prop(\"multiple\") && context.get(\"value\").includes(value);\n        value = nullable ? null : value;\n        context.set(\"value\", (prev) => {\n          if (value == null) return [];\n          if (prop(\"multiple\")) return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.addOrRemove)(prev, value);\n          return [value];\n        });\n      },\n      highlightComputedFirstItem({ context, prop, computed }) {\n        const collection2 = prop(\"collection\");\n        const value = computed(\"hasSelectedItems\") ? collection2.sort(context.get(\"value\"))[0] : collection2.firstValue;\n        context.set(\"highlightedValue\", value);\n      },\n      highlightComputedLastItem({ context, prop, computed }) {\n        const collection2 = prop(\"collection\");\n        const value = computed(\"hasSelectedItems\") ? collection2.sort(context.get(\"value\"))[0] : collection2.lastValue;\n        context.set(\"highlightedValue\", value);\n      },\n      highlightFirstSelectedItem({ context, prop, computed }) {\n        if (!computed(\"hasSelectedItems\")) return;\n        const value = prop(\"collection\").sort(context.get(\"value\"))[0];\n        context.set(\"highlightedValue\", value);\n      },\n      highlightItem({ context, event }) {\n        context.set(\"highlightedValue\", event.value);\n      },\n      highlightMatchingItem({ context, prop, event, refs }) {\n        const value = prop(\"collection\").search(event.key, {\n          state: refs.get(\"typeahead\"),\n          currentValue: context.get(\"highlightedValue\")\n        });\n        if (value == null) return;\n        context.set(\"highlightedValue\", value);\n      },\n      setHighlightedItem({ context, event }) {\n        context.set(\"highlightedValue\", event.value);\n      },\n      clearHighlightedItem({ context }) {\n        context.set(\"highlightedValue\", null);\n      },\n      selectItem({ context, prop, event }) {\n        prop(\"onSelect\")?.({ value: event.value });\n        const nullable = prop(\"deselectable\") && !prop(\"multiple\") && context.get(\"value\").includes(event.value);\n        const value = nullable ? null : event.value;\n        context.set(\"value\", (prev) => {\n          if (value == null) return [];\n          if (prop(\"multiple\")) return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.addOrRemove)(prev, value);\n          return [value];\n        });\n      },\n      clearItem({ context, event }) {\n        context.set(\"value\", (prev) => prev.filter((v) => v !== event.value));\n      },\n      setSelectedItems({ context, event }) {\n        context.set(\"value\", event.value);\n      },\n      clearSelectedItems({ context }) {\n        context.set(\"value\", []);\n      },\n      selectPreviousItem({ context, prop }) {\n        const [firstItem] = context.get(\"value\");\n        const value = prop(\"collection\").getPreviousValue(firstItem);\n        if (value) context.set(\"value\", [value]);\n      },\n      selectNextItem({ context, prop }) {\n        const [firstItem] = context.get(\"value\");\n        const value = prop(\"collection\").getNextValue(firstItem);\n        if (value) context.set(\"value\", [value]);\n      },\n      selectFirstItem({ context, prop }) {\n        const value = prop(\"collection\").firstValue;\n        if (value) context.set(\"value\", [value]);\n      },\n      selectLastItem({ context, prop }) {\n        const value = prop(\"collection\").lastValue;\n        if (value) context.set(\"value\", [value]);\n      },\n      selectMatchingItem({ context, prop, event, refs }) {\n        const value = prop(\"collection\").search(event.key, {\n          state: refs.get(\"typeahead\"),\n          currentValue: context.get(\"value\")[0]\n        });\n        if (value == null) return;\n        context.set(\"value\", [value]);\n      },\n      scrollContentToTop({ prop, scope }) {\n        if (prop(\"scrollToIndexFn\")) {\n          prop(\"scrollToIndexFn\")?.({ index: 0, immediate: true });\n        } else {\n          getContentEl(scope)?.scrollTo(0, 0);\n        }\n      },\n      invokeOnOpen({ prop }) {\n        prop(\"onOpenChange\")?.({ open: true });\n      },\n      invokeOnClose({ prop }) {\n        prop(\"onOpenChange\")?.({ open: false });\n      },\n      syncSelectElement({ context, prop, scope }) {\n        const selectEl = getHiddenSelectEl(scope);\n        if (!selectEl) return;\n        if (context.get(\"value\").length === 0 && !prop(\"multiple\")) {\n          selectEl.selectedIndex = -1;\n          return;\n        }\n        for (const option of selectEl.options) {\n          option.selected = context.get(\"value\").includes(option.value);\n        }\n      },\n      syncCollection({ context, prop }) {\n        const collection2 = prop(\"collection\");\n        const highlightedItem = collection2.find(context.get(\"highlightedValue\"));\n        if (highlightedItem) context.set(\"highlightedItem\", highlightedItem);\n        const selectedItems = collection2.findMany(context.get(\"value\"));\n        context.set(\"selectedItems\", selectedItems);\n        const valueAsString = collection2.stringifyItems(selectedItems);\n        context.set(\"valueAsString\", valueAsString);\n      },\n      syncSelectedItems({ context, prop }) {\n        const collection2 = prop(\"collection\");\n        const prevSelectedItems = context.get(\"selectedItems\");\n        const value = context.get(\"value\");\n        const selectedItems = value.map((value2) => {\n          const item = prevSelectedItems.find((item2) => collection2.getItemValue(item2) === value2);\n          return item || collection2.find(value2);\n        });\n        context.set(\"selectedItems\", selectedItems);\n        context.set(\"valueAsString\", collection2.stringifyItems(selectedItems));\n      },\n      syncHighlightedItem({ context, prop }) {\n        const collection2 = prop(\"collection\");\n        const highlightedValue = context.get(\"highlightedValue\");\n        const highlightedItem = highlightedValue ? collection2.find(highlightedValue) : null;\n        context.set(\"highlightedItem\", highlightedItem);\n      },\n      dispatchChangeEvent({ scope }) {\n        queueMicrotask(() => {\n          const node = getHiddenSelectEl(scope);\n          if (!node) return;\n          const win = scope.getWin();\n          const changeEvent = new win.Event(\"change\", { bubbles: true, composed: true });\n          node.dispatchEvent(changeEvent);\n        });\n      }\n    }\n  }\n});\nfunction restoreFocusFn(event) {\n  const v = event.restoreFocus ?? event.previousEvent?.restoreFocus;\n  return v == null || !!v;\n}\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\n  \"closeOnSelect\",\n  \"collection\",\n  \"composite\",\n  \"defaultHighlightedValue\",\n  \"defaultOpen\",\n  \"defaultValue\",\n  \"deselectable\",\n  \"dir\",\n  \"disabled\",\n  \"form\",\n  \"getRootNode\",\n  \"highlightedValue\",\n  \"id\",\n  \"ids\",\n  \"invalid\",\n  \"loopFocus\",\n  \"multiple\",\n  \"name\",\n  \"onFocusOutside\",\n  \"onHighlightChange\",\n  \"onInteractOutside\",\n  \"onOpenChange\",\n  \"onPointerDownOutside\",\n  \"onSelect\",\n  \"onValueChange\",\n  \"open\",\n  \"positioning\",\n  \"readOnly\",\n  \"required\",\n  \"scrollToIndexFn\",\n  \"value\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(props);\nvar itemProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\"item\", \"persistFocus\"]);\nvar splitItemProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(itemProps);\nvar itemGroupProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\"id\"]);\nvar splitItemGroupProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(itemGroupProps);\nvar itemGroupLabelProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\"htmlFor\"]);\nvar splitItemGroupLabelProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(itemGroupLabelProps);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/select/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/slider/dist/index.mjs":
/*!****************************************************!*\
  !*** ./node_modules/@zag-js/slider/dist/index.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps),\n/* harmony export */   splitThumbProps: () => (/* binding */ splitThumbProps),\n/* harmony export */   thumbProps: () => (/* binding */ thumbProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n// src/slider.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"slider\").parts(\n  \"root\",\n  \"label\",\n  \"thumb\",\n  \"valueText\",\n  \"track\",\n  \"range\",\n  \"control\",\n  \"markerGroup\",\n  \"marker\",\n  \"draggingIndicator\"\n);\nvar parts = anatomy.build();\nvar getRootId = (ctx) => ctx.ids?.root ?? `slider:${ctx.id}`;\nvar getThumbId = (ctx, index) => ctx.ids?.thumb?.(index) ?? `slider:${ctx.id}:thumb:${index}`;\nvar getHiddenInputId = (ctx, index) => ctx.ids?.hiddenInput?.(index) ?? `slider:${ctx.id}:input:${index}`;\nvar getControlId = (ctx) => ctx.ids?.control ?? `slider:${ctx.id}:control`;\nvar getTrackId = (ctx) => ctx.ids?.track ?? `slider:${ctx.id}:track`;\nvar getRangeId = (ctx) => ctx.ids?.range ?? `slider:${ctx.id}:range`;\nvar getLabelId = (ctx) => ctx.ids?.label ?? `slider:${ctx.id}:label`;\nvar getValueTextId = (ctx) => ctx.ids?.valueText ?? `slider:${ctx.id}:value-text`;\nvar getMarkerId = (ctx, value) => ctx.ids?.marker?.(value) ?? `slider:${ctx.id}:marker:${value}`;\nvar getRootEl = (ctx) => ctx.getById(getRootId(ctx));\nvar getThumbEl = (ctx, index) => ctx.getById(getThumbId(ctx, index));\nvar getThumbEls = (ctx) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.queryAll)(getControlEl(ctx), \"[role=slider]\");\nvar getFirstThumbEl = (ctx) => getThumbEls(ctx)[0];\nvar getHiddenInputEl = (ctx, index) => ctx.getById(getHiddenInputId(ctx, index));\nvar getControlEl = (ctx) => ctx.getById(getControlId(ctx));\nvar getPointValue = (params, point) => {\n  const { prop, scope } = params;\n  const controlEl = getControlEl(scope);\n  if (!controlEl) return;\n  const relativePoint = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getRelativePoint)(point, controlEl);\n  const percent = relativePoint.getPercentValue({\n    orientation: prop(\"orientation\"),\n    dir: prop(\"dir\"),\n    inverted: { y: true }\n  });\n  return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.getPercentValue)(percent, prop(\"min\"), prop(\"max\"), prop(\"step\"));\n};\nvar dispatchChangeEvent = (ctx, value) => {\n  value.forEach((value2, index) => {\n    const inputEl = getHiddenInputEl(ctx, index);\n    if (!inputEl) return;\n    (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dispatchInputValueEvent)(inputEl, { value: value2 });\n  });\n};\nvar getOffsetRect = (el) => ({\n  left: el?.offsetLeft ?? 0,\n  top: el?.offsetTop ?? 0,\n  width: el?.offsetWidth ?? 0,\n  height: el?.offsetHeight ?? 0\n});\nfunction getBounds(value) {\n  const firstValue = value[0];\n  const lastThumb = value[value.length - 1];\n  return [firstValue, lastThumb];\n}\nfunction getRangeOffsets(params) {\n  const { prop, computed } = params;\n  const valuePercent = computed(\"valuePercent\");\n  const [firstPercent, lastPercent] = getBounds(valuePercent);\n  if (valuePercent.length === 1) {\n    if (prop(\"origin\") === \"center\") {\n      const isNegative = valuePercent[0] < 50;\n      const start = isNegative ? `${valuePercent[0]}%` : \"50%\";\n      const end = isNegative ? \"50%\" : `${100 - valuePercent[0]}%`;\n      return { start, end };\n    }\n    if (prop(\"origin\") === \"end\") {\n      return { start: `${lastPercent}%`, end: \"0%\" };\n    }\n    return { start: \"0%\", end: `${100 - lastPercent}%` };\n  }\n  return { start: `${firstPercent}%`, end: `${100 - lastPercent}%` };\n}\nfunction getRangeStyle(params) {\n  const { computed } = params;\n  const isVertical = computed(\"isVertical\");\n  const isRtl = computed(\"isRtl\");\n  if (isVertical) {\n    return {\n      position: \"absolute\",\n      bottom: \"var(--slider-range-start)\",\n      top: \"var(--slider-range-end)\"\n    };\n  }\n  return {\n    position: \"absolute\",\n    [isRtl ? \"right\" : \"left\"]: \"var(--slider-range-start)\",\n    [isRtl ? \"left\" : \"right\"]: \"var(--slider-range-end)\"\n  };\n}\nfunction getVerticalThumbOffset(params, value) {\n  const { context, prop } = params;\n  const { height = 0 } = context.get(\"thumbSize\") ?? {};\n  const getValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.getValueTransformer)([prop(\"min\"), prop(\"max\")], [-height / 2, height / 2]);\n  return parseFloat(getValue(value).toFixed(2));\n}\nfunction getHorizontalThumbOffset(params, value) {\n  const { computed, context, prop } = params;\n  const { width = 0 } = context.get(\"thumbSize\") ?? {};\n  const isRtl = computed(\"isRtl\");\n  if (isRtl) {\n    const getValue2 = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.getValueTransformer)([prop(\"max\"), prop(\"min\")], [-width / 2, width / 2]);\n    return -1 * parseFloat(getValue2(value).toFixed(2));\n  }\n  const getValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.getValueTransformer)([prop(\"min\"), prop(\"max\")], [-width / 2, width / 2]);\n  return parseFloat(getValue(value).toFixed(2));\n}\nfunction getOffset(params, percent, value) {\n  const { computed, prop } = params;\n  if (prop(\"thumbAlignment\") === \"center\") return `${percent}%`;\n  const offset = computed(\"isVertical\") ? getVerticalThumbOffset(params, value) : getHorizontalThumbOffset(params, value);\n  return `calc(${percent}% - ${offset}px)`;\n}\nfunction getThumbOffset(params, value) {\n  const { prop } = params;\n  const percent = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.getValuePercent)(value, prop(\"min\"), prop(\"max\")) * 100;\n  return getOffset(params, percent, value);\n}\nfunction getVisibility(params) {\n  const { computed, prop } = params;\n  let visibility = \"visible\";\n  if (prop(\"thumbAlignment\") === \"contain\" && !computed(\"hasMeasuredThumbSize\")) {\n    visibility = \"hidden\";\n  }\n  return visibility;\n}\nfunction getThumbStyle(params, index) {\n  const { computed } = params;\n  const placementProp = computed(\"isVertical\") ? \"bottom\" : \"insetInlineStart\";\n  return {\n    visibility: getVisibility(params),\n    position: \"absolute\",\n    transform: \"var(--slider-thumb-transform)\",\n    [placementProp]: `var(--slider-thumb-offset-${index})`\n  };\n}\nfunction getControlStyle() {\n  return {\n    touchAction: \"none\",\n    userSelect: \"none\",\n    WebkitUserSelect: \"none\",\n    position: \"relative\"\n  };\n}\nfunction getRootStyle(params) {\n  const { context, computed } = params;\n  const isVertical = computed(\"isVertical\");\n  const isRtl = computed(\"isRtl\");\n  const range = getRangeOffsets(params);\n  const thumbSize = context.get(\"thumbSize\");\n  const offsetStyles = context.get(\"value\").reduce((styles, value, index) => {\n    const offset = getThumbOffset(params, value);\n    return { ...styles, [`--slider-thumb-offset-${index}`]: offset };\n  }, {});\n  return {\n    ...offsetStyles,\n    \"--slider-thumb-width\": (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.toPx)(thumbSize?.width),\n    \"--slider-thumb-height\": (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.toPx)(thumbSize?.height),\n    \"--slider-thumb-transform\": isVertical ? \"translateY(50%)\" : isRtl ? \"translateX(50%)\" : \"translateX(-50%)\",\n    \"--slider-range-start\": range.start,\n    \"--slider-range-end\": range.end\n  };\n}\nfunction getMarkerStyle(params, value) {\n  const { computed } = params;\n  const isHorizontal = computed(\"isHorizontal\");\n  const isRtl = computed(\"isRtl\");\n  return {\n    visibility: getVisibility(params),\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    [isHorizontal ? \"insetInlineStart\" : \"bottom\"]: getThumbOffset(params, value),\n    translate: \"var(--tx) var(--ty)\",\n    \"--tx\": isHorizontal ? isRtl ? \"50%\" : \"-50%\" : \"0%\",\n    \"--ty\": !isHorizontal ? \"50%\" : \"0%\"\n  };\n}\nfunction getMarkerGroupStyle() {\n  return {\n    userSelect: \"none\",\n    WebkitUserSelect: \"none\",\n    pointerEvents: \"none\",\n    position: \"relative\"\n  };\n}\nfunction normalizeValues(params, nextValues) {\n  return nextValues.map((value, index) => {\n    return constrainValue(params, value, index);\n  });\n}\nfunction getRangeAtIndex(params, index) {\n  const { context, prop } = params;\n  const step = prop(\"step\") * prop(\"minStepsBetweenThumbs\");\n  return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.getValueRanges)(context.get(\"value\"), prop(\"min\"), prop(\"max\"), step)[index];\n}\nfunction constrainValue(params, value, index) {\n  const { prop } = params;\n  const range = getRangeAtIndex(params, index);\n  const snapValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.snapValueToStep)(value, prop(\"min\"), prop(\"max\"), prop(\"step\"));\n  return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.clampValue)(snapValue, range.min, range.max);\n}\nfunction decrement(params, index, step) {\n  const { context, prop } = params;\n  const idx = index ?? context.get(\"focusedIndex\");\n  const range = getRangeAtIndex(params, idx);\n  const nextValues = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.getPreviousStepValue)(idx, {\n    ...range,\n    step: step ?? prop(\"step\"),\n    values: context.get(\"value\")\n  });\n  nextValues[idx] = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.clampValue)(nextValues[idx], range.min, range.max);\n  return nextValues;\n}\nfunction increment(params, index, step) {\n  const { context, prop } = params;\n  const idx = index ?? context.get(\"focusedIndex\");\n  const range = getRangeAtIndex(params, idx);\n  const nextValues = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.getNextStepValue)(idx, {\n    ...range,\n    step: step ?? prop(\"step\"),\n    values: context.get(\"value\")\n  });\n  nextValues[idx] = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.clampValue)(nextValues[idx], range.min, range.max);\n  return nextValues;\n}\nfunction getClosestIndex(params, pointValue) {\n  const { context } = params;\n  return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.getClosestValueIndex)(context.get(\"value\"), pointValue);\n}\n\n// src/slider.connect.ts\nfunction connect(service, normalize2) {\n  const { state, send, context, prop, computed, scope } = service;\n  const ariaLabel = prop(\"aria-label\");\n  const ariaLabelledBy = prop(\"aria-labelledby\");\n  const sliderValue = context.get(\"value\");\n  const focusedIndex = context.get(\"focusedIndex\");\n  const focused = state.matches(\"focus\");\n  const dragging = state.matches(\"dragging\");\n  const disabled = computed(\"isDisabled\");\n  const invalid = prop(\"invalid\");\n  const interactive = computed(\"isInteractive\");\n  const isHorizontal = prop(\"orientation\") === \"horizontal\";\n  const isVertical = prop(\"orientation\") === \"vertical\";\n  function getValuePercentFn(value) {\n    return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.getValuePercent)(value, prop(\"min\"), prop(\"max\"));\n  }\n  function getPercentValueFn(percent) {\n    return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.getPercentValue)(percent, prop(\"min\"), prop(\"max\"), prop(\"step\"));\n  }\n  return {\n    value: sliderValue,\n    dragging,\n    focused,\n    setValue(value) {\n      send({ type: \"SET_VALUE\", value });\n    },\n    getThumbValue(index) {\n      return sliderValue[index];\n    },\n    setThumbValue(index, value) {\n      send({ type: \"SET_VALUE\", index, value });\n    },\n    getValuePercent: getValuePercentFn,\n    getPercentValue: getPercentValueFn,\n    getThumbPercent(index) {\n      return getValuePercentFn(sliderValue[index]);\n    },\n    setThumbPercent(index, percent) {\n      const value = getPercentValueFn(percent);\n      send({ type: \"SET_VALUE\", index, value });\n    },\n    getThumbMin(index) {\n      return getRangeAtIndex(service, index).min;\n    },\n    getThumbMax(index) {\n      return getRangeAtIndex(service, index).max;\n    },\n    increment(index) {\n      send({ type: \"INCREMENT\", index });\n    },\n    decrement(index) {\n      send({ type: \"DECREMENT\", index });\n    },\n    focus() {\n      if (!interactive) return;\n      send({ type: \"FOCUS\", index: 0 });\n    },\n    getLabelProps() {\n      return normalize2.label({\n        ...parts.label.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        \"data-dragging\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(dragging),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n        id: getLabelId(scope),\n        htmlFor: getHiddenInputId(scope, 0),\n        onClick(event) {\n          if (!interactive) return;\n          event.preventDefault();\n          getFirstThumbEl(scope)?.focus();\n        },\n        style: {\n          userSelect: \"none\",\n          WebkitUserSelect: \"none\"\n        }\n      });\n    },\n    getRootProps() {\n      return normalize2.element({\n        ...parts.root.attrs,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-dragging\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(dragging),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n        id: getRootId(scope),\n        dir: prop(\"dir\"),\n        style: getRootStyle(service)\n      });\n    },\n    getValueTextProps() {\n      return normalize2.element({\n        ...parts.valueText.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n        id: getValueTextId(scope)\n      });\n    },\n    getTrackProps() {\n      return normalize2.element({\n        ...parts.track.attrs,\n        dir: prop(\"dir\"),\n        id: getTrackId(scope),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        \"data-dragging\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(dragging),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n        style: { position: \"relative\" }\n      });\n    },\n    getThumbProps(props2) {\n      const { index = 0, name } = props2;\n      const value = sliderValue[index];\n      const range = getRangeAtIndex(service, index);\n      const valueText = prop(\"getAriaValueText\")?.({ value, index });\n      const _ariaLabel = Array.isArray(ariaLabel) ? ariaLabel[index] : ariaLabel;\n      const _ariaLabelledBy = Array.isArray(ariaLabelledBy) ? ariaLabelledBy[index] : ariaLabelledBy;\n      return normalize2.element({\n        ...parts.thumb.attrs,\n        dir: prop(\"dir\"),\n        \"data-index\": index,\n        \"data-name\": name,\n        id: getThumbId(scope, index),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused && focusedIndex === index),\n        \"data-dragging\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(dragging && focusedIndex === index),\n        draggable: false,\n        \"aria-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.ariaAttr)(disabled),\n        \"aria-label\": _ariaLabel,\n        \"aria-labelledby\": _ariaLabelledBy ?? getLabelId(scope),\n        \"aria-orientation\": prop(\"orientation\"),\n        \"aria-valuemax\": range.max,\n        \"aria-valuemin\": range.min,\n        \"aria-valuenow\": sliderValue[index],\n        \"aria-valuetext\": valueText,\n        role: \"slider\",\n        tabIndex: disabled ? void 0 : 0,\n        style: getThumbStyle(service, index),\n        onPointerDown(event) {\n          if (!interactive) return;\n          send({ type: \"THUMB_POINTER_DOWN\", index });\n          event.stopPropagation();\n        },\n        onBlur() {\n          if (!interactive) return;\n          send({ type: \"BLUR\" });\n        },\n        onFocus() {\n          if (!interactive) return;\n          send({ type: \"FOCUS\", index });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          const step = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventStep)(event) * prop(\"step\");\n          const keyMap = {\n            ArrowUp() {\n              if (isHorizontal) return;\n              send({ type: \"ARROW_INC\", step, src: \"ArrowUp\" });\n            },\n            ArrowDown() {\n              if (isHorizontal) return;\n              send({ type: \"ARROW_DEC\", step, src: \"ArrowDown\" });\n            },\n            ArrowLeft() {\n              if (isVertical) return;\n              send({ type: \"ARROW_DEC\", step, src: \"ArrowLeft\" });\n            },\n            ArrowRight() {\n              if (isVertical) return;\n              send({ type: \"ARROW_INC\", step, src: \"ArrowRight\" });\n            },\n            PageUp() {\n              send({ type: \"ARROW_INC\", step, src: \"PageUp\" });\n            },\n            PageDown() {\n              send({ type: \"ARROW_DEC\", step, src: \"PageDown\" });\n            },\n            Home() {\n              send({ type: \"HOME\" });\n            },\n            End() {\n              send({ type: \"END\" });\n            }\n          };\n          const key = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventKey)(event, {\n            dir: prop(\"dir\"),\n            orientation: prop(\"orientation\")\n          });\n          const exec = keyMap[key];\n          if (exec) {\n            exec(event);\n            event.preventDefault();\n            event.stopPropagation();\n          }\n        }\n      });\n    },\n    getHiddenInputProps(props2) {\n      const { index = 0, name } = props2;\n      return normalize2.input({\n        name: name ?? (prop(\"name\") ? prop(\"name\") + (sliderValue.length > 1 ? \"[]\" : \"\") : void 0),\n        form: prop(\"form\"),\n        type: \"text\",\n        hidden: true,\n        defaultValue: sliderValue[index],\n        id: getHiddenInputId(scope, index)\n      });\n    },\n    getRangeProps() {\n      return normalize2.element({\n        id: getRangeId(scope),\n        ...parts.range.attrs,\n        dir: prop(\"dir\"),\n        \"data-dragging\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(dragging),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-orientation\": prop(\"orientation\"),\n        style: getRangeStyle(service)\n      });\n    },\n    getControlProps() {\n      return normalize2.element({\n        ...parts.control.attrs,\n        dir: prop(\"dir\"),\n        id: getControlId(scope),\n        \"data-dragging\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(dragging),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n        style: getControlStyle(),\n        onPointerDown(event) {\n          if (!interactive) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isLeftClick)(event)) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isModifierKey)(event)) return;\n          const point = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventPoint)(event);\n          send({ type: \"POINTER_DOWN\", point });\n          event.preventDefault();\n          event.stopPropagation();\n        }\n      });\n    },\n    getMarkerGroupProps() {\n      return normalize2.element({\n        ...parts.markerGroup.attrs,\n        role: \"presentation\",\n        dir: prop(\"dir\"),\n        \"aria-hidden\": true,\n        \"data-orientation\": prop(\"orientation\"),\n        style: getMarkerGroupStyle()\n      });\n    },\n    getMarkerProps(props2) {\n      const style = getMarkerStyle(service, props2.value);\n      let markerState;\n      if (props2.value < (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.first)(sliderValue)) {\n        markerState = \"under-value\";\n      } else if (props2.value > (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.last)(sliderValue)) {\n        markerState = \"over-value\";\n      } else {\n        markerState = \"at-value\";\n      }\n      return normalize2.element({\n        ...parts.marker.attrs,\n        id: getMarkerId(scope, props2.value),\n        role: \"presentation\",\n        dir: prop(\"dir\"),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-value\": props2.value,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-state\": markerState,\n        style\n      });\n    },\n    getDraggingIndicatorProps(props2) {\n      const { index = 0 } = props2;\n      const isDragging = index === focusedIndex && dragging;\n      return normalize2.element({\n        ...parts.draggingIndicator.attrs,\n        role: \"presentation\",\n        dir: prop(\"dir\"),\n        hidden: !isDragging,\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-state\": isDragging ? \"open\" : \"closed\",\n        style: getThumbStyle(service, index)\n      });\n    }\n  };\n}\nvar isEqualSize = (a, b) => {\n  return a?.width === b?.width && a?.height === b?.height;\n};\nvar normalize = (value, min, max, step, minStepsBetweenThumbs) => {\n  const ranges = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.getValueRanges)(value, min, max, minStepsBetweenThumbs * step);\n  return ranges.map((range) => {\n    const snapValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.snapValueToStep)(range.value, range.min, range.max, step);\n    const rangeValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.clampValue)(snapValue, range.min, range.max);\n    if (!(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isValueWithinRange)(rangeValue, min, max)) {\n      throw new Error(\n        \"[zag-js/slider] The configured `min`, `max`, `step` or `minStepsBetweenThumbs` values are invalid\"\n      );\n    }\n    return rangeValue;\n  });\n};\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)({\n  props({ props: props2 }) {\n    const min = props2.min ?? 0;\n    const max = props2.max ?? 100;\n    const step = props2.step ?? 1;\n    const defaultValue = props2.defaultValue ?? [min];\n    const minStepsBetweenThumbs = props2.minStepsBetweenThumbs ?? 0;\n    return {\n      dir: \"ltr\",\n      thumbAlignment: \"contain\",\n      origin: \"start\",\n      orientation: \"horizontal\",\n      minStepsBetweenThumbs,\n      ...props2,\n      defaultValue: normalize(defaultValue, min, max, step, minStepsBetweenThumbs),\n      value: props2.value ? normalize(props2.value, min, max, step, minStepsBetweenThumbs) : void 0,\n      max,\n      step,\n      min\n    };\n  },\n  initialState() {\n    return \"idle\";\n  },\n  context({ prop, bindable, getContext }) {\n    return {\n      thumbSize: bindable(() => ({\n        defaultValue: prop(\"thumbSize\") || null\n      })),\n      value: bindable(() => ({\n        defaultValue: prop(\"defaultValue\"),\n        value: prop(\"value\"),\n        isEqual: _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isEqual,\n        hash(a) {\n          return a.join(\",\");\n        },\n        onChange(value) {\n          prop(\"onValueChange\")?.({ value });\n        }\n      })),\n      focusedIndex: bindable(() => ({\n        defaultValue: -1,\n        onChange(value) {\n          const ctx = getContext();\n          prop(\"onFocusChange\")?.({ focusedIndex: value, value: ctx.get(\"value\") });\n        }\n      })),\n      fieldsetDisabled: bindable(() => ({\n        defaultValue: false\n      }))\n    };\n  },\n  computed: {\n    isHorizontal: ({ prop }) => prop(\"orientation\") === \"horizontal\",\n    isVertical: ({ prop }) => prop(\"orientation\") === \"vertical\",\n    isRtl: ({ prop }) => prop(\"orientation\") === \"horizontal\" && prop(\"dir\") === \"rtl\",\n    isDisabled: ({ context, prop }) => !!prop(\"disabled\") || context.get(\"fieldsetDisabled\"),\n    isInteractive: ({ prop, computed }) => !(prop(\"readOnly\") || computed(\"isDisabled\")),\n    hasMeasuredThumbSize: ({ context }) => context.get(\"thumbSize\") != null,\n    valuePercent({ context, prop }) {\n      return context.get(\"value\").map((value) => 100 * (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.getValuePercent)(value, prop(\"min\"), prop(\"max\")));\n    }\n  },\n  watch({ track, action, context }) {\n    track([() => context.hash(\"value\")], () => {\n      action([\"syncInputElements\", \"dispatchChangeEvent\"]);\n    });\n  },\n  effects: [\"trackFormControlState\", \"trackThumbSize\"],\n  on: {\n    SET_VALUE: [\n      {\n        guard: \"hasIndex\",\n        actions: [\"setValueAtIndex\"]\n      },\n      {\n        actions: [\"setValue\"]\n      }\n    ],\n    INCREMENT: {\n      actions: [\"incrementThumbAtIndex\"]\n    },\n    DECREMENT: {\n      actions: [\"decrementThumbAtIndex\"]\n    }\n  },\n  states: {\n    idle: {\n      on: {\n        POINTER_DOWN: {\n          target: \"dragging\",\n          actions: [\"setClosestThumbIndex\", \"setPointerValue\", \"focusActiveThumb\"]\n        },\n        FOCUS: {\n          target: \"focus\",\n          actions: [\"setFocusedIndex\"]\n        },\n        THUMB_POINTER_DOWN: {\n          target: \"dragging\",\n          actions: [\"setFocusedIndex\", \"focusActiveThumb\"]\n        }\n      }\n    },\n    focus: {\n      entry: [\"focusActiveThumb\"],\n      on: {\n        POINTER_DOWN: {\n          target: \"dragging\",\n          actions: [\"setClosestThumbIndex\", \"setPointerValue\", \"focusActiveThumb\"]\n        },\n        THUMB_POINTER_DOWN: {\n          target: \"dragging\",\n          actions: [\"setFocusedIndex\", \"focusActiveThumb\"]\n        },\n        ARROW_DEC: {\n          actions: [\"decrementThumbAtIndex\", \"invokeOnChangeEnd\"]\n        },\n        ARROW_INC: {\n          actions: [\"incrementThumbAtIndex\", \"invokeOnChangeEnd\"]\n        },\n        HOME: {\n          actions: [\"setFocusedThumbToMin\", \"invokeOnChangeEnd\"]\n        },\n        END: {\n          actions: [\"setFocusedThumbToMax\", \"invokeOnChangeEnd\"]\n        },\n        BLUR: {\n          target: \"idle\",\n          actions: [\"clearFocusedIndex\"]\n        }\n      }\n    },\n    dragging: {\n      entry: [\"focusActiveThumb\"],\n      effects: [\"trackPointerMove\"],\n      on: {\n        POINTER_UP: {\n          target: \"focus\",\n          actions: [\"invokeOnChangeEnd\"]\n        },\n        POINTER_MOVE: {\n          actions: [\"setPointerValue\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      hasIndex: ({ event }) => event.index != null\n    },\n    effects: {\n      trackFormControlState({ context, scope }) {\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackFormControl)(getRootEl(scope), {\n          onFieldsetDisabledChange(disabled) {\n            context.set(\"fieldsetDisabled\", disabled);\n          },\n          onFormReset() {\n            context.set(\"value\", context.initial(\"value\"));\n          }\n        });\n      },\n      trackPointerMove({ scope, send }) {\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackPointerMove)(scope.getDoc(), {\n          onPointerMove(info) {\n            send({ type: \"POINTER_MOVE\", point: info.point });\n          },\n          onPointerUp() {\n            send({ type: \"POINTER_UP\" });\n          }\n        });\n      },\n      trackThumbSize({ context, scope, prop }) {\n        if (prop(\"thumbAlignment\") !== \"contain\" || prop(\"thumbSize\")) return;\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackElementRect)(getThumbEls(scope), {\n          box: \"border-box\",\n          measure(el) {\n            return getOffsetRect(el);\n          },\n          onEntry({ rects }) {\n            if (rects.length === 0) return;\n            const size = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.pick)(rects[0], [\"width\", \"height\"]);\n            if (isEqualSize(context.get(\"thumbSize\"), size)) return;\n            context.set(\"thumbSize\", size);\n          }\n        });\n      }\n    },\n    actions: {\n      dispatchChangeEvent({ context, scope }) {\n        dispatchChangeEvent(scope, context.get(\"value\"));\n      },\n      syncInputElements({ context, scope }) {\n        context.get(\"value\").forEach((value, index) => {\n          const inputEl = getHiddenInputEl(scope, index);\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.setElementValue)(inputEl, value.toString());\n        });\n      },\n      invokeOnChangeEnd({ prop, context }) {\n        queueMicrotask(() => {\n          prop(\"onValueChangeEnd\")?.({ value: context.get(\"value\") });\n        });\n      },\n      setClosestThumbIndex(params) {\n        const { context, event } = params;\n        const pointValue = getPointValue(params, event.point);\n        if (pointValue == null) return;\n        const focusedIndex = getClosestIndex(params, pointValue);\n        context.set(\"focusedIndex\", focusedIndex);\n      },\n      setFocusedIndex({ context, event }) {\n        context.set(\"focusedIndex\", event.index);\n      },\n      clearFocusedIndex({ context }) {\n        context.set(\"focusedIndex\", -1);\n      },\n      setPointerValue(params) {\n        queueMicrotask(() => {\n          const { context, event } = params;\n          const pointValue = getPointValue(params, event.point);\n          if (pointValue == null) return;\n          const focusedIndex = context.get(\"focusedIndex\");\n          const value = constrainValue(params, pointValue, focusedIndex);\n          context.set(\"value\", (prev) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.setValueAtIndex)(prev, focusedIndex, value));\n        });\n      },\n      focusActiveThumb({ scope, context }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          const thumbEl = getThumbEl(scope, context.get(\"focusedIndex\"));\n          thumbEl?.focus({ preventScroll: true });\n        });\n      },\n      decrementThumbAtIndex(params) {\n        const { context, event } = params;\n        const value = decrement(params, event.index, event.step);\n        context.set(\"value\", value);\n      },\n      incrementThumbAtIndex(params) {\n        const { context, event } = params;\n        const value = increment(params, event.index, event.step);\n        context.set(\"value\", value);\n      },\n      setFocusedThumbToMin(params) {\n        const { context } = params;\n        const index = context.get(\"focusedIndex\");\n        const { min } = getRangeAtIndex(params, index);\n        context.set(\"value\", (prev) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.setValueAtIndex)(prev, index, min));\n      },\n      setFocusedThumbToMax(params) {\n        const { context } = params;\n        const index = context.get(\"focusedIndex\");\n        const { max } = getRangeAtIndex(params, index);\n        context.set(\"value\", (prev) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.setValueAtIndex)(prev, index, max));\n      },\n      setValueAtIndex(params) {\n        const { context, event } = params;\n        const value = constrainValue(params, event.value, event.index);\n        context.set(\"value\", (prev) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.setValueAtIndex)(prev, event.index, value));\n      },\n      setValue(params) {\n        const { context, event } = params;\n        const value = normalizeValues(params, event.value);\n        context.set(\"value\", value);\n      }\n    }\n  }\n});\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_4__.createProps)()([\n  \"aria-label\",\n  \"aria-labelledby\",\n  \"dir\",\n  \"disabled\",\n  \"form\",\n  \"getAriaValueText\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"invalid\",\n  \"max\",\n  \"min\",\n  \"minStepsBetweenThumbs\",\n  \"name\",\n  \"onFocusChange\",\n  \"onValueChange\",\n  \"onValueChangeEnd\",\n  \"orientation\",\n  \"origin\",\n  \"readOnly\",\n  \"step\",\n  \"thumbAlignment\",\n  \"thumbAlignment\",\n  \"thumbSize\",\n  \"value\",\n  \"defaultValue\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(props);\nvar thumbProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_4__.createProps)()([\"index\", \"name\"]);\nvar splitThumbProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(thumbProps);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/slider/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/store/dist/index.mjs":
/*!***************************************************!*\
  !*** ./node_modules/@zag-js/store/dist/index.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clone: () => (/* binding */ clone),\n/* harmony export */   globalRef: () => (/* binding */ globalRef),\n/* harmony export */   proxy: () => (/* binding */ proxy),\n/* harmony export */   proxyWithComputed: () => (/* binding */ proxyWithComputed),\n/* harmony export */   ref: () => (/* binding */ ref),\n/* harmony export */   snapshot: () => (/* binding */ snapshot),\n/* harmony export */   subscribe: () => (/* binding */ subscribe)\n/* harmony export */ });\n/* harmony import */ var proxy_compare__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! proxy-compare */ \"(ssr)/./node_modules/proxy-compare/dist/index.js\");\n\n\n// src/global.ts\nfunction glob() {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n}\nfunction globalRef(key, value) {\n  const g = glob();\n  if (!g) return value();\n  g[key] || (g[key] = value());\n  return g[key];\n}\nvar refSet = globalRef(\"__zag__refSet\", () => /* @__PURE__ */ new WeakSet());\n\n// src/utils.ts\nvar isReactElement = (x) => typeof x === \"object\" && x !== null && \"$$typeof\" in x && \"props\" in x;\nvar isVueElement = (x) => typeof x === \"object\" && x !== null && \"__v_isVNode\" in x;\nvar isDOMElement = (x) => typeof x === \"object\" && x !== null && \"nodeType\" in x && typeof x.nodeName === \"string\";\nvar isElement = (x) => isReactElement(x) || isVueElement(x) || isDOMElement(x);\nvar isObject = (x) => x !== null && typeof x === \"object\";\nvar canProxy = (x) => isObject(x) && !refSet.has(x) && (Array.isArray(x) || !(Symbol.iterator in x)) && !isElement(x) && !(x instanceof WeakMap) && !(x instanceof WeakSet) && !(x instanceof Error) && !(x instanceof Number) && !(x instanceof Date) && !(x instanceof String) && !(x instanceof RegExp) && !(x instanceof ArrayBuffer) && !(x instanceof Promise);\nvar isDev = () => \"development\" !== \"production\";\n\n// src/clone.ts\nfunction set(obj, key, val) {\n  if (typeof val.value === \"object\" && !canProxy(val.value)) val.value = clone(val.value);\n  if (!val.enumerable || val.get || val.set || !val.configurable || !val.writable || key === \"__proto__\") {\n    Object.defineProperty(obj, key, val);\n  } else obj[key] = val.value;\n}\nfunction clone(x) {\n  if (typeof x !== \"object\") return x;\n  var i = 0, k, list, tmp, str = Object.prototype.toString.call(x);\n  if (str === \"[object Object]\") {\n    tmp = Object.create(Object.getPrototypeOf(x) || null);\n  } else if (str === \"[object Array]\") {\n    tmp = Array(x.length);\n  } else if (str === \"[object Set]\") {\n    tmp = /* @__PURE__ */ new Set();\n    x.forEach(function(val) {\n      tmp.add(clone(val));\n    });\n  } else if (str === \"[object Map]\") {\n    tmp = /* @__PURE__ */ new Map();\n    x.forEach(function(val, key) {\n      tmp.set(clone(key), clone(val));\n    });\n  } else if (str === \"[object Date]\") {\n    tmp = /* @__PURE__ */ new Date(+x);\n  } else if (str === \"[object RegExp]\") {\n    tmp = new RegExp(x.source, x.flags);\n  } else if (str === \"[object DataView]\") {\n    tmp = new x.constructor(clone(x.buffer));\n  } else if (str === \"[object ArrayBuffer]\") {\n    tmp = x.slice(0);\n  } else if (str === \"[object Blob]\") {\n    tmp = x.slice();\n  } else if (str.slice(-6) === \"Array]\") {\n    tmp = new x.constructor(x);\n  }\n  if (tmp) {\n    for (list = Object.getOwnPropertySymbols(x); i < list.length; i++) {\n      set(tmp, list[i], Object.getOwnPropertyDescriptor(x, list[i]));\n    }\n    for (i = 0, list = Object.getOwnPropertyNames(x); i < list.length; i++) {\n      if (Object.hasOwnProperty.call(tmp, k = list[i]) && tmp[k] === x[k]) continue;\n      set(tmp, k, Object.getOwnPropertyDescriptor(x, k));\n    }\n  }\n  return tmp || x;\n}\nvar proxyStateMap = globalRef(\"__zag__proxyStateMap\", () => /* @__PURE__ */ new WeakMap());\nvar buildProxyFunction = (objectIs = Object.is, newProxy = (target, handler) => new Proxy(target, handler), snapCache = /* @__PURE__ */ new WeakMap(), createSnapshot = (target, version) => {\n  const cache = snapCache.get(target);\n  if (cache?.[0] === version) {\n    return cache[1];\n  }\n  const snap = Array.isArray(target) ? [] : Object.create(Object.getPrototypeOf(target));\n  (0,proxy_compare__WEBPACK_IMPORTED_MODULE_0__.markToTrack)(snap, true);\n  snapCache.set(target, [version, snap]);\n  Reflect.ownKeys(target).forEach((key) => {\n    const value = Reflect.get(target, key);\n    if (refSet.has(value)) {\n      (0,proxy_compare__WEBPACK_IMPORTED_MODULE_0__.markToTrack)(value, false);\n      snap[key] = value;\n    } else if (proxyStateMap.has(value)) {\n      snap[key] = snapshot(value);\n    } else {\n      snap[key] = value;\n    }\n  });\n  return Object.freeze(snap);\n}, proxyCache = /* @__PURE__ */ new WeakMap(), versionHolder = [1, 1], proxyFunction2 = (initialObject) => {\n  if (!isObject(initialObject)) {\n    throw new Error(\"object required\");\n  }\n  const found = proxyCache.get(initialObject);\n  if (found) {\n    return found;\n  }\n  let version = versionHolder[0];\n  const listeners = /* @__PURE__ */ new Set();\n  const notifyUpdate = (op, nextVersion = ++versionHolder[0]) => {\n    if (version !== nextVersion) {\n      version = nextVersion;\n      listeners.forEach((listener) => listener(op, nextVersion));\n    }\n  };\n  let checkVersion = versionHolder[1];\n  const ensureVersion = (nextCheckVersion = ++versionHolder[1]) => {\n    if (checkVersion !== nextCheckVersion && !listeners.size) {\n      checkVersion = nextCheckVersion;\n      propProxyStates.forEach(([propProxyState]) => {\n        const propVersion = propProxyState[1](nextCheckVersion);\n        if (propVersion > version) {\n          version = propVersion;\n        }\n      });\n    }\n    return version;\n  };\n  const createPropListener = (prop) => (op, nextVersion) => {\n    const newOp = [...op];\n    newOp[1] = [prop, ...newOp[1]];\n    notifyUpdate(newOp, nextVersion);\n  };\n  const propProxyStates = /* @__PURE__ */ new Map();\n  const addPropListener = (prop, propProxyState) => {\n    if (isDev() && propProxyStates.has(prop)) {\n      throw new Error(\"prop listener already exists\");\n    }\n    if (listeners.size) {\n      const remove = propProxyState[3](createPropListener(prop));\n      propProxyStates.set(prop, [propProxyState, remove]);\n    } else {\n      propProxyStates.set(prop, [propProxyState]);\n    }\n  };\n  const removePropListener = (prop) => {\n    const entry = propProxyStates.get(prop);\n    if (entry) {\n      propProxyStates.delete(prop);\n      entry[1]?.();\n    }\n  };\n  const addListener = (listener) => {\n    listeners.add(listener);\n    if (listeners.size === 1) {\n      propProxyStates.forEach(([propProxyState, prevRemove], prop) => {\n        if (isDev() && prevRemove) {\n          throw new Error(\"remove already exists\");\n        }\n        const remove = propProxyState[3](createPropListener(prop));\n        propProxyStates.set(prop, [propProxyState, remove]);\n      });\n    }\n    const removeListener = () => {\n      listeners.delete(listener);\n      if (listeners.size === 0) {\n        propProxyStates.forEach(([propProxyState, remove], prop) => {\n          if (remove) {\n            remove();\n            propProxyStates.set(prop, [propProxyState]);\n          }\n        });\n      }\n    };\n    return removeListener;\n  };\n  const baseObject = Array.isArray(initialObject) ? [] : Object.create(Object.getPrototypeOf(initialObject));\n  const handler = {\n    deleteProperty(target, prop) {\n      const prevValue = Reflect.get(target, prop);\n      removePropListener(prop);\n      const deleted = Reflect.deleteProperty(target, prop);\n      if (deleted) {\n        notifyUpdate([\"delete\", [prop], prevValue]);\n      }\n      return deleted;\n    },\n    set(target, prop, value, receiver) {\n      const hasPrevValue = Reflect.has(target, prop);\n      const prevValue = Reflect.get(target, prop, receiver);\n      if (hasPrevValue && (objectIs(prevValue, value) || proxyCache.has(value) && objectIs(prevValue, proxyCache.get(value)))) {\n        return true;\n      }\n      removePropListener(prop);\n      if (isObject(value)) {\n        value = (0,proxy_compare__WEBPACK_IMPORTED_MODULE_0__.getUntracked)(value) || value;\n      }\n      let nextValue = value;\n      if (Object.getOwnPropertyDescriptor(target, prop)?.set) ; else {\n        if (!proxyStateMap.has(value) && canProxy(value)) {\n          nextValue = proxy(value);\n        }\n        const childProxyState = !refSet.has(nextValue) && proxyStateMap.get(nextValue);\n        if (childProxyState) {\n          addPropListener(prop, childProxyState);\n        }\n      }\n      Reflect.set(target, prop, nextValue, receiver);\n      notifyUpdate([\"set\", [prop], value, prevValue]);\n      return true;\n    }\n  };\n  const proxyObject = newProxy(baseObject, handler);\n  proxyCache.set(initialObject, proxyObject);\n  const proxyState = [baseObject, ensureVersion, createSnapshot, addListener];\n  proxyStateMap.set(proxyObject, proxyState);\n  Reflect.ownKeys(initialObject).forEach((key) => {\n    const desc = Object.getOwnPropertyDescriptor(initialObject, key);\n    if (desc.get || desc.set) {\n      Object.defineProperty(baseObject, key, desc);\n    } else {\n      proxyObject[key] = initialObject[key];\n    }\n  });\n  return proxyObject;\n}) => [\n  // public functions\n  proxyFunction2,\n  // shared state\n  proxyStateMap,\n  refSet,\n  // internal things\n  objectIs,\n  newProxy,\n  canProxy,\n  snapCache,\n  createSnapshot,\n  proxyCache,\n  versionHolder\n];\nvar [proxyFunction] = buildProxyFunction();\nfunction proxy(initialObject = {}) {\n  return proxyFunction(initialObject);\n}\nfunction subscribe(proxyObject, callback, notifyInSync) {\n  const proxyState = proxyStateMap.get(proxyObject);\n  if (isDev() && !proxyState) {\n    console.warn(\"Please use proxy object\");\n  }\n  let promise;\n  const ops = [];\n  const addListener = proxyState[3];\n  let isListenerActive = false;\n  const listener = (op) => {\n    ops.push(op);\n    if (notifyInSync) {\n      callback(ops.splice(0));\n      return;\n    }\n    if (!promise) {\n      promise = Promise.resolve().then(() => {\n        promise = void 0;\n        if (isListenerActive) {\n          callback(ops.splice(0));\n        }\n      });\n    }\n  };\n  const removeListener = addListener(listener);\n  isListenerActive = true;\n  return () => {\n    isListenerActive = false;\n    removeListener();\n  };\n}\nfunction snapshot(proxyObject) {\n  const proxyState = proxyStateMap.get(proxyObject);\n  if (isDev() && !proxyState) {\n    console.warn(\"Please use proxy object\");\n  }\n  const [target, ensureVersion, createSnapshot] = proxyState;\n  return createSnapshot(target, ensureVersion());\n}\nfunction ref(obj) {\n  refSet.add(obj);\n  return obj;\n}\n\n// src/proxy-computed.ts\nfunction proxyWithComputed(initialObject, computedFns) {\n  const keys = Object.keys(computedFns);\n  keys.forEach((key) => {\n    if (Object.getOwnPropertyDescriptor(initialObject, key)) {\n      throw new Error(\"object property already defined\");\n    }\n    const computedFn = computedFns[key];\n    const { get, set: set2 } = typeof computedFn === \"function\" ? { get: computedFn } : computedFn;\n    const desc = {};\n    desc.get = () => get(snapshot(proxyObject));\n    if (set2) {\n      desc.set = (newValue) => set2(proxyObject, newValue);\n    }\n    Object.defineProperty(initialObject, key, desc);\n  });\n  const proxyObject = proxy(initialObject);\n  return proxyObject;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/store/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/switch/dist/index.mjs":
/*!****************************************************!*\
  !*** ./node_modules/@zag-js/switch/dist/index.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/focus-visible */ \"(ssr)/./node_modules/@zag-js/focus-visible/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n\n\n\n\n// src/switch.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"switch\").parts(\"root\", \"label\", \"control\", \"thumb\");\nvar parts = anatomy.build();\n\n// src/switch.dom.ts\nvar getRootId = (ctx) => ctx.ids?.root ?? `switch:${ctx.id}`;\nvar getLabelId = (ctx) => ctx.ids?.label ?? `switch:${ctx.id}:label`;\nvar getThumbId = (ctx) => ctx.ids?.thumb ?? `switch:${ctx.id}:thumb`;\nvar getControlId = (ctx) => ctx.ids?.control ?? `switch:${ctx.id}:control`;\nvar getHiddenInputId = (ctx) => ctx.ids?.hiddenInput ?? `switch:${ctx.id}:input`;\nvar getRootEl = (ctx) => ctx.getById(getRootId(ctx));\nvar getHiddenInputEl = (ctx) => ctx.getById(getHiddenInputId(ctx));\n\n// src/switch.connect.ts\nfunction connect(service, normalize) {\n  const { context, send, prop, scope } = service;\n  const disabled = prop(\"disabled\");\n  const readOnly = prop(\"readOnly\");\n  const checked = !!context.get(\"checked\");\n  const focused = !disabled && context.get(\"focused\");\n  const focusVisible = !disabled && context.get(\"focusVisible\");\n  const dataAttrs = {\n    \"data-active\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(context.get(\"active\")),\n    \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n    \"data-focus-visible\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focusVisible),\n    \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(readOnly),\n    \"data-hover\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(context.get(\"hovered\")),\n    \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n    \"data-state\": checked ? \"checked\" : \"unchecked\",\n    \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"invalid\"))\n  };\n  return {\n    checked,\n    disabled,\n    focused,\n    setChecked(checked2) {\n      send({ type: \"CHECKED.SET\", checked: checked2, isTrusted: false });\n    },\n    toggleChecked() {\n      send({ type: \"CHECKED.TOGGLE\", checked, isTrusted: false });\n    },\n    getRootProps() {\n      return normalize.label({\n        ...parts.root.attrs,\n        ...dataAttrs,\n        dir: prop(\"dir\"),\n        id: getRootId(scope),\n        htmlFor: getHiddenInputId(scope),\n        onPointerMove() {\n          if (disabled) return;\n          send({ type: \"CONTEXT.SET\", context: { hovered: true } });\n        },\n        onPointerLeave() {\n          if (disabled) return;\n          send({ type: \"CONTEXT.SET\", context: { hovered: false } });\n        },\n        onClick(event) {\n          if (disabled) return;\n          const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventTarget)(event);\n          if (target === getHiddenInputEl(scope)) {\n            event.stopPropagation();\n          }\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isSafari)()) {\n            getHiddenInputEl(scope)?.focus();\n          }\n        }\n      });\n    },\n    getLabelProps() {\n      return normalize.element({\n        ...parts.label.attrs,\n        ...dataAttrs,\n        dir: prop(\"dir\"),\n        id: getLabelId(scope)\n      });\n    },\n    getThumbProps() {\n      return normalize.element({\n        ...parts.thumb.attrs,\n        ...dataAttrs,\n        dir: prop(\"dir\"),\n        id: getThumbId(scope),\n        \"aria-hidden\": true\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        ...dataAttrs,\n        dir: prop(\"dir\"),\n        id: getControlId(scope),\n        \"aria-hidden\": true\n      });\n    },\n    getHiddenInputProps() {\n      return normalize.input({\n        id: getHiddenInputId(scope),\n        type: \"checkbox\",\n        required: prop(\"required\"),\n        defaultChecked: checked,\n        disabled,\n        \"aria-labelledby\": getLabelId(scope),\n        \"aria-invalid\": prop(\"invalid\"),\n        name: prop(\"name\"),\n        form: prop(\"form\"),\n        value: prop(\"value\"),\n        style: _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.visuallyHiddenStyle,\n        onFocus() {\n          const focusVisible2 = (0,_zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_2__.isFocusVisible)();\n          send({ type: \"CONTEXT.SET\", context: { focused: true, focusVisible: focusVisible2 } });\n        },\n        onBlur() {\n          send({ type: \"CONTEXT.SET\", context: { focused: false, focusVisible: false } });\n        },\n        onClick(event) {\n          if (readOnly) {\n            event.preventDefault();\n            return;\n          }\n          const checked2 = event.currentTarget.checked;\n          send({ type: \"CHECKED.SET\", checked: checked2, isTrusted: true });\n        }\n      });\n    }\n  };\n}\nvar { not } = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createGuards)();\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)({\n  props({ props: props2 }) {\n    return {\n      defaultChecked: false,\n      label: \"switch\",\n      value: \"on\",\n      ...props2\n    };\n  },\n  initialState() {\n    return \"ready\";\n  },\n  context({ prop, bindable }) {\n    return {\n      checked: bindable(() => ({\n        defaultValue: prop(\"defaultChecked\"),\n        value: prop(\"checked\"),\n        onChange(value) {\n          prop(\"onCheckedChange\")?.({ checked: value });\n        }\n      })),\n      fieldsetDisabled: bindable(() => ({\n        defaultValue: false\n      })),\n      focusVisible: bindable(() => ({\n        defaultValue: false\n      })),\n      active: bindable(() => ({\n        defaultValue: false\n      })),\n      focused: bindable(() => ({\n        defaultValue: false\n      })),\n      hovered: bindable(() => ({\n        defaultValue: false\n      }))\n    };\n  },\n  computed: {\n    isDisabled: ({ context, prop }) => prop(\"disabled\") || context.get(\"fieldsetDisabled\")\n  },\n  watch({ track, prop, context, action }) {\n    track([() => prop(\"disabled\")], () => {\n      action([\"removeFocusIfNeeded\"]);\n    });\n    track([() => context.get(\"checked\")], () => {\n      action([\"syncInputElement\"]);\n    });\n  },\n  effects: [\"trackFormControlState\", \"trackPressEvent\", \"trackFocusVisible\"],\n  on: {\n    \"CHECKED.TOGGLE\": [\n      {\n        guard: not(\"isTrusted\"),\n        actions: [\"toggleChecked\", \"dispatchChangeEvent\"]\n      },\n      {\n        actions: [\"toggleChecked\"]\n      }\n    ],\n    \"CHECKED.SET\": [\n      {\n        guard: not(\"isTrusted\"),\n        actions: [\"setChecked\", \"dispatchChangeEvent\"]\n      },\n      {\n        actions: [\"setChecked\"]\n      }\n    ],\n    \"CONTEXT.SET\": {\n      actions: [\"setContext\"]\n    }\n  },\n  states: {\n    ready: {}\n  },\n  implementations: {\n    guards: {\n      isTrusted: ({ event }) => !!event.isTrusted\n    },\n    effects: {\n      trackPressEvent({ computed, scope, context }) {\n        if (computed(\"isDisabled\")) return;\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackPress)({\n          pointerNode: getRootEl(scope),\n          keyboardNode: getHiddenInputEl(scope),\n          isValidKey: (event) => event.key === \" \",\n          onPress: () => context.set(\"active\", false),\n          onPressStart: () => context.set(\"active\", true),\n          onPressEnd: () => context.set(\"active\", false)\n        });\n      },\n      trackFocusVisible({ computed, scope }) {\n        if (computed(\"isDisabled\")) return;\n        return (0,_zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_2__.trackFocusVisible)({ root: scope.getRootNode() });\n      },\n      trackFormControlState({ context, send, scope }) {\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackFormControl)(getHiddenInputEl(scope), {\n          onFieldsetDisabledChange(disabled) {\n            context.set(\"fieldsetDisabled\", disabled);\n          },\n          onFormReset() {\n            const checked = context.initial(\"checked\");\n            send({ type: \"CHECKED.SET\", checked: !!checked, src: \"form-reset\" });\n          }\n        });\n      }\n    },\n    actions: {\n      setContext({ context, event }) {\n        for (const key in event.context) {\n          context.set(key, event.context[key]);\n        }\n      },\n      syncInputElement({ context, scope }) {\n        const inputEl = getHiddenInputEl(scope);\n        if (!inputEl) return;\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.setElementChecked)(inputEl, !!context.get(\"checked\"));\n      },\n      removeFocusIfNeeded({ context, prop }) {\n        if (prop(\"disabled\")) {\n          context.set(\"focused\", false);\n        }\n      },\n      setChecked({ context, event }) {\n        context.set(\"checked\", event.checked);\n      },\n      toggleChecked({ context }) {\n        context.set(\"checked\", !context.get(\"checked\"));\n      },\n      dispatchChangeEvent({ context, scope }) {\n        const inputEl = getHiddenInputEl(scope);\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dispatchInputCheckedEvent)(inputEl, { checked: context.get(\"checked\") });\n      }\n    }\n  }\n});\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_4__.createProps)()([\n  \"checked\",\n  \"defaultChecked\",\n  \"dir\",\n  \"disabled\",\n  \"form\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"invalid\",\n  \"label\",\n  \"name\",\n  \"onCheckedChange\",\n  \"readOnly\",\n  \"required\",\n  \"value\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_5__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/switch/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/tooltip/dist/index.mjs":
/*!*****************************************************!*\
  !*** ./node_modules/@zag-js/tooltip/dist/index.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/focus-visible */ \"(ssr)/./node_modules/@zag-js/focus-visible/dist/index.mjs\");\n/* harmony import */ var _zag_js_popper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/popper */ \"(ssr)/./node_modules/@zag-js/popper/dist/index.mjs\");\n/* harmony import */ var _zag_js_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/store */ \"(ssr)/./node_modules/@zag-js/store/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n\n\n\n\n\n\n// src/tooltip.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"tooltip\").parts(\"trigger\", \"arrow\", \"arrowTip\", \"positioner\", \"content\");\nvar parts = anatomy.build();\n\n// src/tooltip.dom.ts\nvar getTriggerId = (scope) => scope.ids?.trigger ?? `tooltip:${scope.id}:trigger`;\nvar getContentId = (scope) => scope.ids?.content ?? `tooltip:${scope.id}:content`;\nvar getArrowId = (scope) => scope.ids?.arrow ?? `tooltip:${scope.id}:arrow`;\nvar getPositionerId = (scope) => scope.ids?.positioner ?? `tooltip:${scope.id}:popper`;\nvar getTriggerEl = (scope) => scope.getById(getTriggerId(scope));\nvar getPositionerEl = (scope) => scope.getById(getPositionerId(scope));\nvar store = (0,_zag_js_store__WEBPACK_IMPORTED_MODULE_1__.proxy)({ id: null });\n\n// src/tooltip.connect.ts\nfunction connect(service, normalize) {\n  const { state, context, send, scope, prop, event: _event } = service;\n  const id = prop(\"id\");\n  const hasAriaLabel = !!prop(\"aria-label\");\n  const open = state.matches(\"open\", \"closing\");\n  const triggerId = getTriggerId(scope);\n  const contentId = getContentId(scope);\n  const disabled = prop(\"disabled\");\n  const popperStyles = (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_2__.getPlacementStyles)({\n    ...prop(\"positioning\"),\n    placement: context.get(\"currentPlacement\")\n  });\n  return {\n    open,\n    setOpen(nextOpen) {\n      const open2 = state.matches(\"open\", \"closing\");\n      if (open2 === nextOpen) return;\n      send({ type: nextOpen ? \"open\" : \"close\" });\n    },\n    reposition(options = {}) {\n      send({ type: \"positioning.set\", options });\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...parts.trigger.attrs,\n        id: triggerId,\n        dir: prop(\"dir\"),\n        \"data-expanded\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(open),\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-describedby\": open ? contentId : void 0,\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          if (!prop(\"closeOnClick\")) return;\n          send({ type: \"close\", src: \"trigger.click\" });\n        },\n        onFocus(event) {\n          queueMicrotask(() => {\n            if (event.defaultPrevented) return;\n            if (disabled) return;\n            if (_event.src === \"trigger.pointerdown\") return;\n            if (!(0,_zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_4__.isFocusVisible)()) return;\n            send({ type: \"open\", src: \"trigger.focus\" });\n          });\n        },\n        onBlur(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          if (id === store.id) {\n            send({ type: \"close\", src: \"trigger.blur\" });\n          }\n        },\n        onPointerDown(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          if (!prop(\"closeOnPointerDown\")) return;\n          if (id === store.id) {\n            send({ type: \"close\", src: \"trigger.pointerdown\" });\n          }\n        },\n        onPointerMove(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          if (event.pointerType === \"touch\") return;\n          send({ type: \"pointer.move\" });\n        },\n        onPointerLeave() {\n          if (disabled) return;\n          send({ type: \"pointer.leave\" });\n        },\n        onPointerCancel() {\n          if (disabled) return;\n          send({ type: \"pointer.leave\" });\n        }\n      });\n    },\n    getArrowProps() {\n      return normalize.element({\n        id: getArrowId(scope),\n        ...parts.arrow.attrs,\n        dir: prop(\"dir\"),\n        style: popperStyles.arrow\n      });\n    },\n    getArrowTipProps() {\n      return normalize.element({\n        ...parts.arrowTip.attrs,\n        dir: prop(\"dir\"),\n        style: popperStyles.arrowTip\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        id: getPositionerId(scope),\n        ...parts.positioner.attrs,\n        dir: prop(\"dir\"),\n        style: popperStyles.floating\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        dir: prop(\"dir\"),\n        hidden: !open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        role: hasAriaLabel ? void 0 : \"tooltip\",\n        id: hasAriaLabel ? void 0 : contentId,\n        \"data-placement\": context.get(\"currentPlacement\"),\n        onPointerEnter() {\n          send({ type: \"content.pointer.move\" });\n        },\n        onPointerLeave() {\n          send({ type: \"content.pointer.leave\" });\n        },\n        style: {\n          pointerEvents: prop(\"interactive\") ? \"auto\" : \"none\"\n        }\n      });\n    }\n  };\n}\nvar { and, not } = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_5__.createGuards)();\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_5__.createMachine)({\n  initialState: ({ prop }) => {\n    const open = prop(\"open\") || prop(\"defaultOpen\");\n    return open ? \"open\" : \"closed\";\n  },\n  props({ props: props2 }) {\n    return {\n      id: \"x\",\n      openDelay: 1e3,\n      closeDelay: 500,\n      closeOnPointerDown: true,\n      closeOnEscape: true,\n      interactive: false,\n      closeOnScroll: true,\n      closeOnClick: true,\n      disabled: false,\n      ...props2,\n      positioning: {\n        placement: \"bottom\",\n        ...props2.positioning\n      }\n    };\n  },\n  effects: [\"trackFocusVisible\", \"trackStore\"],\n  context: ({ bindable }) => ({\n    currentPlacement: bindable(() => ({ defaultValue: void 0 })),\n    hasPointerMoveOpened: bindable(() => ({ defaultValue: false }))\n  }),\n  watch({ track, action, prop }) {\n    track([() => prop(\"disabled\")], () => {\n      action([\"closeIfDisabled\"]);\n    });\n    track([() => prop(\"open\")], () => {\n      action([\"toggleVisibility\"]);\n    });\n  },\n  states: {\n    closed: {\n      entry: [\"clearGlobalId\"],\n      on: {\n        \"controlled.open\": {\n          target: \"open\"\n        },\n        open: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"invokeOnOpen\"]\n          }\n        ],\n        \"pointer.leave\": {\n          actions: [\"clearPointerMoveOpened\"]\n        },\n        \"pointer.move\": [\n          {\n            guard: and(\"noVisibleTooltip\", not(\"hasPointerMoveOpened\")),\n            target: \"opening\"\n          },\n          {\n            guard: not(\"hasPointerMoveOpened\"),\n            target: \"open\",\n            actions: [\"setPointerMoveOpened\", \"invokeOnOpen\"]\n          }\n        ]\n      }\n    },\n    opening: {\n      effects: [\"trackScroll\", \"trackPointerlockChange\", \"waitForOpenDelay\"],\n      on: {\n        \"after.openDelay\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"setPointerMoveOpened\", \"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"setPointerMoveOpened\", \"invokeOnOpen\"]\n          }\n        ],\n        \"controlled.open\": {\n          target: \"open\"\n        },\n        \"controlled.close\": {\n          target: \"closed\"\n        },\n        open: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"invokeOnOpen\"]\n          }\n        ],\n        \"pointer.leave\": [\n          {\n            guard: \"isOpenControlled\",\n            // We trigger toggleVisibility manually since the `ctx.open` has not changed yet (at this point)\n            actions: [\"clearPointerMoveOpened\", \"invokeOnClose\", \"toggleVisibility\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"clearPointerMoveOpened\", \"invokeOnClose\"]\n          }\n        ],\n        close: [\n          {\n            guard: \"isOpenControlled\",\n            // We trigger toggleVisibility manually since the `ctx.open` has not changed yet (at this point)\n            actions: [\"invokeOnClose\", \"toggleVisibility\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ]\n      }\n    },\n    open: {\n      effects: [\"trackEscapeKey\", \"trackScroll\", \"trackPointerlockChange\", \"trackPositioning\"],\n      entry: [\"setGlobalId\"],\n      on: {\n        \"controlled.close\": {\n          target: \"closed\"\n        },\n        close: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        \"pointer.leave\": [\n          {\n            guard: \"isVisible\",\n            target: \"closing\",\n            actions: [\"clearPointerMoveOpened\"]\n          },\n          // == group ==\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"clearPointerMoveOpened\", \"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"clearPointerMoveOpened\", \"invokeOnClose\"]\n          }\n        ],\n        \"content.pointer.leave\": {\n          guard: \"isInteractive\",\n          target: \"closing\"\n        },\n        \"positioning.set\": {\n          actions: [\"reposition\"]\n        }\n      }\n    },\n    closing: {\n      effects: [\"trackPositioning\", \"waitForCloseDelay\"],\n      on: {\n        \"after.closeDelay\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        \"controlled.close\": {\n          target: \"closed\"\n        },\n        \"controlled.open\": {\n          target: \"open\"\n        },\n        close: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        \"pointer.move\": [\n          {\n            guard: \"isOpenControlled\",\n            // We trigger toggleVisibility manually since the `ctx.open` has not changed yet (at this point)\n            actions: [\"setPointerMoveOpened\", \"invokeOnOpen\", \"toggleVisibility\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"setPointerMoveOpened\", \"invokeOnOpen\"]\n          }\n        ],\n        \"content.pointer.move\": {\n          guard: \"isInteractive\",\n          target: \"open\"\n        },\n        \"positioning.set\": {\n          actions: [\"reposition\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      noVisibleTooltip: () => store.id === null,\n      isVisible: ({ prop }) => prop(\"id\") === store.id,\n      isInteractive: ({ prop }) => !!prop(\"interactive\"),\n      hasPointerMoveOpened: ({ context }) => context.get(\"hasPointerMoveOpened\"),\n      isOpenControlled: ({ prop }) => prop(\"open\") !== void 0\n    },\n    actions: {\n      setGlobalId: ({ prop }) => {\n        store.id = prop(\"id\");\n      },\n      clearGlobalId: ({ prop }) => {\n        if (prop(\"id\") === store.id) {\n          store.id = null;\n        }\n      },\n      invokeOnOpen: ({ prop }) => {\n        prop(\"onOpenChange\")?.({ open: true });\n      },\n      invokeOnClose: ({ prop }) => {\n        prop(\"onOpenChange\")?.({ open: false });\n      },\n      closeIfDisabled: ({ prop, send }) => {\n        if (!prop(\"disabled\")) return;\n        send({ type: \"close\", src: \"disabled.change\" });\n      },\n      reposition: ({ context, event, prop, scope }) => {\n        if (event.type !== \"positioning.set\") return;\n        const getPositionerEl2 = () => getPositionerEl(scope);\n        return (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_2__.getPlacement)(getTriggerEl(scope), getPositionerEl2, {\n          ...prop(\"positioning\"),\n          ...event.options,\n          defer: true,\n          listeners: false,\n          onComplete(data) {\n            context.set(\"currentPlacement\", data.placement);\n          }\n        });\n      },\n      toggleVisibility: ({ prop, event, send }) => {\n        queueMicrotask(() => {\n          send({\n            type: prop(\"open\") ? \"controlled.open\" : \"controlled.close\",\n            previousEvent: event\n          });\n        });\n      },\n      setPointerMoveOpened: ({ context }) => {\n        context.set(\"hasPointerMoveOpened\", true);\n      },\n      clearPointerMoveOpened: ({ context }) => {\n        context.set(\"hasPointerMoveOpened\", false);\n      }\n    },\n    effects: {\n      trackFocusVisible: ({ scope }) => {\n        return (0,_zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_4__.trackFocusVisible)({ root: scope.getRootNode?.() });\n      },\n      trackPositioning: ({ context, prop, scope }) => {\n        if (!context.get(\"currentPlacement\")) {\n          context.set(\"currentPlacement\", prop(\"positioning\").placement);\n        }\n        const getPositionerEl2 = () => getPositionerEl(scope);\n        return (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_2__.getPlacement)(getTriggerEl(scope), getPositionerEl2, {\n          ...prop(\"positioning\"),\n          defer: true,\n          onComplete(data) {\n            context.set(\"currentPlacement\", data.placement);\n          }\n        });\n      },\n      trackPointerlockChange: ({ send, scope }) => {\n        const doc = scope.getDoc();\n        const onChange = () => send({ type: \"close\", src: \"pointerlock:change\" });\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.addDomEvent)(doc, \"pointerlockchange\", onChange, false);\n      },\n      trackScroll: ({ send, prop, scope }) => {\n        if (!prop(\"closeOnScroll\")) return;\n        const triggerEl = getTriggerEl(scope);\n        if (!triggerEl) return;\n        const overflowParents = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.getOverflowAncestors)(triggerEl);\n        const cleanups = overflowParents.map((overflowParent) => {\n          const onScroll = () => {\n            send({ type: \"close\", src: \"scroll\" });\n          };\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.addDomEvent)(overflowParent, \"scroll\", onScroll, {\n            passive: true,\n            capture: true\n          });\n        });\n        return () => {\n          cleanups.forEach((fn) => fn?.());\n        };\n      },\n      trackStore: ({ prop, send }) => {\n        let cleanup;\n        queueMicrotask(() => {\n          cleanup = (0,_zag_js_store__WEBPACK_IMPORTED_MODULE_1__.subscribe)(store, () => {\n            if (store.id !== prop(\"id\")) {\n              send({ type: \"close\", src: \"id.change\" });\n            }\n          });\n        });\n        return () => cleanup?.();\n      },\n      trackEscapeKey: ({ send, prop }) => {\n        if (!prop(\"closeOnEscape\")) return;\n        const onKeyDown = (event) => {\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.isComposingEvent)(event)) return;\n          if (event.key !== \"Escape\") return;\n          event.stopPropagation();\n          send({ type: \"close\", src: \"keydown.escape\" });\n        };\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.addDomEvent)(document, \"keydown\", onKeyDown, true);\n      },\n      waitForOpenDelay: ({ send, prop }) => {\n        const id = setTimeout(() => {\n          send({ type: \"after.openDelay\" });\n        }, prop(\"openDelay\"));\n        return () => clearTimeout(id);\n      },\n      waitForCloseDelay: ({ send, prop }) => {\n        const id = setTimeout(() => {\n          send({ type: \"after.closeDelay\" });\n        }, prop(\"closeDelay\"));\n        return () => clearTimeout(id);\n      }\n    }\n  }\n});\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_6__.createProps)()([\n  \"aria-label\",\n  \"closeDelay\",\n  \"closeOnEscape\",\n  \"closeOnPointerDown\",\n  \"closeOnScroll\",\n  \"closeOnClick\",\n  \"dir\",\n  \"disabled\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"interactive\",\n  \"onOpenChange\",\n  \"defaultOpen\",\n  \"open\",\n  \"openDelay\",\n  \"positioning\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_7__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/tooltip/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/types/dist/index.mjs":
/*!***************************************************!*\
  !*** ./node_modules/@zag-js/types/dist/index.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNormalizer: () => (/* binding */ createNormalizer),\n/* harmony export */   createProps: () => (/* binding */ createProps)\n/* harmony export */ });\n// src/prop-types.ts\nfunction createNormalizer(fn) {\n  return new Proxy({}, {\n    get(_target, key) {\n      if (key === \"style\")\n        return (props) => {\n          return fn({ style: props }).style;\n        };\n      return fn;\n    }\n  });\n}\n\n// src/create-props.ts\nvar createProps = () => (props) => Array.from(new Set(props));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy90eXBlcy9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLGNBQWM7QUFDcEM7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7O0FBRXlDIiwic291cmNlcyI6WyIvVXNlcnMvcmF1bmFxcGxhaGEvRGVza3RvcC9waWNrLWEtYm90LTIwMjUvbm9kZV9tb2R1bGVzL0B6YWctanMvdHlwZXMvZGlzdC9pbmRleC5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3Byb3AtdHlwZXMudHNcbmZ1bmN0aW9uIGNyZWF0ZU5vcm1hbGl6ZXIoZm4pIHtcbiAgcmV0dXJuIG5ldyBQcm94eSh7fSwge1xuICAgIGdldChfdGFyZ2V0LCBrZXkpIHtcbiAgICAgIGlmIChrZXkgPT09IFwic3R5bGVcIilcbiAgICAgICAgcmV0dXJuIChwcm9wcykgPT4ge1xuICAgICAgICAgIHJldHVybiBmbih7IHN0eWxlOiBwcm9wcyB9KS5zdHlsZTtcbiAgICAgICAgfTtcbiAgICAgIHJldHVybiBmbjtcbiAgICB9XG4gIH0pO1xufVxuXG4vLyBzcmMvY3JlYXRlLXByb3BzLnRzXG52YXIgY3JlYXRlUHJvcHMgPSAoKSA9PiAocHJvcHMpID0+IEFycmF5LmZyb20obmV3IFNldChwcm9wcykpO1xuXG5leHBvcnQgeyBjcmVhdGVOb3JtYWxpemVyLCBjcmVhdGVQcm9wcyB9O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/types/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/utils/dist/index.mjs":
/*!***************************************************!*\
  !*** ./node_modules/@zag-js/utils/dist/index.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   add: () => (/* binding */ add),\n/* harmony export */   addOrRemove: () => (/* binding */ addOrRemove),\n/* harmony export */   callAll: () => (/* binding */ callAll),\n/* harmony export */   cast: () => (/* binding */ cast),\n/* harmony export */   chunk: () => (/* binding */ chunk),\n/* harmony export */   clampPercent: () => (/* binding */ clampPercent),\n/* harmony export */   clampValue: () => (/* binding */ clampValue),\n/* harmony export */   clear: () => (/* binding */ clear),\n/* harmony export */   compact: () => (/* binding */ compact),\n/* harmony export */   createSplitProps: () => (/* binding */ createSplitProps),\n/* harmony export */   debounce: () => (/* binding */ debounce),\n/* harmony export */   decrementValue: () => (/* binding */ decrementValue),\n/* harmony export */   ensure: () => (/* binding */ ensure),\n/* harmony export */   ensureProps: () => (/* binding */ ensureProps),\n/* harmony export */   first: () => (/* binding */ first),\n/* harmony export */   flatArray: () => (/* binding */ flatArray),\n/* harmony export */   fromLength: () => (/* binding */ fromLength),\n/* harmony export */   getClosestValue: () => (/* binding */ getClosestValue),\n/* harmony export */   getClosestValueIndex: () => (/* binding */ getClosestValueIndex),\n/* harmony export */   getMaxValueAtIndex: () => (/* binding */ getMaxValueAtIndex),\n/* harmony export */   getMinValueAtIndex: () => (/* binding */ getMinValueAtIndex),\n/* harmony export */   getNextStepValue: () => (/* binding */ getNextStepValue),\n/* harmony export */   getPercentValue: () => (/* binding */ getPercentValue),\n/* harmony export */   getPreviousStepValue: () => (/* binding */ getPreviousStepValue),\n/* harmony export */   getValuePercent: () => (/* binding */ getValuePercent),\n/* harmony export */   getValueRanges: () => (/* binding */ getValueRanges),\n/* harmony export */   getValueSetterAtIndex: () => (/* binding */ getValueSetterAtIndex),\n/* harmony export */   getValueTransformer: () => (/* binding */ getValueTransformer),\n/* harmony export */   has: () => (/* binding */ has),\n/* harmony export */   hasProp: () => (/* binding */ hasProp),\n/* harmony export */   identity: () => (/* binding */ identity),\n/* harmony export */   incrementValue: () => (/* binding */ incrementValue),\n/* harmony export */   insertAt: () => (/* binding */ insertAt),\n/* harmony export */   invariant: () => (/* binding */ invariant),\n/* harmony export */   isArray: () => (/* binding */ isArray),\n/* harmony export */   isBoolean: () => (/* binding */ isBoolean),\n/* harmony export */   isDev: () => (/* binding */ isDev),\n/* harmony export */   isEmpty: () => (/* binding */ isEmpty),\n/* harmony export */   isEqual: () => (/* binding */ isEqual),\n/* harmony export */   isFunction: () => (/* binding */ isFunction),\n/* harmony export */   isNaN: () => (/* binding */ isNaN),\n/* harmony export */   isNull: () => (/* binding */ isNull),\n/* harmony export */   isNumber: () => (/* binding */ isNumber),\n/* harmony export */   isObject: () => (/* binding */ isObject),\n/* harmony export */   isObjectLike: () => (/* binding */ isObjectLike),\n/* harmony export */   isPlainObject: () => (/* binding */ isPlainObject),\n/* harmony export */   isString: () => (/* binding */ isString),\n/* harmony export */   isValueAtMax: () => (/* binding */ isValueAtMax),\n/* harmony export */   isValueAtMin: () => (/* binding */ isValueAtMin),\n/* harmony export */   isValueWithinRange: () => (/* binding */ isValueWithinRange),\n/* harmony export */   json: () => (/* binding */ json),\n/* harmony export */   last: () => (/* binding */ last),\n/* harmony export */   match: () => (/* binding */ match),\n/* harmony export */   mod: () => (/* binding */ mod),\n/* harmony export */   nan: () => (/* binding */ nan),\n/* harmony export */   next: () => (/* binding */ next),\n/* harmony export */   nextIndex: () => (/* binding */ nextIndex),\n/* harmony export */   noop: () => (/* binding */ noop),\n/* harmony export */   omit: () => (/* binding */ omit),\n/* harmony export */   pick: () => (/* binding */ pick),\n/* harmony export */   prev: () => (/* binding */ prev),\n/* harmony export */   prevIndex: () => (/* binding */ prevIndex),\n/* harmony export */   remove: () => (/* binding */ remove),\n/* harmony export */   removeAt: () => (/* binding */ removeAt),\n/* harmony export */   roundToDpr: () => (/* binding */ roundToDpr),\n/* harmony export */   roundToStepPrecision: () => (/* binding */ roundToStepPrecision),\n/* harmony export */   roundValue: () => (/* binding */ roundValue),\n/* harmony export */   runIfFn: () => (/* binding */ runIfFn),\n/* harmony export */   setRafInterval: () => (/* binding */ setRafInterval),\n/* harmony export */   setRafTimeout: () => (/* binding */ setRafTimeout),\n/* harmony export */   setValueAtIndex: () => (/* binding */ setValueAtIndex),\n/* harmony export */   snapValueToStep: () => (/* binding */ snapValueToStep),\n/* harmony export */   splitProps: () => (/* binding */ splitProps),\n/* harmony export */   throttle: () => (/* binding */ throttle),\n/* harmony export */   toArray: () => (/* binding */ toArray),\n/* harmony export */   toFixedNumber: () => (/* binding */ toFixedNumber),\n/* harmony export */   toPx: () => (/* binding */ toPx),\n/* harmony export */   tryCatch: () => (/* binding */ tryCatch),\n/* harmony export */   uniq: () => (/* binding */ uniq),\n/* harmony export */   uuid: () => (/* binding */ uuid),\n/* harmony export */   warn: () => (/* binding */ warn),\n/* harmony export */   wrap: () => (/* binding */ wrap)\n/* harmony export */ });\n// src/array.ts\nfunction toArray(v) {\n  if (!v) return [];\n  return Array.isArray(v) ? v : [v];\n}\nvar fromLength = (length) => Array.from(Array(length).keys());\nvar first = (v) => v[0];\nvar last = (v) => v[v.length - 1];\nvar isEmpty = (v) => v.length === 0;\nvar has = (v, t) => v.indexOf(t) !== -1;\nvar add = (v, ...items) => v.concat(items);\nvar remove = (v, ...items) => v.filter((t) => !items.includes(t));\nvar removeAt = (v, i) => v.filter((_, idx) => idx !== i);\nvar insertAt = (v, i, ...items) => [...v.slice(0, i), ...items, ...v.slice(i)];\nvar uniq = (v) => Array.from(new Set(v));\nvar addOrRemove = (v, item) => {\n  if (has(v, item)) return remove(v, item);\n  return add(v, item);\n};\nfunction clear(v) {\n  while (v.length > 0) v.pop();\n  return v;\n}\nfunction nextIndex(v, idx, opts = {}) {\n  const { step = 1, loop = true } = opts;\n  const next2 = idx + step;\n  const len = v.length;\n  const last2 = len - 1;\n  if (idx === -1) return step > 0 ? 0 : last2;\n  if (next2 < 0) return loop ? last2 : 0;\n  if (next2 >= len) return loop ? 0 : idx > len ? len : idx;\n  return next2;\n}\nfunction next(v, idx, opts = {}) {\n  return v[nextIndex(v, idx, opts)];\n}\nfunction prevIndex(v, idx, opts = {}) {\n  const { step = 1, loop = true } = opts;\n  return nextIndex(v, idx, { step: -step, loop });\n}\nfunction prev(v, index, opts = {}) {\n  return v[prevIndex(v, index, opts)];\n}\nvar chunk = (v, size) => {\n  const res = [];\n  return v.reduce((rows, value, index) => {\n    if (index % size === 0) rows.push([value]);\n    else last(rows)?.push(value);\n    return rows;\n  }, res);\n};\nfunction flatArray(arr) {\n  return arr.reduce((flat, item) => {\n    if (Array.isArray(item)) {\n      return flat.concat(flatArray(item));\n    }\n    return flat.concat(item);\n  }, []);\n}\n\n// src/equal.ts\nvar isArrayLike = (value) => value?.constructor.name === \"Array\";\nvar isArrayEqual = (a, b) => {\n  if (a.length !== b.length) return false;\n  for (let i = 0; i < a.length; i++) {\n    if (!isEqual(a[i], b[i])) return false;\n  }\n  return true;\n};\nvar isEqual = (a, b) => {\n  if (Object.is(a, b)) return true;\n  if (a == null && b != null || a != null && b == null) return false;\n  if (typeof a?.isEqual === \"function\" && typeof b?.isEqual === \"function\") {\n    return a.isEqual(b);\n  }\n  if (typeof a === \"function\" && typeof b === \"function\") {\n    return a.toString() === b.toString();\n  }\n  if (isArrayLike(a) && isArrayLike(b)) {\n    return isArrayEqual(Array.from(a), Array.from(b));\n  }\n  if (!(typeof a === \"object\") || !(typeof b === \"object\")) return false;\n  const keys = Object.keys(b ?? /* @__PURE__ */ Object.create(null));\n  const length = keys.length;\n  for (let i = 0; i < length; i++) {\n    const hasKey = Reflect.has(a, keys[i]);\n    if (!hasKey) return false;\n  }\n  for (let i = 0; i < length; i++) {\n    const key = keys[i];\n    if (!isEqual(a[key], b[key])) return false;\n  }\n  return true;\n};\n\n// src/guard.ts\nvar isDev = () => \"development\" !== \"production\";\nvar isArray = (v) => Array.isArray(v);\nvar isBoolean = (v) => v === true || v === false;\nvar isObjectLike = (v) => v != null && typeof v === \"object\";\nvar isObject = (v) => isObjectLike(v) && !isArray(v);\nvar isNumber = (v) => typeof v === \"number\" && !Number.isNaN(v);\nvar isString = (v) => typeof v === \"string\";\nvar isFunction = (v) => typeof v === \"function\";\nvar isNull = (v) => v == null;\nvar hasProp = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nvar baseGetTag = (v) => Object.prototype.toString.call(v);\nvar fnToString = Function.prototype.toString;\nvar objectCtorString = fnToString.call(Object);\nvar isPlainObject = (v) => {\n  if (!isObjectLike(v) || baseGetTag(v) != \"[object Object]\") return false;\n  const proto = Object.getPrototypeOf(v);\n  if (proto === null) return true;\n  const Ctor = hasProp(proto, \"constructor\") && proto.constructor;\n  return typeof Ctor == \"function\" && Ctor instanceof Ctor && fnToString.call(Ctor) == objectCtorString;\n};\n\n// src/functions.ts\nvar runIfFn = (v, ...a) => {\n  const res = typeof v === \"function\" ? v(...a) : v;\n  return res ?? void 0;\n};\nvar cast = (v) => v;\nvar identity = (v) => v();\nvar noop = () => {\n};\nvar callAll = (...fns) => (...a) => {\n  fns.forEach(function(fn) {\n    fn?.(...a);\n  });\n};\nvar uuid = /* @__PURE__ */ (() => {\n  let id = 0;\n  return () => {\n    id++;\n    return id.toString(36);\n  };\n})();\nfunction match(key, record, ...args) {\n  if (key in record) {\n    const fn = record[key];\n    return isFunction(fn) ? fn(...args) : fn;\n  }\n  const error = new Error(`No matching key: ${JSON.stringify(key)} in ${JSON.stringify(Object.keys(record))}`);\n  Error.captureStackTrace?.(error, match);\n  throw error;\n}\nvar tryCatch = (fn, fallback) => {\n  try {\n    return fn();\n  } catch (error) {\n    if (error instanceof Error) {\n      Error.captureStackTrace?.(error, tryCatch);\n    }\n    return fallback?.();\n  }\n};\nfunction throttle(fn, wait = 0) {\n  let lastCall = 0;\n  let timeout = null;\n  return (...args) => {\n    const now = Date.now();\n    const timeSinceLastCall = now - lastCall;\n    if (timeSinceLastCall >= wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      fn(...args);\n      lastCall = now;\n    } else if (!timeout) {\n      timeout = setTimeout(() => {\n        fn(...args);\n        lastCall = Date.now();\n        timeout = null;\n      }, wait - timeSinceLastCall);\n    }\n  };\n}\nfunction debounce(fn, wait = 0) {\n  let timeout = null;\n  return (...args) => {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n    timeout = setTimeout(() => {\n      fn(...args);\n    }, wait);\n  };\n}\n\n// src/number.ts\nvar { floor, abs, round, min, max, pow, sign } = Math;\nvar isNaN = (v) => Number.isNaN(v);\nvar nan = (v) => isNaN(v) ? 0 : v;\nvar mod = (v, m) => (v % m + m) % m;\nvar wrap = (v, vmax) => (v % vmax + vmax) % vmax;\nvar getMinValueAtIndex = (i, v, vmin) => i === 0 ? vmin : v[i - 1];\nvar getMaxValueAtIndex = (i, v, vmax) => i === v.length - 1 ? vmax : v[i + 1];\nvar isValueAtMax = (v, vmax) => nan(v) >= vmax;\nvar isValueAtMin = (v, vmin) => nan(v) <= vmin;\nvar isValueWithinRange = (v, vmin, vmax) => nan(v) >= vmin && nan(v) <= vmax;\nvar roundValue = (v, vmin, step) => round((nan(v) - vmin) / step) * step + vmin;\nvar clampValue = (v, vmin, vmax) => min(max(nan(v), vmin), vmax);\nvar clampPercent = (v) => clampValue(v, 0, 1);\nvar getValuePercent = (v, vmin, vmax) => (nan(v) - vmin) / (vmax - vmin);\nvar getPercentValue = (p, vmin, vmax, step) => clampValue(roundValue(p * (vmax - vmin) + vmin, vmin, step), vmin, vmax);\nvar roundToStepPrecision = (v, step) => {\n  let rv = v;\n  let ss = step.toString();\n  let pi = ss.indexOf(\".\");\n  let p = pi >= 0 ? ss.length - pi : 0;\n  if (p > 0) {\n    let pw = pow(10, p);\n    rv = round(rv * pw) / pw;\n  }\n  return rv;\n};\nvar roundToDpr = (v, dpr) => typeof dpr === \"number\" ? floor(v * dpr + 0.5) / dpr : round(v);\nvar snapValueToStep = (v, vmin, vmax, step) => {\n  const min2 = vmin != null ? Number(vmin) : 0;\n  const max2 = Number(vmax);\n  const remainder = (v - min2) % step;\n  let snapped = abs(remainder) * 2 >= step ? v + sign(remainder) * (step - abs(remainder)) : v - remainder;\n  snapped = roundToStepPrecision(snapped, step);\n  if (!isNaN(min2) && snapped < min2) {\n    snapped = min2;\n  } else if (!isNaN(max2) && snapped > max2) {\n    const stepsInRange = floor((max2 - min2) / step);\n    const largestValidStep = min2 + stepsInRange * step;\n    snapped = stepsInRange <= 0 || largestValidStep < min2 ? max2 : largestValidStep;\n  }\n  return roundToStepPrecision(snapped, step);\n};\nvar setValueAtIndex = (vs, i, v) => {\n  if (vs[i] === v) return vs;\n  return [...vs.slice(0, i), v, ...vs.slice(i + 1)];\n};\nfunction getValueSetterAtIndex(index, ctx) {\n  const minValueAtIndex = getMinValueAtIndex(index, ctx.values, ctx.min);\n  const maxValueAtIndex = getMaxValueAtIndex(index, ctx.values, ctx.max);\n  let nextValues = ctx.values.slice();\n  return function setValue(value) {\n    let nextValue = snapValueToStep(value, minValueAtIndex, maxValueAtIndex, ctx.step);\n    nextValues = setValueAtIndex(nextValues, index, value);\n    nextValues[index] = nextValue;\n    return nextValues;\n  };\n}\nfunction getNextStepValue(index, ctx) {\n  const nextValue = ctx.values[index] + ctx.step;\n  return getValueSetterAtIndex(index, ctx)(nextValue);\n}\nfunction getPreviousStepValue(index, ctx) {\n  const nextValue = ctx.values[index] - ctx.step;\n  return getValueSetterAtIndex(index, ctx)(nextValue);\n}\nvar getClosestValueIndex = (vs, t) => {\n  let i = vs.findIndex((v) => t - v < 0);\n  if (i === 0) return i;\n  if (i === -1) return vs.length - 1;\n  let vLeft = vs[i - 1];\n  let vRight = vs[i];\n  if (abs(vLeft - t) < abs(vRight - t)) return i - 1;\n  return i;\n};\nvar getClosestValue = (vs, t) => vs[getClosestValueIndex(vs, t)];\nvar getValueRanges = (vs, vmin, vmax, gap) => vs.map((v, i) => ({\n  min: i === 0 ? vmin : vs[i - 1] + gap,\n  max: i === vs.length - 1 ? vmax : vs[i + 1] - gap,\n  value: v\n}));\nvar getValueTransformer = (va, vb) => {\n  const [a, b] = va;\n  const [c, d] = vb;\n  return (v) => a === b || c === d ? c : c + (d - c) / (b - a) * (v - a);\n};\nvar toFixedNumber = (v, d = 0, b = 10) => {\n  const pow2 = Math.pow(b, d);\n  return round(v * pow2) / pow2;\n};\nvar countDecimals = (value) => {\n  if (!Number.isFinite(value)) return 0;\n  let e = 1, p = 0;\n  while (Math.round(value * e) / e !== value) {\n    e *= 10;\n    p += 1;\n  }\n  return p;\n};\nvar decimalOp = (a, op, b) => {\n  let result = op === \"+\" ? a + b : a - b;\n  if (a % 1 !== 0 || b % 1 !== 0) {\n    const multiplier = 10 ** Math.max(countDecimals(a), countDecimals(b));\n    a = Math.round(a * multiplier);\n    b = Math.round(b * multiplier);\n    result = op === \"+\" ? a + b : a - b;\n    result /= multiplier;\n  }\n  return result;\n};\nvar incrementValue = (v, s) => decimalOp(nan(v), \"+\", s);\nvar decrementValue = (v, s) => decimalOp(nan(v), \"-\", s);\nvar toPx = (v) => v != null ? `${v}px` : void 0;\n\n// src/object.ts\nfunction compact(obj) {\n  if (!isPlainObject2(obj) || obj === void 0) return obj;\n  const keys = Reflect.ownKeys(obj).filter((key) => typeof key === \"string\");\n  const filtered = {};\n  for (const key of keys) {\n    const value = obj[key];\n    if (value !== void 0) {\n      filtered[key] = compact(value);\n    }\n  }\n  return filtered;\n}\nvar json = (v) => JSON.parse(JSON.stringify(v));\nvar isPlainObject2 = (v) => {\n  return v && typeof v === \"object\" && v.constructor === Object;\n};\nfunction pick(obj, keys) {\n  const filtered = {};\n  for (const key of keys) {\n    const value = obj[key];\n    if (value !== void 0) {\n      filtered[key] = value;\n    }\n  }\n  return filtered;\n}\nfunction splitProps(props, keys) {\n  const rest = {};\n  const result = {};\n  const keySet = new Set(keys);\n  for (const key in props) {\n    if (keySet.has(key)) {\n      result[key] = props[key];\n    } else {\n      rest[key] = props[key];\n    }\n  }\n  return [result, rest];\n}\nvar createSplitProps = (keys) => {\n  return function split(props) {\n    return splitProps(props, keys);\n  };\n};\nfunction omit(obj, keys) {\n  return createSplitProps(keys)(obj)[1];\n}\n\n// src/timers.ts\nfunction setRafInterval(callback, interval) {\n  let start = performance.now();\n  let handle;\n  function loop(now) {\n    handle = requestAnimationFrame(loop);\n    const delta = now - start;\n    if (delta >= interval) {\n      start = now - delta % interval;\n      callback({ startMs: start, deltaMs: delta });\n    }\n  }\n  handle = requestAnimationFrame(loop);\n  return () => cancelAnimationFrame(handle);\n}\nfunction setRafTimeout(callback, delay) {\n  const start = performance.now();\n  let handle;\n  function loop(now) {\n    handle = requestAnimationFrame(loop);\n    const delta = now - start;\n    if (delta >= delay) {\n      callback();\n    }\n  }\n  handle = requestAnimationFrame(loop);\n  return () => cancelAnimationFrame(handle);\n}\n\n// src/warning.ts\nfunction warn(...a) {\n  const m = a.length === 1 ? a[0] : a[1];\n  const c = a.length === 2 ? a[0] : true;\n  if (c && \"development\" !== \"production\") {\n    console.warn(m);\n  }\n}\nfunction invariant(...a) {\n  const m = a.length === 1 ? a[0] : a[1];\n  const c = a.length === 2 ? a[0] : true;\n  if (c && \"development\" !== \"production\") {\n    throw new Error(m);\n  }\n}\nfunction ensure(c, m) {\n  if (c == null) throw new Error(m());\n}\nfunction ensureProps(props, keys, scope) {\n  let missingKeys = [];\n  for (const key of keys) {\n    if (props[key] == null) missingKeys.push(key);\n  }\n  if (missingKeys.length > 0)\n    throw new Error(`[zag-js${scope ? ` > ${scope}` : \"\"}] missing required props: ${missingKeys.join(\", \")}`);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\n");

/***/ })

};
;